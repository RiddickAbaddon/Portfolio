{"version":3,"sources":["reportWebVitals.js","serviceWorker.js","defines.js","actions/api.js","Utils.js","reducers/api.js","actions/app.js","reducers/app.js","store/index.js","localStorage.js","assets/empty.svg","components/atoms/Footer/Footer.js","components/atoms/Text/Text.js","components/atoms/ToTop/ToTop.js","components/molecules/OfflineInfo/OfflineInfo.js","assets/icons/english.svg","assets/icons/github.svg","assets/icons/polish.svg","components/atoms/Icon/Icon.js","components/molecules/ArrowButton/ArrowButton.js","components/organisms/Navigation/Navigation.js","theme/GlobalStyle.js","theme/MainTheme.js","theme/SlickSliderStyle.js","templates/MainTemplate/MainTemplate.js","assets/backgrounds/hex.png","assets/backgrounds/home.png","assets/mail.svg","components/atoms/Container/Container.js","components/atoms/Divider/Divider.js","components/atoms/Heading/Heading.js","components/atoms/PreloadAbout/PreloadAbout.js","components/atoms/SVG/SVG.js","components/molecules/BackgroundSection/BackgroundSection.js","components/molecules/Button/Button.js","components/atoms/PreloadImage/PreloadImage.js","components/molecules/PreloadTechnologyStack/PreloadTechnologyStack.js","components/molecules/TechnologyStack/TechnologyStack.js","components/atoms/CardWrapper/CardWrapper.js","components/atoms/Glow/Glow.js","components/molecules/Image/Image.js","components/organisms/About/About.js","components/molecules/NoContent/NoContent.js","components/organisms/NoContentInfo/NoContentInfo.js","components/molecules/PreloadCategories/PreloadCategories.js","components/organisms/PreloadCard/PreloadCard.js","components/organisms/PreloadCard/PreloadCards.js","templates/CenterPageTemplate/CenterPageTemplate.js","components/atoms/Badge/Badge.js","components/molecules/Categories/Categories.js","components/molecules/TechnologyStackSmall/TechnologyStackSmall.js","components/organisms/Card/Card.js","templates/RealizationsSliderTemplate/RealizationsSliderTemplate.js","views/Home.js","assets/backgrounds/realizations.png","components/molecules/PreloadText/PreloadText.js","assets/404.svg","views/Page404.js","views/InfoPage.js","components/organisms/PreloadRealization/PreloadRealization.js","assets/authentical_info.png","assets/icons/figma.svg","components/organisms/ProjectHeader/ProjectHeader.js","templates/GalleryTemplate/GalleryTemplate.js","templates/RealizationTemplate/RealizationTemplate.js","views/Realization.js","components/molecules/Dropdown/Dropdown.js","components/molecules/SearchInput/SearchInput.js","components/organisms/FilterPanel/FilterPanel.js","templates/RealizationsGridTemplate/RealizationsGridTemplate.js","views/Realizations.js","views/Root.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","API_URL","API_TOKEN","FETCH_COLLECTION_SUCCESS","FETCH_COLLECTION_FAILURE","FETCH_SINGLETON_SUCCESS","FETCH_SINGLETON_FAILURE","FETCH_THUMBNAIL_SUCCESS","fetchCollection","collection","dispatch","type","axios","params","token","data","payload","entries","err","getDataByIds","idsCollection","result","length","map","_id","finded","find","x","push","getPhrase","phrases","name","language","phrase","capitalizeFirstLetter","string","charAt","toUpperCase","slice","initialState","thumbnails","connectionErrors","apiReducer","action","url","fetchDataFailure","singleton","SET_LANGUAGE","SET_SORT","SET_FILTER","SET_SEARCH","searchTimeout","LANGUAGES","sort","option","direction","filter","category","technology","search","appReducer","value","persistedState","serializedState","localStorage","getItem","JSON","parse","loadState","rootReducer","combineReducers","api","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","subscribe","stringify","setItem","saveState","getState","Footer","styled","footer","theme","bgPrimary","shadow","soft","Text","div","small","fontSize","s","m","line","main","lineclamp","css","mainNumber","fontPrimary","accentColor","ToTop","prevProps","this","props","pathname","scrollTo","top","React","Component","withRouter","Wrapper","errorColor","Icon","SignalWifiOffIcon","connect","IMG","img","loaded","src","useState","setLoaded","setError","onLoad","onError","emptyIcon","StyledButton","button","hard","transparent","white","mid","StyledIcon","ArrowForwardIosRoundedIcon","prev","ArrowButton","defaultProps","nav","infoMargin","breakpoints","min","tablet","max","bgsmall","radius","primary","BackButton","Link","to","NavList","up","Navigation","setLanguage","path","split","backlink","backlinkpath","element","i","as","PolishIcon","EnglishIcon","onClick","href","target","rel","GitHubIcon","setLanguageAction","GlobalStyle","createGlobalStyle","fontFamily","bgMain","MainTheme","bgSecondary","bgBadge","fontSecondary","gradient","accent","preload","glow","slider","xl","l","xs","fontWeight","regular","bold","secondary","easing","mobile","desktop","SlickSliderStyle","PulseMessenger","keyframes","MessengerBackground","LoadNoContentIcon","MainTemplate","fetchPhrases","fetchRealizations","fetchCategories","fetchTechnologies","children","alt","Container","Divider","size","StyledHeading","h1","Heading","PulseAvatar","PulseCircle","PreloadAbout","SVG","Image","align","BackgroundSection","background","ButtonWrapper","ButtonText","span","IconWrapper","Button","IconComponent","icon","Preload","PreloadImage","width","height","PreloadTitle","IconsWrapper","PreloadIcon","delay","delays","getDelays","PreloadTechnologyStack","Show","section","IconLabel","TechnologyStack","technologies","title","image","CardWrapper","Glow","bottom","Pulse","show","StyledPreloadImage","PreloadPulse","fetchThumbnail","thumbnail","isLink","preloadAnimation","thumbnailSrc","getThumbnail","setState","w","h","fetchThumbnailAction","ShowAvatar","ShowBackground","ShowLine","ShowGlow","ShowCircle","ShowText","TextWrapper","StyledText","Avatar","Background","Line","StyledGlow","Circle","About","avatar","NoContent","reload","Category","globaldelay","CategoriesWrapper","PreloadCategories","globalDelay","StyledCardWrapper","Title","DescriptionLine","CardFooter","PreloadCard","smallgap","PreloadCards","CenterPageTemplate","Badge","trim","StyledBadge","Categories","categories","TechnologyStackSmall","StyledTechnologyStack","StyledImage","Card","text","link","description","ReactHtmlParser","replace","StyledSlider","Slider","SliderShadow","StyledArrowButton","Slide","RealizationsSliderTemplate","realizations","settings","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","responsive","breakpoint","realization","refCategories","refTechnologies","sortRealizations","a","b","_created","Home","fetchAbout","about","bgHome","singletonAbout","collectionTechnologies","collectionRealizations","collectionCategories","bgHex","mailIcon","PreloadLine","PreloadText","Page404","image404","InfoPage","fetchPages","pages","pageSlug","page","name_slug","bgRealizations","reactHtmlParser","collectionPages","PreloadHeader","PreloadHeaderImage","PreloadHeaderTitle","PreloadButton","PreloadRealization","header","HeadingWrapper","ProjectHeader","ImageWrapper","GalleryTemplate","gallery","meta","asset","FigmaIcon","FigmaIconURL","ButtonsWrapper","ButtonContainer","AuthenticalInfoWrapper","StyledAuthenticalInfoImage","RealizationTemplate","links","field","label","WebAssetIcon","LinkIcon","GetAppIcon","authentical_info","authenticalInfoImage","Realization","id","project","projectCategories","projectTechnologies","isFocus","Select","select","active","DropdownList","Option","radiusSecondary","Value","Dropdown","createRef","isOpen","sortDirection","defaultvalue","options","e","message","currentTarget","contains","relatedTarget","selectedValue","current","setValueCallback","blur","newSortDirection","buttonDisplay","display","tabIndex","onBlur","handleBlurDropdown","call","onFocus","handleFocusDropdown","ref","defaultValue","optValue","toggleSortDirection","selected","handleClickOption","Input","input","SearchIcon","SearchInput","setValue","placeholder","onChange","changeValue","Section","StyledDropdown","StyledSearch","FilterPanel","setSort","setFilter","setSearch","dropdownData","dropdownCategories","projectsCount","dropdownTechnologies","findedCategory","y","findedTechnology","getDropdownData","setSortAction","setFilterAction","clearTimeout","setTimeout","setSearchAction","RealizationsGridTemplate","Realizations","filtered","sortTrue","sortFalse","firstCategoryA","firstCategoryB","displayA","displayB","localeCompare","toLowerCase","includes","filterRealizations","Root","component","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bc91859f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-console */\n/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n   window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n   if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n      if (publicUrl.origin !== window.location.origin) {\n         // Our service worker won't work if PUBLIC_URL is on a different origin\n         // from what our page is served on. This might happen if a CDN is used to\n         // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n         return\n      }\n\n      window.addEventListener('load', () => {\n         const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n         if (isLocalhost) {\n            // This is running on localhost. Let's check if a service worker still exists or not.\n            checkValidServiceWorker(swUrl, config)\n\n            // Add some additional logging to localhost, pointing developers to the\n            // service worker/PWA documentation.\n            navigator.serviceWorker.ready.then(() => {\n               console.log(\n                  'This web app is being served cache-first by a service ' +\n                     'worker. To learn more, visit https://bit.ly/CRA-PWA',\n               )\n            })\n         } else {\n            // Is not localhost. Just register service worker\n            registerValidSW(swUrl, config)\n         }\n      })\n   }\n}\n\nfunction registerValidSW(swUrl, config) {\n   navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n         registration.onupdatefound = () => {\n            const installingWorker = registration.installing\n            if (installingWorker == null) {\n               return\n            }\n            installingWorker.onstatechange = () => {\n               if (installingWorker.state === 'installed') {\n                  if (navigator.serviceWorker.controller) {\n                     // At this point, the updated precached content has been fetched,\n                     // but the previous service worker will still serve the older\n                     // content until all client tabs are closed.\n                     console.log(\n                        'New content is available and will be used when all ' +\n                           'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                     )\n\n                     // Execute callback\n                     if (config && config.onUpdate) {\n                        config.onUpdate(registration)\n                     }\n                  } else {\n                     // At this point, everything has been precached.\n                     // It's the perfect time to display a\n                     // \"Content is cached for offline use.\" message.\n                     console.log('Content is cached for offline use.')\n\n                     // Execute callback\n                     if (config && config.onSuccess) {\n                        config.onSuccess(registration)\n                     }\n                  }\n               }\n            }\n         }\n      })\n      .catch((error) => {\n         console.error('Error during service worker registration:', error)\n      })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n   // Check if the service worker can be found. If it can't reload the page.\n   fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n   })\n      .then((response) => {\n         // Ensure service worker exists, and that we really are getting a JS file.\n         const contentType = response.headers.get('content-type')\n         if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n         ) {\n            // No service worker found. Probably a different app. Reload the page.\n            navigator.serviceWorker.ready.then((registration) => {\n               registration.unregister().then(() => {\n                  window.location.reload()\n               })\n            })\n         } else {\n            // Service worker found. Proceed as normal.\n            registerValidSW(swUrl, config)\n         }\n      })\n      .catch(() => {\n         console.log('No internet connection found. App is running in offline mode.')\n      })\n}\n\nexport function unregister() {\n   if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n         .then((registration) => {\n            registration.unregister()\n         })\n         .catch((error) => {\n            console.error(error.message)\n         })\n   }\n}\n","export const API_URL = 'https://panel.marcin-kalinowski.pl'\nexport const API_TOKEN = '69f36c76083d3d848b1734c37e9270'\n","import axios from 'axios'\nimport { API_TOKEN, API_URL } from 'defines'\n\nexport const FETCH_COLLECTION_REQUEST = 'FETCH_COLLECTION_REQUEST'\nexport const FETCH_COLLECTION_SUCCESS = 'FETCH_COLLECTION_SUCCESS'\nexport const FETCH_COLLECTION_FAILURE = 'FETCH_COLLECTION_FAILURE'\n\nexport const FETCH_SINGLETON_REQUEST = 'FETCH_SINGLETON_REQUEST'\nexport const FETCH_SINGLETON_SUCCESS = 'FETCH_SINGLETON_SUCCESS'\nexport const FETCH_SINGLETON_FAILURE = 'FETCH_SINGLETON_FAILURE'\n\nexport const FETCH_THUMBNAIL_REQUEST = 'FETCH_THUMBNAIL_REQUEST'\nexport const FETCH_THUMBNAIL_SUCCESS = 'FETCH_THUMBNAIL_SUCCESS'\nexport const FETCH_THUMBNAIL_FAILURE = 'FETCH_THUMBNAIL_FAILURE'\n\nexport const fetchCollection = (collection) => (dispatch) => {\n   dispatch({ type: FETCH_COLLECTION_REQUEST })\n\n   return axios(`${API_URL}/api/collections/get/${collection}`, {\n      params: {\n         token: API_TOKEN,\n      },\n   })\n      .then(({ data }) => {\n         dispatch({\n            type: FETCH_COLLECTION_SUCCESS,\n            payload: {\n               type: collection,\n               data: data.entries,\n            },\n         })\n      })\n      .catch((err) => dispatch({ type: FETCH_COLLECTION_FAILURE, payload: { err, collection } }))\n}\n\nexport const fetchSingleton = (singleton) => (dispatch) => {\n   dispatch({ type: FETCH_SINGLETON_REQUEST })\n\n   return axios(`${API_URL}/api/singletons/get/${singleton}`, {\n      params: {\n         token: API_TOKEN,\n      },\n   })\n      .then(({ data }) => {\n         dispatch({\n            type: FETCH_SINGLETON_SUCCESS,\n            payload: {\n               type: singleton,\n               data,\n            },\n         })\n      })\n      .catch((err) => dispatch({ type: FETCH_SINGLETON_FAILURE, payload: { err, singleton } }))\n}\n\nexport const fetchThumbnail = (path, width, height) => (dispatch) => {\n   dispatch({ type: FETCH_THUMBNAIL_REQUEST })\n\n   return axios(`${API_URL}/api/cockpit/image`, {\n      params: {\n         token: API_TOKEN,\n         src: path,\n         w: width,\n         h: height,\n      },\n   })\n      .then(({ data }) => {\n         dispatch({\n            type: FETCH_THUMBNAIL_SUCCESS,\n            payload: {\n               name: `${path}/${width}/${height}`,\n               url: data,\n            },\n         })\n      })\n      .catch((err) => dispatch({ type: FETCH_THUMBNAIL_FAILURE, payload: err }))\n}\n","/* eslint-disable import/prefer-default-export */\nexport const getDataByIds = (idsCollection, collection) => {\n   const result = []\n   if (idsCollection.length) {\n      idsCollection.map(({ _id }) => {\n         const finded = collection.find((x) => x._id === _id)\n         if (finded) result.push(finded)\n         return 0\n      })\n   }\n   return result\n}\n\nexport const removeHtmlTags = (text) => {\n   return text.replace(/(<([^>]+)>)/gi, '').trim()\n}\n\nexport const getPhrase = (phrases, name, language) => {\n   if (phrases) {\n      const phrase = phrases.find((x) => x.name === name)\n      return phrase ? phrase[language] : name\n   }\n   return '...'\n}\n\nexport const getThumbnail = (thumbnails, path, size) => {\n   if (thumbnails) {\n      const width = size[0] || 200\n      const height = size[1] || width\n      const thumbnail = thumbnails.find((x) => x.name === `${path}/${width}/${height}`)\n      if (thumbnail) return thumbnail.url\n      return null\n   }\n   return null\n}\n\nexport const capitalizeFirstLetter = (string) => {\n   return string.charAt(0).toUpperCase() + string.slice(1)\n}\n","import {\n   FETCH_COLLECTION_FAILURE,\n   FETCH_COLLECTION_SUCCESS,\n   FETCH_SINGLETON_FAILURE,\n   FETCH_SINGLETON_SUCCESS,\n   FETCH_THUMBNAIL_SUCCESS,\n} from 'actions/api'\nimport { capitalizeFirstLetter } from 'Utils'\n\nconst initialState = {\n   thumbnails: [],\n   connectionErrors: {},\n}\n\nconst apiReducer = (state = initialState, action) => {\n   switch (action.type) {\n      case FETCH_COLLECTION_SUCCESS: {\n         return {\n            ...state,\n            [action.payload.type]: [...action.payload.data],\n         }\n      }\n      case FETCH_SINGLETON_SUCCESS: {\n         return {\n            ...state,\n            [action.payload.type]: action.payload.data,\n         }\n      }\n      case FETCH_THUMBNAIL_SUCCESS: {\n         return {\n            ...state,\n            thumbnails: [\n               ...state.thumbnails,\n               {\n                  name: action.payload.name,\n                  url: action.payload.url,\n               },\n            ],\n         }\n      }\n      case FETCH_SINGLETON_FAILURE: {\n         return {\n            ...state,\n            connectionErrors: {\n               ...state.connectionErrors,\n               fetchDataFailure: true,\n               [`singleton${capitalizeFirstLetter(action.payload.singleton)}`]: true,\n            },\n         }\n      }\n      case FETCH_COLLECTION_FAILURE: {\n         return {\n            ...state,\n            connectionErrors: {\n               ...state.connectionErrors,\n               fetchDataFailure: true,\n               [`collection${capitalizeFirstLetter(action.payload.collection)}`]: true,\n            },\n         }\n      }\n      case '@@INIT': {\n         return {\n            ...state,\n            connectionErrors: {},\n         }\n      }\n      default:\n         return state\n   }\n}\n\nexport default apiReducer\n","export const SET_LANGUAGE = 'SET_LANGUAGE'\nexport const SET_SORT = 'SET_SORT'\nexport const SET_FILTER = 'SET_FILTER'\nexport const SET_SEARCH = 'SET_SEARCH'\n\nexport const DEFAULT_SORT = 'date'\nexport const DEFAULT_SORT_DIRECTION = 'asc'\nexport const DEFAULT_CATEGORY = 'all'\nexport const DEFAULT_TECHNOLOGY = 'all'\n\nlet searchTimeout = null\n\nexport const LANGUAGES = {\n   pl: 'pl',\n   en: 'en',\n}\n\nexport const setLanguage = (language) => (dispatch) => {\n   dispatch({ type: SET_LANGUAGE, payload: { language } })\n}\n\nexport const setSort = (option, direction) => (dispatch) => {\n   dispatch({ type: SET_SORT, payload: { option, direction } })\n}\n\nexport const setFilter = (type, value) => (dispatch) => {\n   dispatch({ type: SET_FILTER, payload: { type, value } })\n}\n\nexport const setSearch = (phrase) => (dispatch) => {\n   clearTimeout(searchTimeout)\n   searchTimeout = setTimeout(() => {\n      dispatch({ type: SET_SEARCH, payload: { phrase } })\n   }, 300)\n}\n","import {\n   DEFAULT_CATEGORY,\n   DEFAULT_SORT,\n   DEFAULT_SORT_DIRECTION,\n   DEFAULT_TECHNOLOGY,\n   LANGUAGES,\n   SET_FILTER,\n   SET_LANGUAGE,\n   SET_SEARCH,\n   SET_SORT,\n} from 'actions/app'\n\nconst initialState = {\n   language: LANGUAGES.pl,\n   sort: {\n      option: DEFAULT_SORT,\n      direction: DEFAULT_SORT_DIRECTION,\n   },\n   filter: {\n      category: DEFAULT_CATEGORY,\n      technology: DEFAULT_TECHNOLOGY,\n      search: '',\n   },\n}\n\nconst appReducer = (state = initialState, action) => {\n   switch (action.type) {\n      case SET_LANGUAGE: {\n         return {\n            ...state,\n            language: action.payload.language,\n         }\n      }\n      case SET_SORT: {\n         return {\n            ...state,\n            sort: {\n               option: action.payload.option,\n               direction: action.payload.direction,\n            },\n         }\n      }\n      case SET_FILTER: {\n         return {\n            ...state,\n            filter: {\n               ...state.filter,\n               [action.payload.type]: action.payload.value,\n            },\n         }\n      }\n      case SET_SEARCH: {\n         return {\n            ...state,\n            filter: {\n               ...state.filter,\n               search: action.payload.phrase,\n            },\n         }\n      }\n      default:\n         return state\n   }\n}\n\nexport default appReducer\n","import { loadState, saveState } from 'localStorage'\nimport apiReducer from 'reducers/api'\nimport appReducer from 'reducers/app'\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux'\nimport thunk from 'redux-thunk'\n\nconst persistedState = loadState()\n\nconst rootReducer = combineReducers({\n   api: apiReducer,\n   app: appReducer,\n})\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(rootReducer, persistedState, composeEnhancers(applyMiddleware(thunk)))\n/* eslint-enable */\n\nstore.subscribe(() => {\n   saveState({\n      api: store.getState().api,\n      app: store.getState().app,\n   })\n})\n\nexport default store\n","export const loadState = () => {\n   try {\n      const serializedState = localStorage.getItem('state')\n      if (serializedState === null) {\n         return undefined\n      }\n      return JSON.parse(serializedState)\n   } catch (err) {\n      return undefined\n   }\n}\n\nexport const saveState = (state) => {\n   try {\n      const serializedState = JSON.stringify(state)\n      localStorage.setItem('state', serializedState)\n   } catch {\n      // ignore write errors\n   }\n}\n","export default __webpack_public_path__ + \"static/media/empty.bc28a2a6.svg\";","import styled from 'styled-components'\n\nconst Footer = styled.footer`\n   min-height: 104px;\n   background: ${({ theme }) => theme.bgPrimary};\n   box-shadow: ${({ theme }) => theme.shadow.soft};\n   padding: 34px 50px;\n`\n\nexport default Footer\n","import styled, { css } from 'styled-components'\n\nconst Text = styled.div`\n   margin: 0;\n   font-size: ${({ small, theme }) => (small ? theme.fontSize.s : theme.fontSize.m)};\n   text-align: center;\n   line-height: ${({ theme }) => theme.line.main};\n   ${({ lineclamp, theme }) =>\n      lineclamp &&\n      css`\n         display: -webkit-box;\n         -webkit-line-clamp: ${lineclamp};\n         -webkit-box-orient: vertical;\n         overflow: hidden;\n         height: ${theme.line.mainNumber * lineclamp}em;\n      `}\n\n   a {\n      color: ${({ theme }) => theme.fontPrimary};\n\n      :hover {\n         color: ${({ theme }) => theme.accentColor};\n      }\n   }\n`\n\nexport default Text\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ToTop extends React.Component {\n   componentDidUpdate(prevProps) {\n      const {\n         location: { pathname },\n      } = this.props\n      const {\n         location: { pathname: prevPathname },\n      } = prevProps\n      if (pathname !== prevPathname) {\n         window.scrollTo({ top: 0 })\n      }\n   }\n\n   render() {\n      return null\n   }\n}\n\nToTop.propTypes = {\n   location: PropTypes.shape({\n      pathname: PropTypes.string,\n   }).isRequired,\n}\n\nexport default withRouter(ToTop)\n","import SignalWifiOffIcon from '@material-ui/icons/SignalWifiOff'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n   position: fixed;\n   z-index: 9;\n   top: 0;\n   left: 0;\n   width: 100%;\n   font-size: ${({ theme }) => theme.fontSize.s};\n   padding: 10px;\n   color: ${({ theme }) => theme.fontPrimary};\n   text-align: center;\n   background: ${({ theme }) => theme.errorColor};\n`\n\nconst Icon = styled(SignalWifiOffIcon)`\n   position: relative;\n   top: 2px;\n`\n\nconst OfflineInfo = ({ language }) => (\n   <Wrapper>\n      {language === 'en' ? 'Page is in offline mode' : 'Strona jest w trybie offline'}&nbsp;\n      <Icon />\n   </Wrapper>\n)\n\nOfflineInfo.propTypes = {\n   language: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = ({ app: { language } }) => ({ language })\n\nexport default connect(mapStateToProps)(OfflineInfo)\n","export default __webpack_public_path__ + \"static/media/english.edd87ebb.svg\";","export default __webpack_public_path__ + \"static/media/github.e1de1b7b.svg\";","export default __webpack_public_path__ + \"static/media/polish.6097c2d2.svg\";","import emptyIcon from 'assets/empty.svg'\nimport PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\n\nconst IMG = styled.img`\n   width: ${({ small }) => (small ? 32 : 64)}px;\n   height: ${({ small }) => (small ? 32 : 64)}px;\n   object-fit: contain;\n   opacity: ${({ loaded }) => (loaded ? 1 : 0)};\n   will-change: transform;\n   transition: opacity 0.3s ease-out;\n`\n\nconst Icon = ({ src, ...props }) => {\n   const [loaded, setLoaded] = useState(false)\n   const [error, setError] = useState(false)\n\n   return (\n      <IMG\n         loaded={loaded}\n         onLoad={() => setLoaded(true)}\n         onError={() => {\n            setLoaded(true)\n            setError(true)\n         }}\n         src={error ? emptyIcon : src}\n         {...props}\n      />\n   )\n}\n\nIcon.propTypes = {\n   src: PropTypes.string.isRequired,\n}\n\nexport default Icon\n","import ArrowForwardIosRoundedIcon from '@material-ui/icons/ArrowForwardIosRounded'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst StyledButton = styled.button`\n   width: 64px;\n   height: 64px;\n   background: ${({ theme }) => theme.bgPrimary} !important;\n   border-radius: 32px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   box-shadow: ${({ theme }) => theme.shadow.hard};\n   color: ${({ theme }) => theme.fontPrimary};\n   border: none;\n   cursor: pointer;\n   position: relative;\n\n   ::before {\n      content: '';\n      position: absolute;\n      display: block;\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      background-color: ${({ theme }) => theme.transparent.white.mid};\n      will-change: transform;\n      opacity: 0;\n      top: 0;\n      left: 0;\n      transition: opacity 0.5s linear, transform 0.5s ease-out;\n      transform: scale(1);\n   }\n\n   &:active::before {\n      opacity: 1;\n      transition: opacity 0s linear, transform 0s ease-out;\n      transform: scale(0);\n   }\n`\n\nconst StyledIcon = styled(ArrowForwardIosRoundedIcon)`\n   color: ${({ theme }) => theme.fontPrimary} !important;\n   font-size: 32px !important;\n   ${({ prev }) =>\n      prev === 'true' &&\n      css`\n         transform: rotate(180deg);\n      `}\n`\n\nconst ArrowButton = ({ prev, ...props }) => (\n   <StyledButton {...props}>\n      <StyledIcon prev={prev ? 'true' : null} />\n   </StyledButton>\n)\n\nArrowButton.propTypes = {\n   prev: PropTypes.bool,\n}\n\nArrowButton.defaultProps = {\n   prev: false,\n}\n\nexport default ArrowButton\n","import { LANGUAGES, setLanguage as setLanguageAction } from 'actions/app'\nimport EnglishIcon from 'assets/icons/english.svg'\nimport GitHubIcon from 'assets/icons/github.svg'\nimport PolishIcon from 'assets/icons/polish.svg'\nimport Icon from 'components/atoms/Icon/Icon'\nimport ArrowButton from 'components/molecules/ArrowButton/ArrowButton'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport styled, { css } from 'styled-components'\n\nconst Wrapper = styled.nav`\n   position: fixed;\n   top: ${({ infoMargin }) => (infoMargin ? '40px' : 0)};\n   left: 0;\n   padding: 20px;\n   z-index: 10;\n   pointer-events: none;\n\n   @media ${({ theme }) => theme.breakpoints.min.tablet} {\n      width: 104px;\n   }\n   @media ${({ theme }) => theme.breakpoints.max.tablet} {\n      display: flex;\n\n      ::before {\n         content: '';\n         position: absolute;\n         top: 10px;\n         left: 10px;\n         height: 84px;\n         width: ${({ bgsmall }) => (bgsmall ? 168 : 252)}px;\n         border-radius: ${({ theme }) => theme.radius.primary};\n         backdrop-filter: blur(10px);\n         box-shadow: ${({ theme }) => theme.shadow.soft};\n      }\n   }\n\n   a,\n   img {\n      pointer-events: all;\n   }\n`\n\nconst BackButton = styled(Link)`\n   will-change: transform;\n   transition: transform 0.2s ease-out;\n   height: 64px;\n   display: block;\n   border-radius: 50%;\n\n   ${({ to }) =>\n      to !== '#'\n         ? css`\n              transform: scale(1);\n              pointer-events: all;\n           `\n         : css`\n              transform: scale(0);\n              pointer-events: none;\n           `}\n`\n\nconst NavList = styled.div`\n   will-change: transform;\n   transition: transform 0.3s ease-out;\n\n   ${({ up }) =>\n      up &&\n      css`\n         @media ${({ theme }) => theme.breakpoints.min.tablet} {\n            transform: translateY(-84px);\n         }\n         @media ${({ theme }) => theme.breakpoints.max.tablet} {\n            transform: translateX(-84px);\n         }\n      `}\n`\n\nconst StyledIcon = styled(Icon)`\n   cursor: pointer;\n\n   @media ${({ theme }) => theme.breakpoints.min.tablet} {\n      margin: 20px 0;\n   }\n   @media ${({ theme }) => theme.breakpoints.max.tablet} {\n      margin: 0 20px;\n   }\n`\n\nconst Navigation = ({ language, setLanguage, location, infoMargin }) => {\n   const path = location.pathname.split('/').filter((x) => x !== '')\n\n   let backlink = '#'\n   if (path.length) {\n      if (path.length > 1) {\n         let backlinkpath = ''\n         path.map((element, i) => {\n            if (i < path.length - 1) {\n               backlinkpath += `/${element}`\n            }\n            return 0\n         })\n\n         backlink = backlinkpath\n      } else {\n         backlink = '/'\n      }\n   }\n\n   return (\n      <Wrapper bgsmall={backlink === '#'} infoMargin={infoMargin}>\n         <BackButton to={backlink}>\n            <ArrowButton prev as=\"span\" />\n         </BackButton>\n         <NavList up={backlink === '#'}>\n            <StyledIcon\n               src={language === LANGUAGES.pl ? PolishIcon : EnglishIcon}\n               onClick={() => {\n                  setLanguage(language === LANGUAGES.pl ? LANGUAGES.en : LANGUAGES.pl)\n               }}\n            />\n            <a href=\"https://github.com/RiddickAbaddon\" target=\"_blank\" rel=\"noopener noreferrer\">\n               <Icon src={GitHubIcon} />\n            </a>\n         </NavList>\n      </Wrapper>\n   )\n}\n\nNavigation.propTypes = {\n   language: PropTypes.string.isRequired,\n   setLanguage: PropTypes.func.isRequired,\n   location: PropTypes.shape({\n      pathname: PropTypes.string,\n   }).isRequired,\n   infoMargin: PropTypes.bool,\n}\n\nNavigation.defaultProps = {\n   infoMargin: false,\n}\n\nconst mapStateToProps = ({ app: { language } }) => ({ language })\n\nconst mapDispatchToProps = (dispatch) => ({\n   setLanguage: (language) => dispatch(setLanguageAction(language)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Navigation))\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n   *, *::before, *::after {\n      box-sizing: border-box;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n   }\n\n   html {\n      font-size: 10px;\n      font-family: ${({ theme }) => theme.fontFamily.primary};\n   }\n\n   body {\n      margin: 0;\n      padding: 0;\n      font-size: ${({ theme }) => theme.fontSize.m};\n      background: ${({ theme }) => theme.bgMain};\n      color: ${({ theme }) => theme.fontPrimary};\n\n      @media ${({ theme }) => theme.breakpoints.max.tablet} {\n         margin: 0 !important;\n      }\n   }\n\n   input, button, textarea {\n      font-family: ${({ theme }) => theme.fontFamily.primary};\n   }\n\n   ::selection {\n      background: ${({ theme }) => theme.accentColor};\n   }\n`\n\nexport default GlobalStyle\n","const MainTheme = {\n   bgMain: 'hsl(0, 3%, 20%)',\n   bgPrimary: 'hsl(0, 3%, 25%)',\n   bgSecondary: 'hsl(0, 3%, 30%)',\n   bgBadge: 'hsl(0, 2%, 22%)',\n   fontPrimary: 'hsl(0, 0%, 100%)',\n   fontSecondary: 'hsl(0, 0%, 77%)',\n   accentColor: 'hsl(32, 100%, 50%)',\n   errorColor: 'hsl(0, 100%, 60%)',\n\n   transparent: {\n      white: {\n         soft: 'hsla(0, 0%, 100%, 0.1)',\n         mid: 'hsla(0, 0%, 100%, 0.2)',\n      },\n   },\n   gradient: {\n      accent: 'linear-gradient(125.64deg, hsl(29, 100%, 50%) 22.46%, hsl(338, 100%, 50%) 77.9%)',\n      preload:\n         'linear-gradient(90deg, hsl(0, 2%, 22%) 0%, hsl(0, 0%, 35%) 30%, hsl(0, 0%, 35%) 40%, hsl(0, 2%, 22%) 100%)',\n      glow:\n         'radial-gradient(50% 100% at 50% 0%, hsla(40, 100%, 50%, 0.17) 0%, hsla(40, 100%, 50%, 0) 100%)',\n      slider: 'linear-gradient(to left, black 0%, transparent 100%)',\n   },\n   fontSize: {\n      xl: '7.2rem',\n      l: '3.6rem',\n      m: '2.4rem',\n      s: '1.6rem',\n      xs: '1.2rem',\n   },\n   fontWeight: {\n      regular: 400,\n      bold: 700,\n   },\n   fontFamily: {\n      primary: `'Montserrat', sans-serif`,\n   },\n   shadow: {\n      soft: '0px 5px 25px -5px hsla(0, 0%, 0%, 0.25)',\n      hard: '0px 5px 25px -5px hsl(0, 0%, 0%)',\n      glow: '0px 0px 15px hsla(40, 100%, 50%, 0.35)',\n   },\n   radius: {\n      primary: '20px',\n      secondary: '10px',\n   },\n   line: {\n      main: '1.5em',\n      mainNumber: 1.5,\n   },\n   easing: {\n      primary: 'cubic-bezier(0.4, 0.96, 0.87, 0.98)',\n   },\n   breakpoints: {\n      max: {\n         mobile: '(max-width: 576px)',\n         tablet: '(max-width: 768px)',\n         desktop: '(max-width: 1200px)',\n      },\n      min: {\n         mobile: '(min-width: 577px)',\n         tablet: '(min-width: 769px)',\n         desktop: '(min-width: 1201px)',\n      },\n   },\n}\n\nexport default MainTheme\n","import { createGlobalStyle } from 'styled-components'\n\nconst SlickSliderStyle = createGlobalStyle`\n   .slick-slider\n   {\n      display: block;\n      box-sizing: border-box;\n      position: static;\n\n      -webkit-user-select: none;\n         -moz-user-select: none;\n          -ms-user-select: none;\n              user-select: none;\n\n      -webkit-touch-callout: none;\n         -khtml-user-select: none;\n           -ms-touch-action: pan-y;\n               touch-action: pan-y;\n      -webkit-tap-highlight-color: transparent;\n   }\n\n   .slick-list\n   {\n      position: relative;\n\n      display: block;\n\n      margin: 0;\n      padding: 0;\n   }\n   .slick-list:focus\n   {\n      outline: none;\n   }\n   .slick-list.dragging\n   {\n      cursor: pointer;\n      cursor: hand;\n   }\n\n   .slick-slider .slick-track,\n   .slick-slider .slick-list\n   {\n      -webkit-transform: translate3d(0, 0, 0);\n         -moz-transform: translate3d(0, 0, 0);\n          -ms-transform: translate3d(0, 0, 0);\n           -o-transform: translate3d(0, 0, 0);\n              transform: translate3d(0, 0, 0);\n   }\n\n   .slick-track\n   {\n      position: relative;\n      top: 0;\n      left: 0;\n\n      display: block;\n      margin-left: auto;\n      margin-right: auto;\n   }\n   .slick-track:before,\n   .slick-track:after\n   {\n      display: table;\n\n      content: '';\n   }\n   .slick-track:after\n   {\n      clear: both;\n   }\n   .slick-loading .slick-track\n   {\n      visibility: hidden;\n   }\n\n   .slick-slide\n   {\n      display: none;\n      float: left;\n\n      height: 100%;\n      min-height: 1px;\n   }\n   [dir='rtl'] .slick-slide\n   {\n      float: right;\n   }\n   .slick-slide img\n   {\n      display: block;\n   }\n   .slick-slide.slick-loading img\n   {\n      display: none;\n   }\n   .slick-slide.dragging img\n   {\n      pointer-events: none;\n   }\n   .slick-initialized .slick-slide\n   {\n      display: block;\n   }\n   .slick-loading .slick-slide\n   {\n      visibility: hidden;\n   }\n   .slick-vertical .slick-slide\n   {\n      display: block;\n\n      height: auto;\n\n      border: 1px solid transparent;\n   }\n   .slick-arrow.slick-hidden {\n      display: none;\n   }\n\n`\n\nexport default SlickSliderStyle\n","import { fetchCollection } from 'actions/api'\nimport emptyIcon from 'assets/empty.svg'\nimport Footer from 'components/atoms/Footer/Footer'\nimport Text from 'components/atoms/Text/Text'\nimport ToTop from 'components/atoms/ToTop/ToTop'\nimport OfflineInfo from 'components/molecules/OfflineInfo/OfflineInfo'\nimport Navigation from 'components/organisms/Navigation/Navigation'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport styled, { keyframes, ThemeProvider } from 'styled-components'\nimport GlobalStyle from 'theme/GlobalStyle'\nimport MainTheme from 'theme/MainTheme'\nimport SlickSliderStyle from 'theme/SlickSliderStyle'\nimport { getPhrase } from 'Utils'\n\nconst PulseMessenger = keyframes`\n   from {\n      opacity: 1;\n      transform: scale(0);\n   }\n   to {\n      opacity: 0;\n      transform: scale(1);\n   }\n`\n\nconst Wrapper = styled.div`\n   min-height: calc(100vh - 104px);\n   overflow: hidden;\n`\n\nconst MessengerBackground = styled.div`\n   position: fixed;\n   width: 64px;\n   height: 64px;\n   left: 20px;\n   bottom: 20px;\n   border-radius: 50%;\n   background-color: ${({ theme }) => theme.accentColor};\n   z-index: 9;\n\n   ::before {\n      content: '';\n      display: block;\n      position: absolute;\n      width: 58px;\n      height: 58px;\n      top: 3px;\n      left: 3px;\n      border-radius: 50%;\n      will-change: transform;\n      background: ${({ theme }) => theme.transparent.white.mid};\n      animation: ${PulseMessenger} 1s ease-out infinite;\n   }\n`\n\nconst LoadNoContentIcon = styled.img`\n   width: 0;\n   height: 0;\n   position: absolute;\n   top: 0;\n   left: 0;\n`\n\nclass MainTemplate extends React.Component {\n   componentDidMount() {\n      const { fetchPhrases, fetchRealizations, fetchCategories, fetchTechnologies } = this.props\n      fetchPhrases()\n      fetchRealizations()\n      fetchCategories()\n      fetchTechnologies()\n   }\n\n   render() {\n      const { children, language, phrases, connectionErrors } = this.props\n      return (\n         <ThemeProvider theme={MainTheme}>\n            {connectionErrors.fetchDataFailure && <OfflineInfo />}\n            <ToTop />\n            <GlobalStyle />\n            <SlickSliderStyle />\n            <Navigation infoMargin={connectionErrors.fetchDataFailure} />\n            <Wrapper>{children}</Wrapper>\n            <Footer>\n               <Text>\n                  2020 © marcin-kalinowski.pl |{' '}\n                  <Link to=\"/cookies-policy\">{getPhrase(phrases, 'cookies-policy', language)}</Link>\n               </Text>\n            </Footer>\n            <MessengerBackground />\n            <LoadNoContentIcon src={emptyIcon} alt=\"no content\" />\n         </ThemeProvider>\n      )\n   }\n}\n\nMainTemplate.propTypes = {\n   children: PropTypes.element.isRequired,\n   language: PropTypes.string.isRequired,\n   phrases: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   fetchPhrases: PropTypes.func.isRequired,\n   fetchRealizations: PropTypes.func.isRequired,\n   fetchCategories: PropTypes.func.isRequired,\n   fetchTechnologies: PropTypes.func.isRequired,\n   // eslint-disable-next-line react/forbid-prop-types\n   connectionErrors: PropTypes.object.isRequired,\n}\n\nMainTemplate.defaultProps = {\n   phrases: null,\n}\n\nconst mapStateToProps = ({ api: { phrases, connectionErrors }, app: { language } }) => ({\n   phrases,\n   language,\n   connectionErrors,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n   fetchPhrases: () => dispatch(fetchCollection('phrases')),\n   fetchRealizations: () => dispatch(fetchCollection('realizations')),\n   fetchCategories: () => dispatch(fetchCollection('categories')),\n   fetchTechnologies: () => dispatch(fetchCollection('technologies')),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainTemplate)\n","export default __webpack_public_path__ + \"static/media/hex.757ea6b8.png\";","export default __webpack_public_path__ + \"static/media/home.d21347a7.png\";","export default __webpack_public_path__ + \"static/media/mail.7e39f103.svg\";","import styled from 'styled-components'\n\nconst Container = styled.div`\n   margin: 0 auto;\n   text-align: center;\n\n   @media ${({ theme }) => theme.breakpoints.min.tablet} {\n      max-width: ${({ small }) => (small ? 800 : 1000) + 208}px;\n      padding: 0 104px;\n   }\n   @media ${({ theme }) => theme.breakpoints.max.tablet} {\n      max-width: ${({ small }) => (small ? 800 : 1000) + 40}px;\n      padding: 0 20px;\n   }\n`\n\nexport default Container\n","import styled, { css } from 'styled-components'\n\nconst Divider = styled.div`\n   height: ${({ size }) => {\n      switch (size) {\n         case 'large':\n            return 80\n         case 'small':\n            return 20\n         default:\n            return 40\n      }\n   }}px;\n   ${({ mobile }) =>\n      mobile &&\n      css`\n         @media ${({ theme }) => theme.breakpoints.max.tablet} {\n            margin-bottom: 20px;\n         }\n      `}\n`\n\nexport default Divider\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledHeading = styled.h1`\n   margin: 0;\n   font-weight: ${({ size, theme }) =>\n      size === 'h1' ? theme.fontWeight.bold : theme.fontWeight.regular};\n\n   @media ${({ theme }) => theme.breakpoints.min.mobile} {\n      font-size: ${({ size, theme }) => {\n         switch (size) {\n            case 'h2':\n               return theme.fontSize.l\n            case 'h3':\n            case 'h4':\n               return theme.fontSize.m\n            default:\n               return theme.fontSize.xl\n         }\n      }};\n   }\n   @media ${({ theme }) => theme.breakpoints.max.mobile} {\n      font-size: ${({ size, theme }) => {\n         switch (size) {\n            case 'h2':\n               return theme.fontSize.l\n            case 'h3':\n            case 'h4':\n               return theme.fontSize.m\n            default:\n               return '12vw'\n         }\n      }};\n   }\n   color: ${({ size, theme }) => size === 'h4' && theme.fontSecondary};\n   text-align: center;\n`\n\nconst Heading = ({ children, size, ...props }) => (\n   <StyledHeading as={size} size={size} {...props}>\n      {children}\n   </StyledHeading>\n)\n\nHeading.propTypes = {\n   children: PropTypes.string,\n   size: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4']),\n}\n\nHeading.defaultProps = {\n   children: '',\n   size: 'h1',\n}\n\nexport default Heading\n","import styled, { keyframes } from 'styled-components'\n\nconst PulseAvatar = keyframes`\n   from {\n      opacity: 1;\n      transform: scale(0);\n   }\n   to {\n      opacity: 0;\n      transform: scale(1);\n   }\n`\n\nconst PulseCircle = keyframes`\n   from {\n      opacity: 0;\n   }\n   to {\n      opacity: 1;\n   }\n`\n\nconst PreloadAbout = styled.div`\n   height: 450px;\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: space-between;\n\n   ::before {\n      content: '';\n      display: block;\n      width: 128px;\n      height: 128px;\n      border-radius: 50%;\n      background: ${({ theme }) => theme.transparent.white.mid};\n      animation: ${PulseAvatar} 1s ease-out infinite;\n   }\n\n   ::after {\n      content: '';\n      display: block;\n      width: 16px;\n      height: 16px;\n      border-radius: 50%;\n      background: ${({ theme }) => theme.transparent.white.soft};\n      animation: ${PulseCircle} 1s ease-out alternate-reverse infinite;\n   }\n`\n\nexport default PreloadAbout\n","import styled from 'styled-components'\n\nconst SVG = styled.img`\n   max-width: 100%;\n`\n\nexport default SVG\n","import PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Wrapper = styled.div`\n   position: relative;\n`\n\nconst Image = styled.img`\n   position: absolute;\n   z-index: -1;\n   opacity: ${({ loaded }) => (loaded ? 1 : 0)};\n   transition: opacity 3s ease-out;\n   will-change: transform;\n   width: 100%;\n   ${({ align }) =>\n      align === 'top'\n         ? css`\n              top: 0;\n           `\n         : css`\n              bottom: 0;\n           `}\n`\n\nconst BackgroundSection = ({ background, align, children, ...props }) => {\n   const [loaded, setLoaded] = useState(false)\n\n   return (\n      <Wrapper {...props}>\n         {children}\n         <Image loaded={loaded} align={align} src={background} onLoad={() => setLoaded(true)} />\n      </Wrapper>\n   )\n}\n\nBackgroundSection.propTypes = {\n   children: PropTypes.element.isRequired,\n   background: PropTypes.string.isRequired,\n   align: PropTypes.oneOf(['top', 'bottom']),\n}\n\nBackgroundSection.defaultProps = {\n   align: 'top',\n}\n\nexport default BackgroundSection\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst ButtonWrapper = styled.button`\n   height: 80px;\n   position: relative;\n   display: inline-flex;\n   margin: 0 auto;\n   text-decoration: none;\n   color: ${({ theme }) => theme.fontPrimary};\n   align-items: center;\n   justify-content: center;\n   padding: 0 35px;\n   border: none;\n   border-radius: 40px;\n   background: ${({ theme }) => theme.gradient.accent};\n   cursor: pointer;\n   user-select: none;\n   text-align: center;\n   max-width: 100%;\n\n   ::before {\n      content: '';\n      width: calc(100% - 8px);\n      height: calc(100% - 8px);\n      position: absolute;\n      top: 4px;\n      left: 4px;\n      background: ${({ theme }) => theme.bgMain};\n      border-radius: 38px;\n      z-index: 0;\n      will-change: transform;\n      transition: transform 0.2s ease-out;\n   }\n\n   &:hover::before {\n      transform: scale(0);\n   }\n`\n\nconst ButtonText = styled.span`\n   display: block;\n   @media ${({ theme }) => theme.breakpoints.min.mobile} {\n      font-size: ${({ theme }) => theme.fontSize.m};\n   }\n   @media ${({ theme }) => theme.breakpoints.max.mobile} {\n      font-size: 5vw;\n   }\n   color: ${({ theme }) => theme.fontPrimary};\n   position: relative;\n   z-index: 1;\n`\n\nconst IconWrapper = styled.span`\n   display: block;\n   position: relative;\n   z-index: 1;\n   margin-right: 10px;\n   width: 32px;\n   height: 32px;\n\n   .MuiSvgIcon-root {\n      color: ${({ theme }) => theme.fontPrimary} !important;\n      font-size: 32px !important;\n   }\n`\n\nconst Button = ({ children, icon: IconComponent, ...props }) => (\n   <ButtonWrapper {...props}>\n      {IconComponent && (\n         <IconWrapper>\n            <IconComponent />\n         </IconWrapper>\n      )}\n      <ButtonText>{children}</ButtonText>\n   </ButtonWrapper>\n)\n\nButton.propTypes = {\n   children: PropTypes.string.isRequired,\n   icon: PropTypes.func,\n}\n\nButton.defaultProps = {\n   icon: null,\n}\n\nexport default Button\n","import styled, { keyframes } from 'styled-components'\n\nconst Preload = keyframes`\n   from {\n      background-position: -1000px, 0;\n   }\n   to {\n      background-position: 1000px, 0;\n   }\n`\n\nconst PreloadImage = styled.div`\n   width: ${({ width }) => width || '100%'};\n   height: ${({ height }) => height || 'auto'};\n   background-color: ${({ theme }) => theme.bgBadge};\n   background-image: ${({ theme }) => theme.gradient.preload};\n   background-position: 0, 0;\n   background-size: 1000px 100%;\n   background-repeat: no-repeat;\n   animation: ${Preload} 1s ease-in-out infinite;\n`\n\nexport default PreloadImage\n","import PreloadImage from 'components/atoms/PreloadImage/PreloadImage'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst PreloadTitle = styled(PreloadImage)`\n   width: 70%;\n   max-width: 600px;\n   margin: 0 auto;\n   height: 44px;\n   border-radius: 22px;\n`\n\nconst IconsWrapper = styled.div`\n   display: flex;\n   justify-content: center;\n   flex-wrap: wrap;\n   margin-top: 20px;\n   height: 104px;\n   overflow: hidden;\n`\n\nconst PreloadIcon = styled(PreloadImage)`\n   width: 64px;\n   height: 64px;\n   margin: 20px 10px;\n   border-radius: 50%;\n   animation-delay: ${({ delay }) => delay}s;\n`\n\nconst getDelays = () => {\n   const result = []\n\n   for (let i = 0; i < 10; i++) {\n      result.push(i * 0.035 - 0.06)\n   }\n\n   return result\n}\n\nconst delays = getDelays()\n\nconst PreloadTechnologyStack = () => (\n   <div>\n      <PreloadTitle />\n      <IconsWrapper>\n         {delays.map((delay, i) => (\n            <PreloadIcon key={`tech-b-${i}`} delay={delay} />\n         ))}\n      </IconsWrapper>\n   </div>\n)\n\nexport default PreloadTechnologyStack\n","import Heading from 'components/atoms/Heading/Heading'\nimport Icon from 'components/atoms/Icon/Icon'\nimport { API_URL } from 'defines'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst Show = keyframes`\n   from {\n      opacity: 0;\n   }\n   to {\n      opacity: 1;\n   }\n`\n\nconst Wrapper = styled.section`\n   animation: ${Show} 0.5s ease-out;\n`\n\nconst IconsWrapper = styled.div`\n   display: flex;\n   justify-content: center;\n   flex-wrap: wrap;\n   margin-top: 20px;\n`\n\nconst IconLabel = styled.span`\n   position: absolute;\n   bottom: -5px;\n   left: 50%;\n   color: ${({ theme }) => theme.fontPrimary};\n   font-size: ${({ theme }) => theme.fontSize.xs};\n   will-change: transform;\n   transition: transform 0.2s ease-out, opacity 0.2s linear;\n   opacity: 0;\n   transform: translate(-50%, -16px);\n`\n\nconst IconWrapper = styled.div`\n   width: 84px;\n   height: 104px;\n   padding: 20px 10px;\n   position: relative;\n\n   &:hover ${IconLabel} {\n      opacity: 1;\n      transform: translate(-50%, 0);\n   }\n`\n\nconst TechnologyStack = ({ technologies, title, ...props }) => (\n   <Wrapper {...props}>\n      <Heading size=\"h2\">{title}</Heading>\n      <IconsWrapper>\n         {technologies &&\n            technologies.map(({ _id, image: { path }, name }) => (\n               <IconWrapper key={_id}>\n                  <Icon src={`${API_URL}${path}`} alt={name} />\n                  <IconLabel>{name}</IconLabel>\n               </IconWrapper>\n            ))}\n      </IconsWrapper>\n   </Wrapper>\n)\n\nTechnologyStack.propTypes = {\n   title: PropTypes.string.isRequired,\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ),\n}\n\nTechnologyStack.defaultProps = {\n   technologies: null,\n}\n\nexport default TechnologyStack\n","import styled from 'styled-components'\n\nconst CardWrapper = styled.div`\n   background: ${({ theme }) => theme.bgPrimary};\n   border-radius: ${({ theme }) => theme.radius.primary};\n   box-shadow: ${({ theme }) => theme.shadow.soft};\n`\n\nexport default CardWrapper\n","import styled, { css } from 'styled-components'\n\nconst Glow = styled.div`\n   background: ${({ theme }) => theme.gradient.glow};\n   width: ${({ bottom }) => (bottom ? 200 : 800)}px;\n   max-width: calc(100% - 50px);\n   height: ${({ bottom }) => (bottom ? 30 : 70)}px;\n   position: absolute;\n   left: 50%;\n   ${({ bottom }) =>\n      bottom\n         ? css`\n              bottom: 0;\n              transform: translateX(-50%) rotate(180deg);\n           `\n         : css`\n              top: 0;\n              transform: translateX(-50%);\n           `}\n`\n\nexport default Glow\n","import { fetchThumbnail as fetchThumbnailAction } from 'actions/api'\nimport emptyIcon from 'assets/empty.svg'\nimport PreloadImage from 'components/atoms/PreloadImage/PreloadImage'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport styled, { css, keyframes } from 'styled-components'\nimport { getThumbnail } from 'Utils'\n\nconst Show = keyframes`\n   from {\n      opacity: 0;\n   }\n\n   to {\n      opacity: 1;\n   }\n`\n\nconst Pulse = keyframes`\n   from {\n      transform: scale(0);\n      opacity: 1;\n   }\n   to {\n      transform: scale(1);\n      opacity: 0;\n   }\n`\n\nconst Wrapper = styled.div`\n   position: relative;\n   background: ${({ theme }) => theme.bgBadge};\n   overflow: hidden;\n`\n\nconst IMG = styled.img`\n   object-fit: cover;\n   width: 100%;\n   height: 100%;\n   ${({ show }) =>\n      show &&\n      css`\n         animation: ${Show} 0.5s ease-out;\n      `}\n\n   ${({ src }) =>\n      src === emptyIcon &&\n      css`\n         object-fit: scale-down;\n      `}\n`\n\nconst StyledPreloadImage = styled(PreloadImage)`\n   width: 100%;\n   height: 100%;\n   position: absolute;\n   top: 0;\n   left: 0;\n   display: ${({ show }) => (show ? 'block' : 'none')};\n`\n\nconst PreloadPulse = styled.div`\n   width: 100%;\n   height: 100%;\n   position: absolute;\n   top: 0;\n   left: 0;\n   background: ${({ theme }) => theme.transparent.white.soft};\n   border-radius: 50%;\n   display: ${({ show }) => (show ? 'block' : 'none')};\n   animation: ${Pulse} 1s ease-out infinite;\n`\n\nclass Image extends React.Component {\n   state = {\n      loaded: false,\n      error: false,\n   }\n\n   componentDidMount() {\n      const { fetchThumbnail, thumbnail, src } = this.props\n\n      if (thumbnail) {\n         const width = thumbnail[0] || 200\n         const height = thumbnail[1] || width\n\n         fetchThumbnail(src, width, height)\n      }\n   }\n\n   render() {\n      const { src, isLink, thumbnail, thumbnails, alt, preloadAnimation, ...props } = this.props\n      const { loaded, error } = this.state\n      const thumbnailSrc =\n         src && thumbnail && thumbnails ? getThumbnail(thumbnails, src, thumbnail) : null\n      return (\n         <Wrapper as={isLink ? 'a' : 'div'} {...props}>\n            {src && !thumbnail && (\n               <IMG\n                  src={error ? emptyIcon : src}\n                  alt={alt}\n                  onLoad={() => this.setState({ loaded: true })}\n                  onError={() => this.setState({ error: true, loaded: true })}\n                  show={loaded}\n               />\n            )}\n            {thumbnailSrc && (\n               <IMG\n                  src={error ? emptyIcon : thumbnailSrc}\n                  alt={alt}\n                  onLoad={() => this.setState({ loaded: true })}\n                  onError={() => {\n                     console.log('error')\n                     this.setState({ error: true, loaded: true })\n                  }}\n                  show={loaded}\n               />\n            )}\n            {thumbnail && !thumbnailSrc && (\n               <IMG\n                  src={emptyIcon}\n                  alt={alt}\n                  onLoad={() => this.setState({ loaded: true })}\n                  show={loaded}\n               />\n            )}\n            {preloadAnimation === 'gradient' ? (\n               <StyledPreloadImage show={!loaded} />\n            ) : (\n               <PreloadPulse show={!loaded} />\n            )}\n         </Wrapper>\n      )\n   }\n}\n\nImage.propTypes = {\n   src: PropTypes.string,\n   alt: PropTypes.string,\n   isLink: PropTypes.bool,\n   thumbnail: PropTypes.arrayOf(PropTypes.number),\n   fetchThumbnail: PropTypes.func.isRequired,\n   thumbnails: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         url: PropTypes.string,\n      }),\n   ),\n   preloadAnimation: PropTypes.oneOf(['gradient', 'pulse']),\n}\n\nImage.defaultProps = {\n   src: null,\n   alt: '',\n   isLink: false,\n   thumbnail: null,\n   thumbnails: null,\n   preloadAnimation: 'gradient',\n}\n\nconst mapStateToProps = ({ api: { thumbnails } }) => ({ thumbnails })\n\nconst mapDispatchToProps = (dispatch) => ({\n   fetchThumbnail: (path, width, height) => dispatch(fetchThumbnailAction(path, width, height)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Image)\n","import CardWrapper from 'components/atoms/CardWrapper/CardWrapper'\nimport Glow from 'components/atoms/Glow/Glow'\nimport Text from 'components/atoms/Text/Text'\nimport Image from 'components/molecules/Image/Image'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled, { css, keyframes } from 'styled-components'\n\nconst ShowAvatar = keyframes`\n   from {\n      transform: translate(-50%, -50%) scale(0);\n   }\n   to {\n      transform: translate(-50%, -50%) scale(1);\n   }\n`\n\nconst ShowBackground = keyframes`\n   0% {\n      transform: scale(0, 0.1);\n   }\n   50% {\n      transform: scale(1, 0.1);\n   }\n   100% {\n      transform: scale(1, 1);\n   }\n`\n\nconst ShowLine = keyframes`\n   from {\n      transform: translateX(-50%) scaleX(0);\n   }\n   to {\n      transform: translateX(-50%) scaleX(1);\n   }\n`\n\nconst ShowGlow = keyframes`\n   from {\n      opacity: 0;\n   }\n   to {\n      opacity: 1;\n   }\n`\n\nconst ShowCircle = keyframes`\n   from {\n      transform: translate(-50%, 50%) scale(0);\n   }\n   to {\n      transform: translate(-50%, 50%) scale(1);\n   }\n`\n\nconst ShowText = keyframes`\n   from {\n      opacity: 0;\n      transform: translateY(-100%);\n   }\n   to {\n      opacity: 1;\n      transform: translateY(0);\n   }\n`\n\nconst Wrapper = styled.section`\n   margin-top: 66px;\n   position: relative;\n   width: 1000px;\n   max-width: 100%;\n`\n\nconst TextWrapper = styled.div`\n   overflow: hidden;\n`\n\nconst StyledText = styled(Text)`\n   @media ${({ theme }) => theme.breakpoints.min.mobile} {\n      padding: 75px 50px 50px 50px;\n   }\n   @media ${({ theme }) => theme.breakpoints.max.mobile} {\n      padding: 75px 30px 50px 30px;\n      font-size: ${({ theme }) => theme.fontSize.s};\n   }\n   position: relative;\n   z-index: 2;\n   animation: ${ShowText} 0.75s ${({ theme }) => theme.easing.primary} backwards;\n   animation-delay: ${({ delay }) => delay || 0}s;\n`\n\nconst Avatar = styled(Image)`\n   width: 132px;\n   height: 132px;\n   border-radius: 50%;\n   border: 2px solid ${({ theme }) => theme.accentColor};\n   box-shadow: ${({ theme }) => theme.shadow.glow};\n   position: absolute;\n   left: 50%;\n   top: 0;\n   transform: translate(-50%, -50%);\n   z-index: 5;\n   animation: ${ShowAvatar} 0.5s ease-out backwards;\n   animation-delay: ${({ delay }) => delay || 0}s;\n   will-change: transform;\n`\n\nconst Background = styled(CardWrapper)`\n   width: 100%;\n   height: 100%;\n   position: absolute;\n   top: 0;\n   left: 0;\n   z-index: 0;\n   will-change: transform;\n   transform-origin: top;\n   animation: ${ShowBackground} 1.5s ${({ theme }) => theme.easing.primary} backwards;\n   animation-delay: ${({ delay }) => delay || 0}s;\n`\n\nconst Line = styled.div`\n   position: absolute;\n   left: 50%;\n   transform: translateX(-50%);\n   will-change: transform;\n   border-radius: 1px;\n   height: 2px;\n   z-index: 4;\n   background: ${({ theme }) => theme.accentColor};\n   max-width: calc(100% - 50px);\n\n   ${({ bottom }) =>\n      bottom\n         ? css`\n              bottom: 0;\n              animation: ${ShowLine} 0.5s ease-out backwards;\n              width: 200px;\n           `\n         : css`\n              top: 0;\n              animation: ${ShowLine} 0.8s ease-out backwards;\n              width: 800px;\n           `}\n\n   animation-delay: ${({ delay }) => delay || 0}s;\n`\n\nconst StyledGlow = styled(Glow)`\n   animation: ${ShowGlow} 0.8s ${({ delay }) => delay || 0}s linear backwards;\n   z-index: 3;\n`\n\nconst Circle = styled.div`\n   position: absolute;\n   width: 16px;\n   height: 16px;\n   border-radius: 50%;\n   bottom: 0;\n   left: 50%;\n   z-index: 3;\n   transform: translate(-50%, 50%);\n   background: ${({ theme }) => theme.accentColor};\n   animation: ${ShowCircle} 0.3s 1.4s ease-out backwards;\n   box-shadow: ${({ theme }) => theme.shadow.glow};\n   animation-delay: ${({ delay }) => delay || 0}s;\n`\n\nconst About = ({ avatar, children, ...props }) => (\n   <Wrapper {...props}>\n      <Avatar\n         src={avatar}\n         thumbnail={[128]}\n         alt=\"Marcin Kalinowski\"\n         delay=\"0.1\"\n         preloadAnimation=\"pulse\"\n      />\n      <Line delay=\"0.3\" />\n      <StyledGlow delay=\"0.8\" />\n      <TextWrapper>\n         <StyledText delay=\"1\">{children}</StyledText>\n      </TextWrapper>\n      <StyledGlow bottom delay=\"1.7\" />\n      <Line bottom delay=\"1.7\" />\n      <Circle delay=\"1.6\" />\n      <Background delay=\"0.2\" />\n   </Wrapper>\n)\n\nAbout.propTypes = {\n   avatar: PropTypes.string.isRequired,\n   children: PropTypes.string.isRequired,\n}\n\nexport default About\n","import emptyIcon from 'assets/empty.svg'\r\nimport CardWrapper from 'components/atoms/CardWrapper/CardWrapper'\r\nimport Divider from 'components/atoms/Divider/Divider'\r\nimport SVG from 'components/atoms/SVG/SVG'\r\nimport Text from 'components/atoms/Text/Text'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Wrapper = styled(CardWrapper)`\r\n   padding: 30px;\r\n   display: flex;\r\n   flex-direction: column;\r\n   align-items: center;\r\n`\r\n\r\nconst NoContent = ({ children }) => (\r\n   <Wrapper>\r\n      <SVG src={emptyIcon} alt=\"no content\" />\r\n      <Divider size=\"small\" />\r\n      <Text>{children}</Text>\r\n   </Wrapper>\r\n)\r\n\r\nNoContent.propTypes = {\r\n   children: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\r\n}\r\n\r\nexport default NoContent\r\n","import Divider from 'components/atoms/Divider/Divider'\r\nimport Button from 'components/molecules/Button/Button'\r\nimport NoContent from 'components/molecules/NoContent/NoContent'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledButton = styled(Button)`\r\n   ::before {\r\n      background: ${({ theme }) => theme.bgPrimary};\r\n   }\r\n`\r\n\r\nconst handleButtonClick = () => {\r\n   window.location.reload()\r\n}\r\n\r\nconst NoContentInfo = ({ language }) => (\r\n   <NoContent>\r\n      <>\r\n         {language === 'en' ? 'Failed to load content' : 'Nie udało się wczytać zawartości'}\r\n         <Divider size=\"small\" />\r\n         <StyledButton onClick={() => handleButtonClick()}>\r\n            {language === 'en' ? 'Reload page' : 'Odśwież stronę'}\r\n         </StyledButton>\r\n      </>\r\n   </NoContent>\r\n)\r\n\r\nNoContentInfo.propTypes = {\r\n   language: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = ({ app: { language } }) => ({ language })\r\n\r\nexport default connect(mapStateToProps)(NoContentInfo)\r\n","import PreloadImage from 'components/atoms/PreloadImage/PreloadImage'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Category = styled(PreloadImage)`\n   margin: 0 5px;\n   height: 20px;\n   border-radius: 10px;\n   width: ${({ width }) => width};\n   animation-delay: ${({ delay, globaldelay }) => (delay || 0) + globaldelay}s;\n`\n\nconst CategoriesWrapper = styled.div`\n   display: flex;\n   margin-top: 10px;\n   margin-bottom: 20px;\n`\n\nconst PreloadCategories = ({ delay: globalDelay, ...props }) => (\n   <CategoriesWrapper {...props}>\n      <Category width=\"80px\" globaldelay={globalDelay} />\n      <Category width=\"90px\" delay={0.06} globaldelay={globalDelay} />\n   </CategoriesWrapper>\n)\n\nPreloadCategories.propTypes = {\n   delay: PropTypes.number,\n}\n\nPreloadCategories.defaultProps = {\n   delay: 0,\n}\n\nexport default PreloadCategories\n","import CardWrapper from 'components/atoms/CardWrapper/CardWrapper'\nimport PreloadImage from 'components/atoms/PreloadImage/PreloadImage'\nimport PreloadCategories from 'components/molecules/PreloadCategories/PreloadCategories'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledCardWrapper = styled(CardWrapper)`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n`\n\nconst Container = styled.div`\n   padding: 0 20px;\n   width: 100%;\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n`\n\nconst Title = styled(PreloadImage)`\n   margin: 25px 0;\n   width: 70%;\n   height: 25px;\n   border-radius: 13px;\n   animation-delay: ${({ globaldelay }) => globaldelay}s;\n`\n\nconst DescriptionLine = styled(PreloadImage)`\n   width: ${({ width }) => width};\n   height: 15px;\n   border-radius: 8px;\n   margin-bottom: 10px;\n   animation-delay: ${({ globaldelay }) => globaldelay}s;\n`\n\nconst CardFooter = styled.div`\n   margin-top: auto;\n   height: 64px;\n   padding: 16px;\n   border-bottom-left-radius: ${({ theme }) => theme.radius.primary};\n   border-bottom-right-radius: ${({ theme }) => theme.radius.primary};\n   background: ${({ theme }) => theme.bgSecondary};\n   width: 100%;\n   display: flex;\n`\n\nconst Image = styled(PreloadImage)`\n   border-top-left-radius: ${({ theme }) => theme.radius.primary};\n   border-top-right-radius: ${({ theme }) => theme.radius.primary};\n   height: 200px;\n   flex-shrink: 0;\n   animation-delay: ${({ globaldelay }) => globaldelay}s;\n`\n\nconst Icon = styled(PreloadImage)`\n   width: 32px;\n   height: 32px;\n   margin-right: 16px;\n   border-radius: 50%;\n   animation-delay: ${({ delay, globaldelay }) => (delay || 0) + globaldelay}s;\n`\n\nconst getDelays = () => {\n   const result = []\n\n   for (let i = 0; i < 4; i++) {\n      result.push(i * 0.025)\n   }\n\n   return result\n}\n\nconst delays = getDelays()\n\nconst PreloadCard = ({ delay: globalDelay }) => (\n   <StyledCardWrapper>\n      <Image globaldelay={globalDelay} />\n      <Container>\n         <Title globaldelay={globalDelay} />\n         <DescriptionLine width=\"100%\" globaldelay={globalDelay} />\n         <DescriptionLine width=\"80%\" globaldelay={globalDelay} />\n         <DescriptionLine width=\"90%\" globaldelay={globalDelay} />\n         <DescriptionLine width=\"60%\" globaldelay={globalDelay} />\n         <PreloadCategories delay={globalDelay} />\n      </Container>\n      <CardFooter>\n         {delays.map((delay, i) => (\n            <Icon key={`tech-${i}`} delay={delay} globaldelay={globalDelay} />\n         ))}\n      </CardFooter>\n   </StyledCardWrapper>\n)\n\nPreloadCard.propTypes = {\n   delay: PropTypes.number,\n}\n\nPreloadCard.defaultProps = {\n   delay: 0,\n}\n\nexport default PreloadCard\n","import PreloadCard from 'components/organisms/PreloadCard/PreloadCard'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n   display: grid;\n   grid-template-columns: repeat(auto-fill, minmax(270px, auto));\n   grid-gap: ${({ smallgap }) => (smallgap ? 20 : 40)}px;\n   grid-auto-rows: 489px;\n   height: 510px;\n   overflow: hidden;\n`\n\nconst PreloadCards = ({ smallgap, ...props }) => (\n   <Wrapper smallgap={smallgap} {...props}>\n      <PreloadCard />\n      <PreloadCard delay={0.2} />\n      <PreloadCard delay={0.4} />\n   </Wrapper>\n)\n\nPreloadCards.propTypes = {\n   smallgap: PropTypes.bool,\n}\n\nPreloadCards.defaultProps = {\n   smallgap: false,\n}\n\nexport default PreloadCards\n","import Divider from 'components/atoms/Divider/Divider'\nimport Heading from 'components/atoms/Heading/Heading'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n   display: flex;\n   flex-direction: column;\n   justify-content: space-between;\n   align-items: center;\n   min-height: calc(100vh - 104px);\n`\nconst Container = styled.div`\n   display: flex;\n   flex-direction: column;\n   justify-content: center;\n   align-items: center;\n   flex-grow: 2;\n`\n\nconst CenterPageTemplate = ({ children, title }) => (\n   <Wrapper>\n      <Divider size=\"large\" />\n      {title && <Heading size=\"h1\">{title}</Heading>}\n      <Container>{children}</Container>\n      <Divider size=\"large\" />\n   </Wrapper>\n)\n\nCenterPageTemplate.propTypes = {\n   children: PropTypes.element.isRequired,\n   title: PropTypes.string,\n}\n\nCenterPageTemplate.defaultProps = {\n   title: null,\n}\n\nexport default CenterPageTemplate\n","import styled from 'styled-components'\n\nconst Badge = styled.span`\n   display: inline-block;\n   height: 20px;\n   border-radius: 10px;\n   font-size: ${({ theme }) => theme.fontSize.xs};\n   background: ${({ theme }) => theme.bgBadge};\n   color: ${({ theme }) => theme.fontSecondary};\n   text-align: center;\n   line-height: 18px;\n   padding: 1px 10px;\n`\n\nexport default Badge\n","import Badge from 'components/atoms/Badge/Badge'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Wrapper = styled.div`\n   display: flex;\n   justify-content: center;\n   flex-wrap: wrap;\n   margin-bottom: 15px;\n   margin-top: -5px;\n\n   ${({ trim }) =>\n      trim &&\n      css`\n         height: 30px;\n         overflow: hidden;\n      `}\n`\n\nconst StyledBadge = styled(Badge)`\n   margin: 5px;\n`\n\nconst Categories = ({ categories, language, trim, ...props }) => (\n   <Wrapper trim={trim} {...props}>\n      {categories.map((category) => (\n         <StyledBadge key={category._id}>#{category[language]}</StyledBadge>\n      ))}\n   </Wrapper>\n)\n\nCategories.propTypes = {\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ).isRequired,\n   language: PropTypes.string.isRequired,\n   trim: PropTypes.bool,\n}\n\nCategories.defaultProps = {\n   trim: false,\n}\n\nexport default Categories\n","import Icon from 'components/atoms/Icon/Icon'\nimport { API_URL } from 'defines'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n   display: flex;\n   overflow: hidden;\n   background: ${({ theme }) => theme.bgSecondary};\n   border-bottom-left-radius: ${({ theme }) => theme.radius.primary};\n   border-bottom-right-radius: ${({ theme }) => theme.radius.primary};\n   padding: 16px 8px;\n   height: 64px;\n`\n\nconst StyledIcon = styled(Icon)`\n   flex-shrink: 0;\n   margin: 0 8px;\n`\n\nconst TechnologyStackSmall = ({ technologies, ...props }) => (\n   <Wrapper {...props}>\n      {technologies &&\n         technologies.map(({ _id, image: { path }, name }) => (\n            <StyledIcon key={_id} src={`${API_URL}${path}`} alt={name} title={name} small />\n         ))}\n   </Wrapper>\n)\n\nTechnologyStackSmall.propTypes = {\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ),\n}\n\nTechnologyStackSmall.defaultProps = {\n   technologies: null,\n}\n\nexport default TechnologyStackSmall\n","import CardWrapper from 'components/atoms/CardWrapper/CardWrapper'\nimport Heading from 'components/atoms/Heading/Heading'\nimport Text from 'components/atoms/Text/Text'\nimport Categories from 'components/molecules/Categories/Categories'\nimport Image from 'components/molecules/Image/Image'\nimport TechnologyStackSmall from 'components/molecules/TechnologyStackSmall/TechnologyStackSmall'\nimport { API_URL } from 'defines'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ReactHtmlParser from 'react-html-parser'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { getPhrase, removeHtmlTags } from 'Utils'\n\nconst Button = styled.div`\n   height: 64px;\n   width: 100%;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   background: ${({ theme }) => theme.gradient.accent};\n   font-size: ${({ theme }) => theme.fontSize.m};\n   color: ${({ theme }) => theme.fontPrimary};\n   position: absolute;\n   bottom: 0;\n   will-change: transform;\n   transform: translateY(100%);\n   transition: transform 0.3s ease-out;\n`\n\nconst StyledCardWrapper = styled(CardWrapper)`\n   color: ${({ theme }) => theme.fontPrimary};\n   display: flex;\n   flex-direction: column;\n   text-decoration: none;\n   overflow: hidden;\n   position: relative;\n\n   :hover ${Button} {\n      transform: translateY(0%);\n   }\n`\n\nconst StyledHeading = styled(Heading)`\n   padding: 10px 20px;\n   white-space: nowrap;\n   overflow: hidden;\n   text-overflow: ellipsis;\n`\n\nconst StyledText = styled(Text)`\n   padding: 0 20px;\n   margin: 10px 0 20px 0;\n`\n\nconst StyledTechnologyStack = styled(TechnologyStackSmall)`\n   margin-top: auto;\n`\n\nconst StyledImage = styled(Image)`\n   border-top-left-radius: ${({ theme }) => theme.radius.primary};\n   border-top-right-radius: ${({ theme }) => theme.radius.primary};\n   height: 200px;\n   margin-bottom: 10px;\n   flex-shrink: 0;\n`\n\nconst Card = ({ phrases, link, title, image, description, categories, technologies, language }) => (\n   <StyledCardWrapper as={Link} to={link}>\n      <StyledImage src={`${API_URL}${image}`} thumbnail={[300, 200]} alt={title} />\n      <StyledHeading size=\"h3\">{title}</StyledHeading>\n      <StyledText small lineclamp={4}>\n         {ReactHtmlParser(removeHtmlTags(description))}\n      </StyledText>\n      {categories && categories.length ? (\n         <Categories categories={categories} language={language} trim />\n      ) : null}\n      <StyledTechnologyStack technologies={technologies} />\n      <Button>{getPhrase(phrases, 'show', language)}</Button>\n   </StyledCardWrapper>\n)\n\nCard.propTypes = {\n   phrases: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   link: PropTypes.string.isRequired,\n   title: PropTypes.string.isRequired,\n   image: PropTypes.string.isRequired,\n   description: PropTypes.string,\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ).isRequired,\n   language: PropTypes.string.isRequired,\n}\n\nCard.defaultProps = {\n   description: null,\n   categories: [],\n   phrases: null,\n}\n\nconst mapStateToProps = ({ api: { phrases }, app: { language } }) => ({ phrases, language })\n\nexport default connect(mapStateToProps)(Card)\n","import ArrowButton from 'components/molecules/ArrowButton/ArrowButton'\nimport Card from 'components/organisms/Card/Card'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport Slider from 'react-slick'\nimport styled, { css } from 'styled-components'\nimport { getDataByIds } from 'Utils'\n\nconst Wrapper = styled.section`\n   overflow: hidden;\n   position: relative;\n\n   @media ${({ theme }) => theme.breakpoints.min.tablet} {\n      padding: 20px 104px;\n   }\n   @media ${({ theme }) => theme.breakpoints.max.tablet} {\n      padding: 20px;\n   }\n`\n\nconst StyledSlider = styled(Slider)`\n   max-width: 1000px;\n   margin: 0 auto;\n`\n\nconst SliderShadow = styled.div`\n   @media ${({ theme }) => theme.breakpoints.min.tablet} {\n      width: 240px;\n   }\n   @media ${({ theme }) => theme.breakpoints.max.tablet} {\n      width: 40px;\n   }\n   height: 100%;\n   background: ${({ theme }) => theme.bgMain};\n   mask-image: ${({ theme }) => theme.gradient.slider};\n   position: absolute;\n   ${({ prev }) =>\n      prev\n         ? css`\n              left: 0;\n              transform: scaleX(-1);\n           `\n         : css`\n              right: 0;\n           `}\n   top: 0;\n   z-index: 1;\n   pointer-events: none;\n`\n\nconst StyledArrowButton = styled(ArrowButton)`\n   position: absolute;\n   top: 50%;\n   transform: translateY(-50%);\n   z-index: 2;\n   display: flex !important;\n   will-change: transform;\n   transition: transform 0.3s ease-out;\n   transform-origin: center;\n\n   ${({ prev }) =>\n      prev\n         ? css`\n              @media ${({ theme }) => theme.breakpoints.min.tablet} {\n                 left: 40px;\n              }\n              @media ${({ theme }) => theme.breakpoints.max.tablet} {\n                 left: 20px;\n              }\n           `\n         : css`\n              @media ${({ theme }) => theme.breakpoints.min.tablet} {\n                 right: 40px;\n              }\n              @media ${({ theme }) => theme.breakpoints.max.tablet} {\n                 right: 20px;\n              }\n           `}\n\n   &.slick-disabled {\n      transform: translateY(-50%) scale(0);\n      pointer-events: none;\n   }\n`\n\nconst Slide = styled.div`\n   padding: 0 10px;\n`\n\nconst RealizationsSliderTemplate = ({ realizations, categories, technologies, language }) => {\n   const settings = {\n      dots: false,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 3,\n      slidesToScroll: 3,\n      nextArrow: <StyledArrowButton />,\n      prevArrow: <StyledArrowButton prev />,\n      responsive: [\n         {\n            breakpoint: 970,\n            settings: {\n               slidesToShow: 2,\n               slidesToScroll: 2,\n            },\n         },\n         {\n            breakpoint: 576,\n            settings: {\n               slidesToShow: 1,\n               slidesToScroll: 1,\n            },\n         },\n      ],\n   }\n\n   return (\n      <Wrapper>\n         <SliderShadow prev />\n         <StyledSlider {...settings}>\n            {realizations.map((realization) => {\n               const {\n                  _id,\n                  thumbnail: { path },\n                  categories: refCategories,\n                  technologies: refTechnologies,\n               } = realization\n\n               return (\n                  <Slide key={_id}>\n                     <Card\n                        link={`/realizations/${_id}`}\n                        title={realization[`${language}_title`]}\n                        image={path}\n                        description={realization[`${language}_description`]}\n                        categories={\n                           refCategories.length ? getDataByIds(refCategories, categories) : []\n                        }\n                        technologies={\n                           refTechnologies.length ? getDataByIds(refTechnologies, technologies) : []\n                        }\n                     />\n                  </Slide>\n               )\n            })}\n         </StyledSlider>\n         <SliderShadow />\n      </Wrapper>\n   )\n}\n\nRealizationsSliderTemplate.propTypes = {\n   realizations: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         pl_title: PropTypes.string,\n         en_title: PropTypes.string,\n         thumbnail: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n         pl_desctiption: PropTypes.string,\n         en_desctiption: PropTypes.string,\n         links: PropTypes.arrayOf(\n            PropTypes.shape({\n               field: PropTypes.shape({\n                  label: PropTypes.string,\n               }),\n               value: PropTypes.string,\n            }),\n         ),\n      }),\n   ).isRequired,\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ).isRequired,\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ).isRequired,\n   language: PropTypes.string.isRequired,\n}\n\nexport default RealizationsSliderTemplate\n","import { fetchSingleton } from 'actions/api'\nimport bgHex from 'assets/backgrounds/hex.png'\nimport bgHome from 'assets/backgrounds/home.png'\nimport mailIcon from 'assets/mail.svg'\nimport Container from 'components/atoms/Container/Container'\nimport Divider from 'components/atoms/Divider/Divider'\nimport Heading from 'components/atoms/Heading/Heading'\nimport PreloadAbout from 'components/atoms/PreloadAbout/PreloadAbout'\nimport SVG from 'components/atoms/SVG/SVG'\nimport BackgroundSection from 'components/molecules/BackgroundSection/BackgroundSection'\nimport Button from 'components/molecules/Button/Button'\nimport PreloadTechnologyStack from 'components/molecules/PreloadTechnologyStack/PreloadTechnologyStack'\nimport TechnologyStack from 'components/molecules/TechnologyStack/TechnologyStack'\nimport About from 'components/organisms/About/About'\nimport NoContentInfo from 'components/organisms/NoContentInfo/NoContentInfo'\nimport PreloadCards from 'components/organisms/PreloadCard/PreloadCards'\nimport { API_URL } from 'defines'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport CenterPageTemplate from 'templates/CenterPageTemplate/CenterPageTemplate'\nimport RealizationsSliderTemplate from 'templates/RealizationsSliderTemplate/RealizationsSliderTemplate'\nimport { getDataByIds, getPhrase } from 'Utils'\n\nconst sortRealizations = (a, b) => {\n   if (a._created > b._created) return -1\n   if (a._created < b._created) return 1\n   return 0\n}\n\nclass Home extends React.Component {\n   componentDidMount() {\n      const { fetchAbout } = this.props\n      fetchAbout()\n   }\n\n   render() {\n      const {\n         phrases,\n         about,\n         realizations,\n         categories,\n         technologies,\n         language,\n         connectionErrors,\n      } = this.props\n\n      return (\n         <>\n            <BackgroundSection background={bgHome}>\n               <Container>\n                  <Divider size=\"large\" mobile />\n                  <Heading size=\"h1\">Marcin Kalinowski</Heading>\n                  <Divider size=\"small\" />\n                  <Heading size=\"h4\">Front-end developer / UI designer</Heading>\n                  <Divider size=\"medium\" />\n                  {about ? (\n                     <About avatar={`${API_URL}${about.avatar.path}`}>{about[language]}</About>\n                  ) : (\n                     <>{connectionErrors.singletonAbout ? <NoContentInfo /> : <PreloadAbout />}</>\n                  )}\n                  <Divider size=\"large\" />\n                  {technologies && about ? (\n                     <TechnologyStack\n                        title={getPhrase(phrases, 'technologies-i-work-with', language)}\n                        technologies={getDataByIds(about.technologies, technologies)}\n                     />\n                  ) : (\n                     <>\n                        {connectionErrors.singletonAbout ||\n                        connectionErrors.collectionTechnologies ? (\n                           <NoContentInfo />\n                        ) : (\n                           <PreloadTechnologyStack />\n                        )}\n                     </>\n                  )}\n               </Container>\n            </BackgroundSection>\n\n            <section>\n               <Container>\n                  <Divider size=\"large\" />\n                  <Heading size=\"h1\">{getPhrase(phrases, 'realizations', language)}</Heading>\n                  <Divider size=\"large\" />\n               </Container>\n\n               {realizations && categories && technologies ? (\n                  <RealizationsSliderTemplate\n                     realizations={realizations.sort(sortRealizations).slice(0, 9)}\n                     categories={categories}\n                     technologies={technologies}\n                     language={language}\n                  />\n               ) : (\n                  <Container>\n                     <>\n                        {connectionErrors.collectionRealizations ||\n                        connectionErrors.collectionCategories ||\n                        connectionErrors.collectionTechnologies ? (\n                           <NoContentInfo />\n                        ) : (\n                           <PreloadCards smallgap />\n                        )}\n                     </>\n                  </Container>\n               )}\n\n               <Container>\n                  <Divider size=\"large\" />\n                  <Button as={Link} to=\"/realizations\">\n                     {getPhrase(phrases, 'show-more', language)}\n                  </Button>\n               </Container>\n            </section>\n\n            <BackgroundSection background={bgHex} align=\"bottom\">\n               <CenterPageTemplate title={getPhrase(phrases, 'contact', language)}>\n                  <Container>\n                     <SVG src={mailIcon} alt=\"mail\" />\n                     <Divider size=\"medium\" />\n                     <Button as=\"a\" href=\"mailto: Marcin36K@outlook.com\">\n                        Marcin36K@outlook.com\n                     </Button>\n                  </Container>\n               </CenterPageTemplate>\n            </BackgroundSection>\n         </>\n      )\n   }\n}\n\nHome.propTypes = {\n   phrases: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   about: PropTypes.shape({\n      avatar: PropTypes.shape({\n         path: PropTypes.string,\n      }),\n      pl: PropTypes.string,\n      en: PropTypes.string,\n      technologies: PropTypes.arrayOf(\n         PropTypes.shape({\n            _id: PropTypes.string,\n            display: PropTypes.string,\n         }),\n      ),\n   }),\n   realizations: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         pl_title: PropTypes.string,\n         en_title: PropTypes.string,\n         thumbnail: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n         pl_desctiption: PropTypes.string,\n         en_desctiption: PropTypes.string,\n         links: PropTypes.arrayOf(\n            PropTypes.shape({\n               field: PropTypes.shape({\n                  label: PropTypes.string,\n               }),\n               value: PropTypes.string,\n            }),\n         ),\n         _created: PropTypes.number,\n      }),\n   ),\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ),\n   language: PropTypes.string.isRequired,\n   fetchAbout: PropTypes.func.isRequired,\n   // eslint-disable-next-line react/forbid-prop-types\n   connectionErrors: PropTypes.object.isRequired,\n}\n\nHome.defaultProps = {\n   about: null,\n   realizations: null,\n   categories: null,\n   technologies: null,\n   phrases: null,\n}\n\nconst mapStateToProps = ({\n   api: { about, realizations, categories, technologies, phrases, connectionErrors },\n   app: { language },\n}) => ({\n   about,\n   realizations,\n   categories,\n   technologies,\n   language,\n   phrases,\n   connectionErrors,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n   fetchAbout: () => dispatch(fetchSingleton('about')),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","export default __webpack_public_path__ + \"static/media/realizations.3da42143.png\";","import PreloadImage from 'components/atoms/PreloadImage/PreloadImage'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n   max-width: 1000px;\n   width: 100%;\n   margin: 0 auto;\n`\n\nconst PreloadLine = styled(PreloadImage)`\n   height: 20px;\n   width: ${({ width }) => width};\n   margin: 16px auto;\n   border-radius: 10px;\n\n   :first-child {\n      margin-top: 8px;\n   }\n   :last-child {\n      margin-bottom: 8px;\n   }\n`\n\nconst PreloadText = () => (\n   <Wrapper>\n      <PreloadLine width=\"100%\" />\n      <PreloadLine width=\"80%\" />\n      <PreloadLine width=\"90%\" />\n      <PreloadLine width=\"60%\" />\n   </Wrapper>\n)\n\nexport default PreloadText\n","export default __webpack_public_path__ + \"static/media/404.a54c5f2a.svg\";","import image404 from 'assets/404.svg'\nimport bgHex from 'assets/backgrounds/hex.png'\nimport Divider from 'components/atoms/Divider/Divider'\nimport SVG from 'components/atoms/SVG/SVG'\nimport Text from 'components/atoms/Text/Text'\nimport BackgroundSection from 'components/molecules/BackgroundSection/BackgroundSection'\nimport Button from 'components/molecules/Button/Button'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport CenterPageTemplate from 'templates/CenterPageTemplate/CenterPageTemplate'\nimport { getPhrase } from 'Utils'\n\nconst Page404 = ({ phrases, language }) => (\n   <BackgroundSection background={bgHex} align=\"bottom\">\n      <CenterPageTemplate>\n         <>\n            <SVG src={image404} alt=\"404\" />\n            <Divider size=\"medium\" />\n            <Text>{getPhrase(phrases, '404-info', language)}</Text>\n            <Divider size=\"medium\" />\n            <Button as={Link} to=\"/\">\n               {getPhrase(phrases, 'back-to-homepage', language)}\n            </Button>\n         </>\n      </CenterPageTemplate>\n   </BackgroundSection>\n)\n\nPage404.propTypes = {\n   phrases: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   language: PropTypes.string.isRequired,\n}\n\nPage404.defaultProps = {\n   phrases: null,\n}\n\nconst mapStateToProps = ({ api: { phrases }, app: { language } }) => ({ phrases, language })\n\nexport default connect(mapStateToProps)(Page404)\n","import { fetchCollection } from 'actions/api'\nimport bgRealizations from 'assets/backgrounds/realizations.png'\nimport Container from 'components/atoms/Container/Container'\nimport Divider from 'components/atoms/Divider/Divider'\nimport Heading from 'components/atoms/Heading/Heading'\nimport Text from 'components/atoms/Text/Text'\nimport BackgroundSection from 'components/molecules/BackgroundSection/BackgroundSection'\nimport PreloadText from 'components/molecules/PreloadText/PreloadText'\nimport NoContentInfo from 'components/organisms/NoContentInfo/NoContentInfo'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport reactHtmlParser from 'react-html-parser'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport Page404 from 'views/Page404'\n\nclass InfoPage extends React.Component {\n   componentDidMount() {\n      const { fetchPages } = this.props\n      fetchPages()\n   }\n\n   render() {\n      const {\n         pages,\n         language,\n         match: {\n            params: { page: pageSlug },\n         },\n         connectionErrors,\n      } = this.props\n\n      if (pages) {\n         const page = pages.find((x) => x.name_slug === pageSlug)\n\n         if (!page) {\n            return <Page404 />\n         }\n\n         return (\n            <BackgroundSection background={bgRealizations}>\n               <Container>\n                  <Divider size=\"large\" mobile />\n                  <Heading size=\"h1\">{page[`${language}_title`]}</Heading>\n                  <Divider size=\"medium\" />\n                  <Text>{reactHtmlParser(page[`${language}_description`])}</Text>\n                  <Divider size=\"large\" />\n               </Container>\n            </BackgroundSection>\n         )\n      }\n\n      return (\n         <Container>\n            <Divider size=\"large\" />\n            <>{connectionErrors.collectionPages ? <NoContentInfo /> : <PreloadText />}</>\n            <Divider size=\"large\" />\n         </Container>\n      )\n   }\n}\n\nInfoPage.propTypes = {\n   pages: PropTypes.arrayOf(\n      PropTypes.shape({\n         name_slug: PropTypes.string,\n         pl_title: PropTypes.string,\n         en_title: PropTypes.string,\n         pl_description: PropTypes.string,\n         en_description: PropTypes.string,\n      }),\n   ),\n   language: PropTypes.string.isRequired,\n   fetchPages: PropTypes.func.isRequired,\n   match: PropTypes.shape({\n      params: PropTypes.shape({\n         page: PropTypes.string,\n      }),\n   }).isRequired,\n   // eslint-disable-next-line react/forbid-prop-types\n   connectionErrors: PropTypes.object.isRequired,\n}\n\nInfoPage.defaultProps = {\n   pages: null,\n}\n\nconst mapStateToProps = ({ api: { pages, connectionErrors }, app: { language } }) => ({\n   pages,\n   language,\n   connectionErrors,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n   fetchPages: () => dispatch(fetchCollection('pages')),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(InfoPage))\n","import Divider from 'components/atoms/Divider/Divider'\nimport PreloadImage from 'components/atoms/PreloadImage/PreloadImage'\nimport PreloadCategories from 'components/molecules/PreloadCategories/PreloadCategories'\nimport PreloadTechnologyStack from 'components/molecules/PreloadTechnologyStack/PreloadTechnologyStack'\nimport PreloadText from 'components/molecules/PreloadText/PreloadText'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: stretch;\n   max-width: 1000px;\n`\n\nconst PreloadHeader = styled.div`\n   position: relative;\n   width: 100%;\n`\n\nconst PreloadHeaderImage = styled(PreloadImage)`\n   height: 350px;\n   border-bottom-left-radius: ${({ theme }) => theme.radius.primary};\n   border-bottom-right-radius: ${({ theme }) => theme.radius.primary};\n   box-shadow: ${({ theme }) => theme.shadow.soft};\n`\n\nconst PreloadHeaderTitle = styled.div`\n   width: 200px;\n   height: 64px;\n   border-radius: 32px;\n   box-shadow: ${({ theme }) => theme.shadow.soft};\n   background: ${({ theme }) => theme.bgPrimary};\n   position: relative;\n   top: -32px;\n   left: 50%;\n   transform: translateX(-50%);\n`\n\nconst PreloadButton = styled(PreloadImage)`\n   height: 80px;\n   width: 200px;\n   border-radius: 40px;\n`\n\nconst PreloadRealization = () => (\n   <Wrapper>\n      <PreloadHeader>\n         <PreloadHeaderImage />\n         <PreloadHeaderTitle />\n      </PreloadHeader>\n      <PreloadCategories delay={0.1} />\n      <PreloadText />\n      <Divider size=\"medium\" />\n      <PreloadTechnologyStack />\n      <Divider size=\"medium\" />\n      <PreloadButton />\n   </Wrapper>\n)\n\nexport default PreloadRealization\n","export default __webpack_public_path__ + \"static/media/authentical_info.e8c79e65.png\";","export default __webpack_public_path__ + \"static/media/figma.54717305.svg\";","import Heading from 'components/atoms/Heading/Heading'\nimport Image from 'components/molecules/Image/Image'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.header`\n   width: 100%;\n   max-width: 1000px;\n   text-align: center;\n`\n\nconst StyledImage = styled(Image)`\n   width: 100%;\n   height: 350px;\n   box-shadow: ${({ theme }) => theme.shadow.soft};\n   border-bottom-left-radius: ${({ theme }) => theme.radius.primary};\n   border-bottom-right-radius: ${({ theme }) => theme.radius.primary};\n`\n\nconst HeadingWrapper = styled.div`\n   min-height: 64px;\n   border-radius: 32px;\n   box-shadow: ${({ theme }) => theme.shadow.soft};\n   display: inline-flex;\n   align-items: center;\n   justify-content: center;\n   max-width: 100%;\n   padding: 0 32px;\n   background: ${({ theme }) => theme.bgPrimary};\n   position: relative;\n   top: -32px;\n`\n\nconst ProjectHeader = ({ image, title }) => (\n   <Wrapper>\n      <StyledImage src={image} thumbnail={[800, 350]} alt={title} />\n      <HeadingWrapper>\n         <Heading size=\"h3\">{title}</Heading>\n      </HeadingWrapper>\n   </Wrapper>\n)\n\nProjectHeader.propTypes = {\n   image: PropTypes.string,\n   title: PropTypes.string,\n}\n\nProjectHeader.defaultProps = {\n   image: null,\n   title: '',\n}\n\nexport default ProjectHeader\n","import Image from 'components/molecules/Image/Image'\nimport { API_URL } from 'defines'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { SRLWrapper } from 'simple-react-lightbox'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.section`\n   display: grid;\n   grid-template-columns: repeat(auto-fill, minmax(198px, auto));\n   overflow: hidden;\n   border-radius: ${({ theme }) => theme.radius.primary};\n   grid-gap: 5px;\n   background: ${({ theme }) => theme.bgPrimary};\n   border: 5px solid ${({ theme }) => theme.bgPrimary};\n`\n\nconst StyledImage = styled(Image)`\n   display: block;\n   position: absolute;\n   width: 100%;\n   height: 100%;\n   top: 0;\n   left: 0;\n   will-change: transform;\n   transition: transform 2s ease-out;\n`\n\nconst ImageWrapper = styled.div`\n   padding-top: 100%;\n   position: relative;\n   display: block;\n   overflow: hidden;\n\n   :hover ${StyledImage} {\n      transform: scale(1.1);\n   }\n`\n\nconst GalleryTemplate = ({ gallery }) => (\n   <SRLWrapper>\n      <Wrapper>\n         {gallery.map(({ meta: { title, asset }, path }) => (\n            <ImageWrapper key={asset}>\n               <StyledImage\n                  alt={title}\n                  isLink\n                  href={`${API_URL}${path}`}\n                  src={`${API_URL}${path}`}\n                  thumbnail={[400]}\n               />\n            </ImageWrapper>\n         ))}\n      </Wrapper>\n   </SRLWrapper>\n)\n\nGalleryTemplate.propTypes = {\n   gallery: PropTypes.arrayOf(\n      PropTypes.shape({\n         meta: PropTypes.shape({\n            title: PropTypes.string,\n            asset: PropTypes.string,\n         }),\n         path: PropTypes.string,\n      }),\n   ).isRequired,\n}\n\nexport default GalleryTemplate\n","import GetAppIcon from '@material-ui/icons/GetApp'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkIcon from '@material-ui/icons/Link'\nimport WebAssetIcon from '@material-ui/icons/WebAsset'\nimport authenticalInfoImage from 'assets/authentical_info.png'\nimport FigmaIconURL from 'assets/icons/figma.svg'\nimport CardWrapper from 'components/atoms/CardWrapper/CardWrapper'\nimport Divider from 'components/atoms/Divider/Divider'\nimport Icon from 'components/atoms/Icon/Icon'\nimport Text from 'components/atoms/Text/Text'\nimport Button from 'components/molecules/Button/Button'\nimport Categories from 'components/molecules/Categories/Categories'\nimport Image from 'components/molecules/Image/Image'\nimport TechnologyStack from 'components/molecules/TechnologyStack/TechnologyStack'\nimport ProjectHeader from 'components/organisms/ProjectHeader/ProjectHeader'\nimport { API_URL } from 'defines'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ReactHtmlParser from 'react-html-parser'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport GalleryTemplate from 'templates/GalleryTemplate/GalleryTemplate'\nimport { getPhrase } from 'Utils'\n\nconst FigmaIcon = () => <Icon src={FigmaIconURL} small />\n\nconst Wrapper = styled.div`\n   max-width: 1000px;\n`\n\nconst ButtonsWrapper = styled.div`\n   display: flex;\n   flex-wrap: wrap;\n   justify-content: center;\n`\n\nconst ButtonContainer = styled.div`\n   display: inline-block;\n   margin: 20px;\n`\n\nconst AuthenticalInfoWrapper = styled(CardWrapper)`\n   padding: 20px;\n   display: flex;\n   align-items: center;\n\n   @media ${({ theme }) => theme.breakpoints.min.tablet} {\n      justify-content: space-between;\n   }\n\n   @media ${({ theme }) => theme.breakpoints.max.tablet} {\n      flex-direction: column;\n   }\n`\n\nconst StyledAuthenticalInfoImage = styled(Image)`\n   width: 300px;\n   height: 171px;\n   flex-shrink: 0;\n   border-radius: ${({ theme }) => theme.radius.secondary};\n\n   @media ${({ theme }) => theme.breakpoints.min.tablet} {\n      margin-left: 20px;\n   }\n\n   @media ${({ theme }) => theme.breakpoints.max.tablet} {\n      margin-top: 20px;\n      max-width: 100%;\n   }\n`\n\nconst RealizationTemplate = ({ phrases, realization, categories, technologies, language }) => (\n   <Wrapper>\n      <ProjectHeader\n         image={`${API_URL}${realization.thumbnail.path}`}\n         title={realization[`${language}_title`]}\n      />\n      <Categories categories={categories} language={language} />\n      <Text>{ReactHtmlParser(realization[`${language}_description`])}</Text>\n      {technologies.length ? (\n         <>\n            <Divider size=\"medium\" />\n            <TechnologyStack\n               title={getPhrase(phrases, 'technology-used', language)}\n               technologies={technologies}\n            />\n         </>\n      ) : null}\n      <Divider size=\"medium\" />\n      <ButtonsWrapper>\n         {realization.links.map(({ value, field: { label } }) => {\n            switch (label) {\n               case 'app':\n                  return (\n                     <ButtonContainer>\n                        <Button\n                           icon={WebAssetIcon}\n                           as=\"a\"\n                           href={value}\n                           target=\"_balnk\"\n                           rel=\"noopener noreferrer\"\n                        >\n                           {getPhrase(phrases, 'app', language)}\n                        </Button>\n                     </ButtonContainer>\n                  )\n               case 'demo':\n                  return (\n                     <ButtonContainer>\n                        <Button\n                           icon={LinkIcon}\n                           as=\"a\"\n                           href={value}\n                           target=\"_balnk\"\n                           rel=\"noopener noreferrer\"\n                        >\n                           {getPhrase(phrases, 'demo', language)}\n                        </Button>\n                     </ButtonContainer>\n                  )\n               case 'download':\n                  return (\n                     <ButtonContainer>\n                        <Button\n                           icon={GetAppIcon}\n                           as=\"a\"\n                           href={value}\n                           target=\"_balnk\"\n                           rel=\"noopener noreferrer\"\n                        >\n                           {getPhrase(phrases, 'download', language)}\n                        </Button>\n                     </ButtonContainer>\n                  )\n               case 'github':\n                  return (\n                     <ButtonContainer>\n                        <Button\n                           icon={GitHubIcon}\n                           as=\"a\"\n                           href={value}\n                           target=\"_balnk\"\n                           rel=\"noopener noreferrer\"\n                        >\n                           {getPhrase(phrases, 'github', language)}\n                        </Button>\n                     </ButtonContainer>\n                  )\n               case 'figma':\n                  return (\n                     <ButtonContainer>\n                        <Button\n                           icon={FigmaIcon}\n                           as=\"a\"\n                           href={value}\n                           target=\"_balnk\"\n                           rel=\"noopener noreferrer\"\n                        >\n                           {getPhrase(phrases, 'figma', language)}\n                        </Button>\n                     </ButtonContainer>\n                  )\n               default:\n                  return null\n            }\n         })}\n      </ButtonsWrapper>\n      {realization.authentical_info && (\n         <>\n            <Divider size=\"large\" />\n            <AuthenticalInfoWrapper>\n               <Text>{getPhrase(phrases, 'authentical-info', language)}</Text>\n               <StyledAuthenticalInfoImage src={authenticalInfoImage} />\n            </AuthenticalInfoWrapper>\n         </>\n      )}\n      {realization.gallery && realization.gallery.length && (\n         <>\n            <Divider size=\"large\" />\n            <GalleryTemplate gallery={realization.gallery} />\n         </>\n      )}\n      <Divider size=\"large\" />\n   </Wrapper>\n)\n\nRealizationTemplate.propTypes = {\n   phrases: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   realization: PropTypes.shape({\n      _id: PropTypes.string,\n      pl_title: PropTypes.string,\n      en_title: PropTypes.string,\n      thumbnail: PropTypes.shape({\n         path: PropTypes.string,\n      }),\n      pl_desctiption: PropTypes.string,\n      en_desctiption: PropTypes.string,\n      links: PropTypes.arrayOf(\n         PropTypes.shape({\n            field: PropTypes.shape({\n               label: PropTypes.string,\n            }),\n            value: PropTypes.string,\n         }),\n      ),\n      gallery: PropTypes.arrayOf(\n         PropTypes.shape({\n            meta: PropTypes.shape({\n               title: PropTypes.string,\n               asset: PropTypes.string,\n            }),\n            path: PropTypes.string,\n         }),\n      ),\n      _created: PropTypes.number,\n      authentical_info: PropTypes.bool,\n   }).isRequired,\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ).isRequired,\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ).isRequired,\n   language: PropTypes.string.isRequired,\n}\n\nRealizationTemplate.defaultProps = {\n   phrases: null,\n}\n\nconst mapStateToProps = ({ api: { phrases } }) => ({ phrases })\n\nexport default connect(mapStateToProps)(RealizationTemplate)\n","import bgHome from 'assets/backgrounds/home.png'\nimport Container from 'components/atoms/Container/Container'\nimport Divider from 'components/atoms/Divider/Divider'\nimport BackgroundSection from 'components/molecules/BackgroundSection/BackgroundSection'\nimport NoContentInfo from 'components/organisms/NoContentInfo/NoContentInfo'\nimport PreloadRealization from 'components/organisms/PreloadRealization/PreloadRealization'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport RealizationTemplate from 'templates/RealizationTemplate/RealizationTemplate'\nimport { getDataByIds } from 'Utils'\nimport Page404 from 'views/Page404'\n\nconst Realization = ({\n   match: {\n      params: { id },\n   },\n   phrases,\n   realizations,\n   categories,\n   technologies,\n   language,\n   connectionErrors,\n}) => {\n   if (phrases && realizations && categories && technologies) {\n      const project = realizations.find((x) => x._id === id)\n\n      if (!project) {\n         return <Page404 />\n      }\n\n      const projectCategories = getDataByIds(project.categories, categories)\n      const projectTechnologies = getDataByIds(project.technologies, technologies)\n\n      return (\n         <BackgroundSection background={bgHome}>\n            <Container small>\n               <RealizationTemplate\n                  realization={project}\n                  categories={projectCategories}\n                  technologies={projectTechnologies}\n                  language={language}\n               />\n            </Container>\n         </BackgroundSection>\n      )\n   }\n\n   return (\n      <BackgroundSection background={bgHome}>\n         <Container small>\n            <>\n               {connectionErrors.collectionRealizations ||\n               connectionErrors.collectionCategories ||\n               connectionErrors.collectionTechnologies ? (\n                  <>\n                     <Divider size=\"large\" />\n                     <NoContentInfo />\n                  </>\n               ) : (\n                  <PreloadRealization />\n               )}\n            </>\n            <Divider size=\"large\" />\n         </Container>\n      </BackgroundSection>\n   )\n}\n\nRealization.propTypes = {\n   match: PropTypes.shape({\n      params: PropTypes.shape({\n         id: PropTypes.string,\n      }),\n   }).isRequired,\n   phrases: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   realizations: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         pl_title: PropTypes.string,\n         en_title: PropTypes.string,\n         thumbnail: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n         pl_desctiption: PropTypes.string,\n         en_desctiption: PropTypes.string,\n         links: PropTypes.arrayOf(\n            PropTypes.shape({\n               field: PropTypes.shape({\n                  label: PropTypes.string,\n               }),\n               value: PropTypes.string,\n            }),\n         ),\n         _created: PropTypes.number,\n      }),\n   ),\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ),\n   language: PropTypes.string.isRequired,\n   // eslint-disable-next-line react/forbid-prop-types\n   connectionErrors: PropTypes.object.isRequired,\n}\n\nRealization.defaultProps = {\n   phrases: null,\n   realizations: null,\n   categories: null,\n   technologies: null,\n}\n\nconst mapStateToProps = ({\n   api: { phrases, realizations, categories, technologies, connectionErrors },\n   app: { language },\n}) => ({ phrases, realizations, categories, technologies, language, connectionErrors })\n\nexport default connect(mapStateToProps)(withRouter(Realization))\n","import ArrowForwardIosRoundedIcon from '@material-ui/icons/ArrowForwardIosRounded'\nimport CardWrapper from 'components/atoms/CardWrapper/CardWrapper'\nimport PropTypes from 'prop-types'\nimport React, { createRef } from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst Show = keyframes`\n   from {\n      opacity: 0;\n      transform: translateY(-20px);\n   }\n   to {\n      opacity: 1;\n      transform: translateY(0);\n   }\n`\n\nconst Wrapper = styled.div`\n   position: relative;\n   display: inline-block;\n   user-select: none;\n   z-index: ${({ isFocus }) => (isFocus ? 1 : 0)};\n`\n\nconst IconWrapper = styled.button`\n   width: 32px;\n   height: 32px;\n   border: none;\n   border-radius: 50%;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   background-color: transparent;\n   position: relative;\n   margin-left: 4px;\n   margin-right: -8px;\n   cursor: pointer;\n\n   ::before {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: ${({ theme }) => theme.transparent.white.soft};\n      opacity: 0;\n      transition: opacity 0.2s linear;\n      border-radius: 50%;\n   }\n\n   &:hover::before {\n      opacity: 1;\n   }\n`\n\nconst StyledIcon = styled(ArrowForwardIosRoundedIcon)`\n   color: ${({ theme }) => theme.fontPrimary} !important;\n   font-size: 16px !important;\n   transform: rotate(${({ direction }) => (direction === 'asc' ? 90 : -90)}deg);\n`\n\nconst Select = styled.select`\n   display: none;\n`\n\nconst Button = styled.div`\n   border: none;\n   height: 48px;\n   color: ${({ theme }) => theme.fontPrimary};\n   background: ${({ theme, active }) => (active ? theme.bgBadge : theme.bgSecondary)};\n   border-radius: 24px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   text-align: center;\n   font-size: ${({ theme }) => theme.fontSize.s};\n   padding: 0 24px;\n   cursor: pointer;\n`\n\nconst DropdownList = styled(CardWrapper)`\n   padding: 20px 0;\n   display: inline-flex;\n   flex-direction: column;\n   position: absolute;\n   top: 56px;\n   left: 0;\n   min-width: 200px;\n   animation: ${Show} 0.2s ease-out;\n   max-height: 320px;\n   overflow-y: auto;\n\n   ::-webkit-scrollbar {\n      width: 10px;\n   }\n\n   ::-webkit-scrollbar-thumb {\n      background: ${({ theme }) => theme.transparent.white.soft};\n      border-radius: 5px;\n   }\n`\n\nconst Option = styled.button`\n   font-size: ${({ theme }) => theme.fontSize.s};\n   padding: 10px 20px;\n   cursor: pointer;\n   border: none;\n   background: transparent;\n   color: ${({ theme }) => theme.fontPrimary};\n   text-align: left;\n   position: relative;\n\n   ::before {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: ${({ theme }) => theme.transparent.white.soft};\n      opacity: 0;\n      transition: opacity 0.2s linear;\n      border-radius: ${({ theme }) => theme.radiusSecondary};\n   }\n\n   &:hover::before {\n      opacity: 1;\n   }\n`\n\nconst Value = styled.span`\n   text-transform: lowercase;\n`\n\nclass Dropdown extends React.Component {\n   constructor(props) {\n      super(props)\n\n      this.Select = createRef()\n\n      const { sort } = this.props\n\n      this.state = {\n         isOpen: false,\n         value: null,\n         sortDirection: sort,\n      }\n   }\n\n   componentDidMount() {\n      const { defaultvalue, options } = this.props\n      try {\n         const option = options.find((x) => x.value === defaultvalue)\n         this.setState({ value: option.value })\n      } catch (e) {\n         this.setState({ value: e.message })\n      }\n   }\n\n   handleFocusDropdown() {\n      this.setState({\n         isOpen: true,\n      })\n   }\n\n   handleBlurDropdown(e) {\n      if (!e.currentTarget.contains(e.relatedTarget)) {\n         this.setState({\n            isOpen: false,\n         })\n      }\n   }\n\n   handleClickOption(e, selectedValue) {\n      this.Select.current.value = selectedValue\n      const { options, setValueCallback } = this.props\n      const option = options.find((x) => x.value === selectedValue)\n      this.setState(\n         {\n            value: option.value,\n         },\n         () => {\n            const { value, sortDirection } = this.state\n            setValueCallback(value, sortDirection)\n         },\n      )\n      e.currentTarget.blur()\n   }\n\n   toggleSortDirection() {\n      const { setValueCallback } = this.props\n      const { sortDirection } = this.state\n      this.setState(\n         {\n            sortDirection: sortDirection === 'asc' ? 'desc' : 'asc',\n         },\n         () => {\n            const { value, sortDirection: newSortDirection } = this.state\n            setValueCallback(value, newSortDirection)\n         },\n      )\n   }\n\n   render() {\n      const { options, label, sort, defaultvalue, ...props } = this.props\n      const { value, isOpen, sortDirection } = this.state\n      const buttonDisplay = value ? options.find((x) => x.value === value).display : ''\n      return (\n         <Wrapper\n            tabIndex=\"0\"\n            onBlur={(e) => this.handleBlurDropdown.call(this, e)}\n            onFocus={(e) => this.handleFocusDropdown.call(this, e)}\n            isFocus={isOpen}\n            {...props}\n         >\n            <Select ref={this.Select} defaultValue={defaultvalue}>\n               {options &&\n                  options.map(({ _id, value: optValue, display }) => (\n                     <option key={_id} value={optValue}>\n                        {display}\n                     </option>\n                  ))}\n            </Select>\n            <Button active={isOpen}>\n               {label}:&nbsp;<Value>{buttonDisplay}</Value>\n               {sort && (\n                  <IconWrapper onClick={() => this.toggleSortDirection()}>\n                     <StyledIcon direction={sortDirection} />\n                  </IconWrapper>\n               )}\n            </Button>\n            {isOpen && (\n               <DropdownList>\n                  {options.map(({ _id, value: optValue, display }) => (\n                     <Option\n                        key={_id}\n                        value={optValue}\n                        selected={optValue === value}\n                        onClick={(e) => this.handleClickOption(e, optValue)}\n                     >\n                        {display}\n                     </Option>\n                  ))}\n               </DropdownList>\n            )}\n         </Wrapper>\n      )\n   }\n}\n\nDropdown.propTypes = {\n   options: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         value: PropTypes.string,\n         display: PropTypes.string,\n      }),\n   ),\n   label: PropTypes.string.isRequired,\n   sort: PropTypes.string,\n   defaultvalue: PropTypes.string.isRequired,\n   setValueCallback: PropTypes.func,\n}\n\nDropdown.defaultProps = {\n   options: null,\n   sort: null,\n   setValueCallback: () => {},\n}\n\nexport default Dropdown\n","import SearchIcon from '@material-ui/icons/Search'\nimport PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n   width: 200px;\n   height: 48px;\n   position: relative;\n   overflow: hidden;\n   border-radius: 24px;\n   display: inline-block;\n`\n\nconst Input = styled.input`\n   width: 200px;\n   height: 48px;\n   will-change: transform;\n   border: none;\n   border-radius: 24px;\n   background: ${({ theme }) => theme.bgSecondary};\n   color: ${({ theme }) => theme.fontPrimary};\n   font-size: ${({ theme }) => theme.fontSize.s};\n   padding-left: 24px;\n   padding-right: 28px;\n   transition: transform 0.3s ease-out;\n   transform: translateX(${({ active }) => (active ? 0 : 152)}px);\n   outline: none;\n\n   :focus {\n      transform: translateX(0px);\n   }\n\n   ::placeholder {\n      color: ${({ theme }) => theme.fontSecondary};\n   }\n`\n\nconst IconWrapper = styled.div`\n   width: 48px;\n   height: 48px;\n   position: absolute;\n   right: 0;\n   top: 0;\n   border-radius: 50%;\n   background: ${({ theme }) => theme.bgSecondary};\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   pointer-events: none;\n`\n\nconst StyledIcon = styled(SearchIcon)`\n   font-size: 24px !important;\n   color: ${({ theme }) => theme.fontPrimary} !important;\n`\n\nconst SearchInput = ({ label, defaultValue, setValueCallback, ...props }) => {\n   const [value, setValue] = useState(defaultValue)\n\n   return (\n      <Wrapper {...props}>\n         <Input\n            type=\"search\"\n            active={value !== ''}\n            placeholder={label}\n            defaultValue={defaultValue}\n            onChange={({ target: { value: changeValue } }) => {\n               setValue(changeValue)\n               setValueCallback(changeValue)\n            }}\n         />\n         <IconWrapper>\n            <StyledIcon />\n         </IconWrapper>\n      </Wrapper>\n   )\n}\n\nSearchInput.propTypes = {\n   label: PropTypes.string.isRequired,\n   setValueCallback: PropTypes.func,\n   defaultValue: PropTypes.string,\n}\n\nSearchInput.defaultProps = {\n   setValueCallback: () => {},\n   defaultValue: '',\n}\n\nexport default SearchInput\n","import {\n   setFilter as setFilterAction,\n   setSearch as setSearchAction,\n   setSort as setSortAction,\n} from 'actions/app'\nimport Dropdown from 'components/molecules/Dropdown/Dropdown'\nimport SearchInput from 'components/molecules/SearchInput/SearchInput'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { getPhrase } from 'Utils'\n\nconst Wrapper = styled.div`\n   min-height: 64px;\n   border-radius: 32px;\n   box-shadow: ${({ theme }) => theme.shadow.soft};\n   background: ${({ theme }) => theme.bgPrimary};\n   padding: 4px;\n   display: flex;\n   flex-wrap: wrap;\n   justify-content: space-between;\n`\n\nconst Section = styled.section`\n   display: flex;\n   flex-wrap: wrap;\n   justify-content: flex-end;\n`\n\nconst StyledDropdown = styled(Dropdown)`\n   margin: 4px;\n`\n\nconst StyledSearch = styled(SearchInput)`\n   margin: 4px;\n   margin-left: auto;\n`\n\nconst getDropdownData = (phrases, realizations, categories, technologies, language) => {\n   const sort = [\n      {\n         _id: 'sort-1',\n         value: 'date',\n         display: getPhrase(phrases, 'date', language),\n      },\n      {\n         _id: 'sort-2',\n         value: 'technologycount',\n         display: getPhrase(phrases, 'technologies', language),\n      },\n      {\n         _id: 'sort-3',\n         value: 'category',\n         display: getPhrase(phrases, 'category', language),\n      },\n   ]\n\n   const dropdownCategories = [\n      {\n         _id: 'category-0',\n         value: 'all',\n         display: getPhrase(phrases, 'all', language),\n         projectsCount: 9999999,\n      },\n   ]\n   const dropdownTechnologies = [\n      {\n         _id: 'technology-0',\n         value: 'all',\n         display: getPhrase(phrases, 'all', language),\n         projectsCount: 9999999,\n      },\n   ]\n\n   realizations.map((realization) => {\n      if (realization.categories) {\n         realization.categories.map((category) => {\n            const findedCategoryInDropdown = dropdownCategories.find((x) => x._id === category._id)\n            if (!findedCategoryInDropdown) {\n               const findedCategory = categories.find((x) => x._id === category._id)\n\n               const projectsCount = realizations.filter((x) =>\n                  x.categories.find((y) => y._id === category._id),\n               )\n               dropdownCategories.push({\n                  _id: findedCategory._id,\n                  value: findedCategory.name,\n                  display: findedCategory[language],\n                  projectsCount: projectsCount.length,\n               })\n            }\n            return 0\n         })\n      }\n      if (realization.technologies) {\n         realization.technologies.map((technology) => {\n            const findedTechnologyInDropdown = dropdownTechnologies.find(\n               (x) => x._id === technology._id,\n            )\n            if (!findedTechnologyInDropdown) {\n               const findedTechnology = technologies.find((x) => x._id === technology._id)\n\n               const projectsCount = realizations.filter((x) =>\n                  x.technologies.find((y) => y._id === technology._id),\n               )\n               dropdownTechnologies.push({\n                  _id: findedTechnology._id,\n                  value: findedTechnology.name,\n                  display: findedTechnology.name,\n                  projectsCount: projectsCount.length,\n               })\n            }\n            return 0\n         })\n      }\n      return 0\n   })\n\n   dropdownTechnologies.sort((a, b) => {\n      return b.projectsCount - a.projectsCount\n   })\n   dropdownCategories.sort((a, b) => {\n      return b.projectsCount - a.projectsCount\n   })\n\n   return {\n      sort,\n      categories: dropdownCategories,\n      technologies: dropdownTechnologies,\n   }\n}\n\nconst FilterPanel = ({\n   phrases,\n   realizations,\n   categories,\n   technologies,\n   language,\n   setSort,\n   setFilter,\n   setSearch,\n   sort,\n   filter,\n}) => {\n   const dropdownData =\n      phrases && realizations && categories && technologies\n         ? getDropdownData(phrases, realizations, categories, technologies, language)\n         : null\n\n   return (\n      <Wrapper>\n         <Section>\n            {dropdownData && (\n               <>\n                  <StyledDropdown\n                     options={dropdownData.sort}\n                     label={getPhrase(phrases, 'sort', language)}\n                     defaultvalue={sort.option}\n                     sort={sort.direction}\n                     setValueCallback={(value, direction) => {\n                        setSort(value, direction)\n                     }}\n                  />\n                  <StyledDropdown\n                     options={dropdownData.categories}\n                     label={getPhrase(phrases, 'category', language)}\n                     defaultvalue={filter.category}\n                     setValueCallback={(value) => {\n                        setFilter('category', value)\n                     }}\n                  />\n                  <StyledDropdown\n                     options={dropdownData.technologies}\n                     label={getPhrase(phrases, 'technology', language)}\n                     defaultvalue={filter.technology}\n                     setValueCallback={(value) => {\n                        setFilter('technology', value)\n                     }}\n                  />\n               </>\n            )}\n         </Section>\n         <StyledSearch\n            label={`${getPhrase(phrases, 'search', language)}...`}\n            defaultValue={filter.search}\n            setValueCallback={(value) => {\n               setSearch(value)\n            }}\n         />\n      </Wrapper>\n   )\n}\n\nFilterPanel.propTypes = {\n   phrases: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   realizations: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         pl_title: PropTypes.string,\n         en_title: PropTypes.string,\n         thumbnail: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n         pl_desctiption: PropTypes.string,\n         en_desctiption: PropTypes.string,\n         links: PropTypes.arrayOf(\n            PropTypes.shape({\n               field: PropTypes.shape({\n                  label: PropTypes.string,\n               }),\n               value: PropTypes.string,\n            }),\n         ),\n         _created: PropTypes.number,\n      }),\n   ),\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ),\n   language: PropTypes.string.isRequired,\n   sort: PropTypes.shape({\n      option: PropTypes.string,\n      direction: PropTypes.string,\n   }).isRequired,\n   filter: PropTypes.shape({\n      category: PropTypes.string,\n      technology: PropTypes.string,\n      search: PropTypes.string,\n   }).isRequired,\n   setSort: PropTypes.func.isRequired,\n   setFilter: PropTypes.func.isRequired,\n   setSearch: PropTypes.func.isRequired,\n}\n\nFilterPanel.defaultProps = {\n   phrases: null,\n   realizations: null,\n   categories: null,\n   technologies: null,\n}\n\nconst mapStateToProps = ({\n   api: { phrases, realizations, categories, technologies },\n   app: { language, sort, filter },\n}) => ({ phrases, realizations, categories, technologies, language, sort, filter })\n\nconst mapDispatchToProps = (dispatch) => ({\n   setSort: (option, direction) => dispatch(setSortAction(option, direction)),\n   setFilter: (type, value) => dispatch(setFilterAction(type, value)),\n   setSearch: (phrase) => dispatch(setSearchAction(phrase)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterPanel)\n","import Card from 'components/organisms/Card/Card'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { getDataByIds } from 'Utils'\n\nconst Wrapper = styled.section`\n   display: grid;\n   grid-template-columns: repeat(auto-fill, minmax(270px, auto));\n   grid-gap: 40px;\n`\n\nconst RealizationsGridTemplate = ({ realizations, categories, technologies, language }) => (\n   <Wrapper>\n      {realizations.map((realization) => {\n         const {\n            _id,\n            thumbnail: { path },\n            categories: refCategories,\n            technologies: refTechnologies,\n         } = realization\n\n         return (\n            <Card\n               key={_id}\n               link={`/realizations/${_id}`}\n               title={realization[`${language}_title`]}\n               image={path}\n               description={realization[`${language}_description`]}\n               categories={refCategories.length ? getDataByIds(refCategories, categories) : []}\n               technologies={\n                  refTechnologies.length ? getDataByIds(refTechnologies, technologies) : []\n               }\n            />\n         )\n      })}\n   </Wrapper>\n)\n\nRealizationsGridTemplate.propTypes = {\n   realizations: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         pl_title: PropTypes.string,\n         en_title: PropTypes.string,\n         thumbnail: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n         pl_desctiption: PropTypes.string,\n         en_desctiption: PropTypes.string,\n         links: PropTypes.arrayOf(\n            PropTypes.shape({\n               field: PropTypes.shape({\n                  label: PropTypes.string,\n               }),\n               value: PropTypes.string,\n            }),\n         ),\n      }),\n   ).isRequired,\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ).isRequired,\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ).isRequired,\n   language: PropTypes.string.isRequired,\n}\n\nexport default RealizationsGridTemplate\n","import bgRealizations from 'assets/backgrounds/realizations.png'\nimport Container from 'components/atoms/Container/Container'\nimport Divider from 'components/atoms/Divider/Divider'\nimport Heading from 'components/atoms/Heading/Heading'\nimport BackgroundSection from 'components/molecules/BackgroundSection/BackgroundSection'\nimport NoContent from 'components/molecules/NoContent/NoContent'\nimport FilterPanel from 'components/organisms/FilterPanel/FilterPanel'\nimport NoContentInfo from 'components/organisms/NoContentInfo/NoContentInfo'\nimport PreloadCards from 'components/organisms/PreloadCard/PreloadCards'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport RealizationsGridTemplate from 'templates/RealizationsGridTemplate/RealizationsGridTemplate'\nimport { getPhrase } from 'Utils'\n\nclass Realizations extends React.Component {\n   filterRealizations() {\n      const { sort, filter, realizations, categories, language } = this.props\n\n      if (!realizations || !categories) {\n         return []\n      }\n\n      let filtered = [...realizations]\n      const sortTrue = sort.direction === 'desc' ? 1 : -1\n      const sortFalse = sort.direction === 'asc' ? 1 : -1\n\n      filtered = filtered.sort((a, b) => {\n         if (a._created > b._created) return sortTrue\n         if (a._created < b._created) return sortFalse\n         return 0\n      })\n\n      if (sort.option === 'technologycount') {\n         filtered = filtered.sort((a, b) => {\n            if (sort.direction === 'desc') return a.technologies.length - b.technologies.length\n            return b.technologies.length - a.technologies.length\n         })\n      } else if (sort.option === 'category') {\n         filtered = filtered.sort((a, b) => {\n            const firstCategoryA = a.categories[0]\n               ? categories.find((x) => x.name === a.categories[0].display)\n               : null\n            const firstCategoryB = a.categories[0]\n               ? categories.find((x) => x.name === b.categories[0].display)\n               : null\n            const displayA = firstCategoryA ? firstCategoryA[language] : ''\n            const displayB = firstCategoryB ? firstCategoryB[language] : ''\n            if (sort.direction === 'asc') return displayA.localeCompare(displayB)\n            return displayB.localeCompare(displayA)\n         })\n      }\n\n      if (filter.technology !== 'all') {\n         filtered = filtered.filter((x) => {\n            if (x.technologies && x.technologies.length) {\n               return !!x.technologies.find((y) => y.display === filter.technology)\n            }\n            return false\n         })\n      }\n\n      if (filter.category !== 'all') {\n         filtered = filtered.filter((x) => {\n            if (x.categories && x.categories.length) {\n               return !!x.categories.find((y) => y.display === filter.category)\n            }\n            return false\n         })\n      }\n\n      if (filter.search !== '') {\n         filtered = filtered.filter((x) => {\n            const phrase = filter.search.toLowerCase()\n            const title = x[`${language}_title`].toLowerCase()\n            const description = x[`${language}_description`].toLowerCase()\n            return title.includes(phrase) || description.includes(phrase)\n         })\n      }\n\n      return filtered\n   }\n\n   render() {\n      const {\n         phrases,\n         realizations,\n         categories,\n         technologies,\n         language,\n         connectionErrors,\n      } = this.props\n      const filtered = this.filterRealizations()\n\n      return (\n         <BackgroundSection background={bgRealizations}>\n            <Container>\n               <Divider size=\"large\" mobile />\n               <Heading>{getPhrase(phrases, 'realizations', language)}</Heading>\n               <Divider size=\"medium\" />\n               <FilterPanel />\n               <Divider size=\"medium\" />\n               {realizations && categories && technologies ? (\n                  <>\n                     {filtered.length ? (\n                        <>\n                           <RealizationsGridTemplate\n                              realizations={filtered}\n                              categories={categories}\n                              technologies={technologies}\n                              language={language}\n                           />\n                        </>\n                     ) : (\n                        <>\n                           <Divider size=\"small\" />\n                           <NoContent>\n                              {getPhrase(phrases, 'no-filtered-realizations', language)}\n                           </NoContent>\n                           <Divider size=\"small\" />\n                        </>\n                     )}\n                  </>\n               ) : (\n                  <>\n                     {connectionErrors.collectionRealizations ||\n                     connectionErrors.collectionCategories ||\n                     connectionErrors.collectionTechnologies ? (\n                        <NoContentInfo />\n                     ) : (\n                        <PreloadCards />\n                     )}\n                  </>\n               )}\n               <Divider size=\"large\" />\n            </Container>\n         </BackgroundSection>\n      )\n   }\n}\n\nRealizations.propTypes = {\n   phrases: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   realizations: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         pl_title: PropTypes.string,\n         en_title: PropTypes.string,\n         thumbnail: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n         pl_desctiption: PropTypes.string,\n         en_desctiption: PropTypes.string,\n         links: PropTypes.arrayOf(\n            PropTypes.shape({\n               field: PropTypes.shape({\n                  label: PropTypes.string,\n               }),\n               value: PropTypes.string,\n            }),\n         ),\n         _created: PropTypes.number,\n      }),\n   ),\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ),\n   language: PropTypes.string.isRequired,\n   sort: PropTypes.shape({\n      option: PropTypes.string,\n      direction: PropTypes.string,\n   }).isRequired,\n   filter: PropTypes.shape({\n      category: PropTypes.string,\n      technology: PropTypes.string,\n      search: PropTypes.string,\n   }).isRequired,\n   // eslint-disable-next-line react/forbid-prop-types\n   connectionErrors: PropTypes.object.isRequired,\n}\n\nRealizations.defaultProps = {\n   phrases: null,\n   realizations: null,\n   categories: null,\n   technologies: null,\n}\n\nconst mapStateToProps = ({\n   api: { phrases, realizations, categories, technologies, connectionErrors },\n   app: { language, sort, filter },\n}) => ({\n   phrases,\n   realizations,\n   categories,\n   technologies,\n   language,\n   sort,\n   filter,\n   connectionErrors,\n})\n\nexport default connect(mapStateToProps)(Realizations)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport SimpleReactLightbox from 'simple-react-lightbox'\nimport store from 'store'\nimport MainTemplate from 'templates/MainTemplate/MainTemplate'\nimport Home from 'views/Home'\nimport InfoPage from 'views/InfoPage'\nimport Realization from 'views/Realization'\nimport Realizations from 'views/Realizations'\n\nconst Root = () => {\n   return (\n      <Provider store={store}>\n         <SimpleReactLightbox>\n            <BrowserRouter>\n               <MainTemplate>\n                  <Switch>\n                     <Route path=\"/realizations/:id\" component={Realization} />\n                     <Route path=\"/realizations\" component={Realizations} />\n                     <Route path=\"/:page\" component={InfoPage} />\n                     <Route path=\"/\" component={Home} />\n                  </Switch>\n               </MainTemplate>\n            </BrowserRouter>\n         </SimpleReactLightbox>\n      </Provider>\n   )\n}\n\nexport default Root\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from 'reportWebVitals'\nimport * as serviceWorker from 'serviceWorker'\nimport Root from 'views/Root'\n\nReactDOM.render(\n   <React.StrictMode>\n      <Root />\n   </React.StrictMode>,\n   document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\nserviceWorker.register()\n"],"sourceRoot":""}
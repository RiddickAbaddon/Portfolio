{"version":3,"sources":["reportWebVitals.js","defines.js","actions/api.js","reducers/api.js","actions/app.js","reducers/app.js","store/index.js","localStorage.js","components/atoms/Footer/Footer.js","components/atoms/Text/Text.js","components/atoms/ToTop/ToTop.js","assets/icons/english.svg","assets/icons/github.svg","assets/icons/polish.svg","components/atoms/Icon/Icon.js","components/molecules/ArrowButton/ArrowButton.js","components/organisms/Navigation/Navigation.js","theme/GlobalStyle.js","theme/MainTheme.js","theme/SlickSliderStyle.js","Utils.js","templates/MainTemplate/MainTemplate.js","assets/backgrounds/hex.png","assets/backgrounds/home.png","assets/mail.svg","components/atoms/BackgroundSection/BackgroundSection.js","components/atoms/Container/Container.js","components/atoms/Divider/Divider.js","components/atoms/Heading/Heading.js","components/atoms/PreloadAbout/PreloadAbout.js","components/atoms/SVG/SVG.js","components/molecules/Button/Button.js","components/atoms/PreloadImage/PreloadImage.js","components/molecules/PreloadTechnologyStack/PreloadTechnologyStack.js","components/molecules/TechnologyStack/TechnologyStack.js","components/atoms/CardWrapper/CardWrapper.js","components/atoms/Glow/Glow.js","components/molecules/Image/Image.js","components/organisms/About/About.js","components/molecules/PreloadCategories/PreloadCategories.js","components/organisms/PreloadCard/PreloadCard.js","components/organisms/PreloadCard/PreloadCards.js","templates/CenterPageTemplate/CenterPageTemplate.js","components/atoms/Badge/Badge.js","components/molecules/Categories/Categories.js","components/molecules/TechnologyStackSmall/TechnologyStackSmall.js","components/organisms/Card/Card.js","templates/RealizationsSliderTemplate/RealizationsSliderTemplate.js","views/Home.js","assets/backgrounds/realizations.png","components/molecules/PreloadText/PreloadText.js","assets/404.svg","views/Page404.js","views/InfoPage.js","components/organisms/PreloadRealization/PreloadRealization.js","assets/icons/figma.svg","components/organisms/ProjectHeader/ProjectHeader.js","templates/GalleryTemplate/GalleryTemplate.js","templates/RealizationTemplate/RealizationTemplate.js","views/Realization.js","components/molecules/Dropdown/Dropdown.js","components/molecules/SearchInput/SearchInput.js","components/organisms/FilterPanel/FilterPanel.js","templates/RealizationsGridTemplate/RealizationsGridTemplate.js","views/Realizations.js","views/Root.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","API_URL","API_TOKEN","FETCH_COLLECTION_SUCCESS","FETCH_SINGLETON_SUCCESS","FETCH_SINGLETON_FAILURE","FETCH_THUMBNAIL_SUCCESS","fetchCollection","collection","dispatch","type","axios","params","token","data","payload","entries","catch","err","initialState","thumbnails","apiReducer","state","action","name","url","SET_LANGUAGE","SET_SORT","SET_FILTER","SET_SEARCH","searchTimeout","LANGUAGES","language","sort","option","direction","filter","category","technology","search","appReducer","value","phrase","persistedState","serializedState","localStorage","getItem","JSON","parse","loadState","rootReducer","combineReducers","api","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","subscribe","stringify","setItem","saveState","getState","Footer","styled","footer","theme","bgPrimary","shadow","soft","Text","div","small","fontSize","s","m","line","main","lineclamp","css","mainNumber","fontPrimary","accentColor","ToTop","prevProps","this","props","location","pathname","scrollTo","top","React","Component","withRouter","Icon","img","StyledButton","button","hard","transparent","white","mid","StyledIcon","ArrowForwardIosRoundedIcon","prev","ArrowButton","defaultProps","Wrapper","nav","breakpoints","min","tablet","max","bgsmall","radius","primary","BackButton","Link","to","NavList","up","connect","setLanguage","setLanguageAction","path","split","x","backlink","length","backlinkpath","map","element","i","as","src","PolishIcon","EnglishIcon","onClick","href","target","rel","GitHubIcon","GlobalStyle","createGlobalStyle","fontFamily","bgMain","MainTheme","bgSecondary","bgBadge","fontSecondary","gradient","accent","preload","glow","slider","xl","l","xs","fontWeight","regular","bold","secondary","easing","mobile","desktop","SlickSliderStyle","getDataByIds","idsCollection","result","_id","finded","find","push","getPhrase","phrases","PulseMessenger","keyframes","MessengerBackground","MainTemplate","fetchPhrases","fetchRealizations","fetchCategories","fetchTechnologies","children","Image","loaded","align","BackgroundSection","background","useState","setLoaded","onLoad","Container","Divider","size","StyledHeading","h1","Heading","PulseAvatar","PulseCircle","PreloadAbout","SVG","ButtonWrapper","ButtonText","span","IconWrapper","Button","IconComponent","icon","Preload","PreloadImage","width","height","PreloadTitle","IconsWrapper","PreloadIcon","delay","delays","getDelays","PreloadTechnologyStack","Show","section","IconLabel","TechnologyStack","technologies","title","image","alt","CardWrapper","Glow","bottom","IMG","show","StyledPreloadImage","fetchThumbnail","thumbnail","isLink","thumbnailSrc","getThumbnail","setState","w","h","fetchThumbnailAction","ShowAvatar","ShowBackground","ShowLine","ShowGlow","ShowCircle","ShowText","TextWrapper","StyledText","Avatar","Background","Line","StyledGlow","Circle","About","avatar","Category","globaldelay","CategoriesWrapper","PreloadCategories","globalDelay","StyledCardWrapper","Title","DescriptionLine","CardFooter","PreloadCard","smallgap","PreloadCards","CenterPageTemplate","Badge","trim","StyledBadge","Categories","categories","TechnologyStackSmall","StyledTechnologyStack","StyledImage","Card","text","link","description","ReactHtmlParser","replace","StyledSlider","Slider","SliderShadow","StyledArrowButton","Slide","RealizationsSliderTemplate","realizations","settings","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","responsive","breakpoint","realization","refCategories","refTechnologies","sortRealizations","a","b","_created","Home","fetchAbout","about","bgHome","slice","bgHex","mailIcon","singleton","PreloadLine","PreloadText","Page404","image404","InfoPage","fetchPages","pages","pageSlug","match","page","name_slug","bgRealizations","reactHtmlParser","PreloadHeader","PreloadHeaderImage","PreloadHeaderTitle","PreloadButton","PreloadRealization","header","HeadingWrapper","ProjectHeader","ImageWrapper","GalleryTemplate","gallery","meta","asset","FigmaIcon","FigmaIconURL","ButtonsWrapper","ButtonContainer","RealizationTemplate","links","field","label","WebAssetIcon","LinkIcon","GetAppIcon","Realization","id","project","projectCategories","projectTechnologies","isFocus","Select","select","active","DropdownList","Option","radiusSecondary","Value","Dropdown","createRef","isOpen","sortDirection","defaultvalue","options","e","message","currentTarget","contains","relatedTarget","selectedValue","current","setValueCallback","blur","newSortDirection","buttonDisplay","display","tabIndex","onBlur","handleBlurDropdown","call","onFocus","handleFocusDropdown","ref","defaultValue","optValue","toggleSortDirection","selected","handleClickOption","Input","input","SearchIcon","SearchInput","setValue","placeholder","onChange","changeValue","Section","StyledDropdown","StyledSearch","FilterPanel","setSort","setFilter","setSearch","dropdownData","dropdownCategories","projectsCount","dropdownTechnologies","findedCategory","y","findedTechnology","getDropdownData","setSortAction","setFilterAction","clearTimeout","setTimeout","setSearchAction","RealizationsGridTemplate","Realizations","filtered","sortTrue","sortFalse","firstCategoryA","firstCategoryB","displayA","displayB","localeCompare","toLowerCase","includes","filterRealizations","Root","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sECPDQ,EAAU,qCACVC,EAAY,iCCGZC,EAA2B,2BAI3BC,EAA0B,0BAC1BC,EAA0B,0BAG1BC,EAA0B,0BAG1BC,EAAkB,SAACC,GAAD,OAAgB,SAACC,GAG7C,OAFAA,EAAS,CAAEC,KAb0B,6BAe9BC,IAAM,GAAD,OAAIV,EAAJ,gCAAmCO,GAAc,CAC1DI,OAAQ,CACLC,MAAOX,KAGTP,MAAK,YAAe,IAAZmB,EAAW,EAAXA,KACNL,EAAS,CACNC,KAAMP,EACNY,QAAS,CACNL,KAAMF,EACNM,KAAMA,EAAKE,cAInBC,OAAM,SAACC,GAAD,OAAST,EAAS,CAAEC,KAAML,EAAyBU,QAASG,SC1BnEC,EAAe,CAClBC,WAAY,IAkCAC,EA/BI,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAClD,OAAQA,EAAOb,MACZ,KAAKP,EACF,OAAO,2BACDmB,GADN,kBAEIC,EAAOR,QAAQL,KAFnB,YAE8Ba,EAAOR,QAAQD,QAGhD,KAAKV,EACF,OAAO,2BACDkB,GADN,kBAEIC,EAAOR,QAAQL,KAAOa,EAAOR,QAAQD,OAG5C,KAAKR,EACF,OAAO,2BACDgB,GADN,IAEGF,WAAW,GAAD,mBACJE,EAAMF,YADF,CAEP,CACGI,KAAMD,EAAOR,QAAQS,KACrBC,IAAKF,EAAOR,QAAQU,SAKhC,QACG,OAAOH,ICrCHI,EAAe,eACfC,EAAW,WACXC,EAAa,aACbC,EAAa,aAOtBC,EAAgB,KAEPC,EACN,KADMA,EAEN,KCFDZ,EAAe,CAClBa,SAAUD,EACVE,KAAM,CACHC,ODVsB,OCWtBC,UDVgC,OCYnCC,OAAQ,CACLC,SDZ0B,MCa1BC,WDZ4B,MCa5BC,OAAQ,KA4CCC,EAxCI,WAAmC,IAAlClB,EAAiC,uDAAzBH,EAAcI,EAAW,uCAClD,OAAQA,EAAOb,MACZ,KAAKgB,EACF,OAAO,2BACDJ,GADN,IAEGU,SAAUT,EAAOR,QAAQiB,WAG/B,KAAKL,EACF,OAAO,2BACDL,GADN,IAEGW,KAAM,CACHC,OAAQX,EAAOR,QAAQmB,OACvBC,UAAWZ,EAAOR,QAAQoB,aAInC,KAAKP,EACF,OAAO,2BACDN,GADN,IAEGc,OAAO,2BACDd,EAAMc,QADN,kBAEFb,EAAOR,QAAQL,KAAOa,EAAOR,QAAQ0B,UAI/C,KAAKZ,EACF,OAAO,2BACDP,GADN,IAEGc,OAAO,2BACDd,EAAMc,QADN,IAEHG,OAAQhB,EAAOR,QAAQ2B,WAIhC,QACG,OAAOpB,I,gBCvDVqB,ECNmB,WACtB,IACG,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EACD,OAEH,OAAOG,KAAKC,MAAMJ,GACnB,MAAO1B,GACN,QDFiB+B,GAEjBC,EAAcC,YAAgB,CACjCC,IAAK/B,EACLgC,IAAKb,IAIFc,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAQC,YAAYT,EAAaP,EAAgBW,EAAiBM,YAAgBC,OAGxFH,EAAMI,WAAU,YCNS,SAACxC,GACvB,IACG,IAAMsB,EAAkBG,KAAKgB,UAAUzC,GACvCuB,aAAamB,QAAQ,QAASpB,GAC/B,WDGFqB,CAAU,CACPb,IAAKM,EAAMQ,WAAWd,IACtBC,IAAKK,EAAMQ,WAAWb,SAIbK,Q,8MEvBf,IAOeS,EAPAC,IAAOC,OAAV,KAEK,qBAAGC,MAAkBC,aACrB,qBAAGD,MAAkBE,OAAOC,Q,ieCH7C,IAwBeC,EAxBFN,IAAOO,IAAV,KAEM,gBAAGC,EAAH,EAAGA,MAAON,EAAV,EAAUA,MAAV,OAAuBM,EAAQN,EAAMO,SAASC,EAAIR,EAAMO,SAASE,KAE/D,qBAAGT,MAAkBU,KAAKC,QACvC,gBAAGC,EAAH,EAAGA,UAAWZ,EAAd,EAAcA,MAAd,OACCY,GACAC,YADS,IAGgBD,EAGZZ,EAAMU,KAAKI,WAAaF,MAI5B,qBAAGZ,MAAkBe,eAGlB,qBAAGf,MAAkBgB,eCjBjCC,G,iLACgBC,GAGZC,KAAKC,MADNC,SAAYC,WAIXJ,EADDG,SAAYC,UAGZrC,OAAOsC,SAAS,CAAEC,IAAK,M,+BAK1B,OAAO,S,GAdOC,IAAMC,WAwBXC,eAAWV,IC5BX,OAA0B,oCCA1B,OAA0B,mCCA1B,OAA0B,mC,uICEzC,IAMeW,GANF9B,IAAO+B,IAAV,MACE,qBAAGvB,MAAqB,GAAK,MAC5B,qBAAGA,MAAqB,GAAK,M,smCCC1C,IAAMwB,GAAehC,IAAOiC,OAAV,MAGD,qBAAG/B,MAAkBC,aAKrB,qBAAGD,MAAkBE,OAAO8B,QACjC,qBAAGhC,MAAkBe,eAYP,qBAAGf,MAAkBiC,YAAYC,MAAMC,OAgB3DC,GAAatC,YAAOuC,KAAPvC,CAAH,MACJ,qBAAGE,MAAkBe,eAE5B,kBACU,SADV,EAAGuB,MAEFzB,YADA,SAMA0B,GAAc,SAAC,GAAD,IAAGD,EAAH,EAAGA,KAASlB,EAAZ,gCACjB,cAACU,GAAD,2BAAkBV,GAAlB,aACG,cAACgB,GAAD,CAAYE,KAAMA,EAAO,OAAS,WAQxCC,GAAYC,aAAe,CACxBF,MAAM,GAGMC,U,gqDCrDf,IAAME,GAAU3C,IAAO4C,IAAV,MAQD,qBAAG1C,MAAkB2C,YAAYC,IAAIC,UAGrC,qBAAG7C,MAAkB2C,YAAYG,IAAID,UAS/B,qBAAGE,QAAyB,IAAM,OAC1B,qBAAG/C,MAAkBgD,OAAOC,WAE/B,qBAAGjD,MAAkBE,OAAOC,QAU7C+C,GAAapD,YAAOqD,IAAPrD,CAAH,MAOX,kBACQ,MADR,EAAGsD,GAEGvC,YADL,MAKKA,YALL,SAWAwC,GAAUvD,IAAOO,IAAV,MAIR,qBAAGiD,IAEFzC,YADE,MAEU,qBAAGb,MAAkB2C,YAAYC,IAAIC,UAGrC,qBAAG7C,MAAkB2C,YAAYG,IAAID,aAMjDT,GAAatC,YAAO8B,GAAP9B,CAAH,MAGJ,qBAAGE,MAAkB2C,YAAYC,IAAIC,UAGrC,qBAAG7C,MAAkB2C,YAAYG,IAAID,UA2DlCU,gBANS,SAAC,GAAD,MAA4B,CAAE7F,SAA9B,EAAGqB,IAAOrB,aAEP,SAACvB,GAAD,MAAe,CACvCqH,YAAa,SAAC9F,GAAD,OAAcvB,EZ9HH,SAACuB,GAAD,OAAc,SAACvB,GACvCA,EAAS,CAAEC,KAAMgB,EAAcX,QAAS,CAAEiB,eY6HN+F,CAAkB/F,QAG1C6F,CAA6C5B,aAtDzC,SAAC,GAAyC,IAAvCjE,EAAsC,EAAtCA,SAAU8F,EAA4B,EAA5BA,YACvBE,EADmD,EAAfrC,SACpBC,SAASqC,MAAM,KAAK7F,QAAO,SAAC8F,GAAD,MAAa,KAANA,KAEpDC,EAAW,IACf,GAAIH,EAAKI,OACN,GAAIJ,EAAKI,OAAS,EAAG,CAClB,IAAIC,EAAe,GACnBL,EAAKM,KAAI,SAACC,EAASC,GAIhB,OAHIA,EAAIR,EAAKI,OAAS,IACnBC,GAAY,WAAQE,IAEhB,KAGVJ,EAAWE,OAEXF,EAAW,IAIjB,OACG,eAACpB,GAAD,CAASM,QAAsB,MAAbc,EAAlB,UACG,cAACX,GAAD,CAAYE,GAAIS,EAAhB,SACG,cAAC,GAAD,CAAavB,MAAI,EAAC6B,GAAG,WAExB,eAACd,GAAD,CAASC,GAAiB,MAAbO,EAAb,UACG,cAAC,GAAD,CACGO,IAAK1G,IAAaD,EAAe4G,GAAaC,GAC9CC,QAAS,WACNf,EAAY9F,IAAaD,EAAeA,EAAeA,MAG7D,mBAAG+G,KAAK,oCAAoCC,OAAO,SAASC,IAAI,sBAAhE,SACG,cAAC,GAAD,CAAMN,IAAKO,iB,glBC3H1B,IAiCeC,GAjCKC,YAAH,MASI,qBAAG7E,MAAkB8E,WAAW7B,WAMlC,qBAAGjD,MAAkBO,SAASE,KAC7B,qBAAGT,MAAkB+E,UAC1B,qBAAG/E,MAAkBe,eAErB,qBAAGf,MAAkB2C,YAAYG,IAAID,UAM/B,qBAAG7C,MAAkB8E,WAAW7B,WAIjC,qBAAGjD,MAAkBgB,eCoC1BgE,GAnEG,CACfD,OAAQ,kBACR9E,UAAW,kBACXgF,YAAa,kBACbC,QAAS,kBACTnE,YAAa,mBACboE,cAAe,kBACfnE,YAAa,qBAEbiB,YAAa,CACVC,MAAO,CACJ/B,KAAM,yBACNgC,IAAK,2BAGXiD,SAAU,CACPC,OAAQ,mFACRC,QACG,6GACHC,KACG,iGACHC,OAAQ,wDAEXjF,SAAU,CACPkF,GAAI,SACJC,EAAG,SACHjF,EAAG,SACHD,EAAG,SACHmF,GAAI,UAEPC,WAAY,CACTC,QAAS,IACTC,KAAM,KAEThB,WAAY,CACT7B,QAAQ,4BAEX/C,OAAQ,CACLC,KAAM,0CACN6B,KAAM,mCACNuD,KAAM,0CAETvC,OAAQ,CACLC,QAAS,OACT8C,UAAW,QAEdrF,KAAM,CACHC,KAAM,QACNG,WAAY,KAEfkF,OAAQ,CACL/C,QAAS,uCAEZN,YAAa,CACVG,IAAK,CACFmD,OAAQ,qBACRpD,OAAQ,qBACRqD,QAAS,uBAEZtD,IAAK,CACFqD,OAAQ,qBACRpD,OAAQ,qBACRqD,QAAS,yB,2pEC5DlB,IAwHeC,GAxHUtB,YAAH,MCDTuB,GAAe,SAACC,EAAenK,GACzC,IAAMoK,EAAS,GAQf,OAPID,EAAcvC,QACfuC,EAAcrC,KAAI,YAAc,IAAXuC,EAAU,EAAVA,IACZC,EAAStK,EAAWuK,MAAK,SAAC7C,GAAD,OAAOA,EAAE2C,MAAQA,KAEhD,OADIC,GAAQF,EAAOI,KAAKF,GACjB,KAGNF,GAOGK,GAAY,SAACC,EAAS1J,EAAMQ,GACtC,GAAIkJ,EAAS,CACV,IAAMxI,EAASwI,EAAQH,MAAK,SAAC7C,GAAD,OAAOA,EAAE1G,OAASA,KAC9C,OAAOkB,EAASA,EAAOV,GAAYR,EAEtC,MAAO,O,w1BCPV,IAAM2J,GAAiBC,YAAH,MAWdrE,GAAU3C,IAAOO,IAAV,MAKP0G,GAAsBjH,IAAOO,IAAV,MAOF,qBAAGL,MAAkBgB,eAaxB,qBAAGhB,MAAkBiC,YAAYC,MAAMC,MACxC0E,IAIbG,G,kLACkB,IAAD,EAC+D7F,KAAKC,MAA7E6F,EADS,EACTA,aAAcC,EADL,EACKA,kBAAmBC,EADxB,EACwBA,gBAAiBC,EADzC,EACyCA,kBAC1DH,IACAC,IACAC,IACAC,M,+BAGO,IAAD,EACkCjG,KAAKC,MAArCiG,EADF,EACEA,SAAU3J,EADZ,EACYA,SAAUkJ,EADtB,EACsBA,QAE5B,OACG,eAAC,IAAD,CAAe5G,MAAOgF,GAAtB,UACG,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,UAAUqC,IACV,cAAC,EAAD,UACG,eAAC,EAAD,8CACiC,IAC9B,cAAC,IAAD,CAAMjE,GAAG,kBAAT,SAA4BuD,GAAUC,EAAS,iBAAkBlJ,UAGvE,cAACqJ,GAAD,W,GAzBetF,IAAMC,WA+CjCsF,GAAaxE,aAAe,CACzBoE,QAAS,MAGZ,IASerD,gBATS,SAAC,GAAD,MAA8C,CAAEqD,QAAhD,EAAG9H,IAAO8H,QAA+ClJ,SAAzD,EAAqBqB,IAAOrB,aAEzB,SAACvB,GAAD,MAAe,CACvC8K,aAAc,kBAAM9K,EAASF,EAAgB,aAC7CiL,kBAAmB,kBAAM/K,EAASF,EAAgB,kBAClDkL,gBAAiB,kBAAMhL,EAASF,EAAgB,gBAChDmL,kBAAmB,kBAAMjL,EAASF,EAAgB,qBAGtCsH,CAA6CyD,ICpH7C,OAA0B,gCCA1B,OAA0B,iCCA1B,OAA0B,iC,iiBCIzC,IAAMvE,GAAU3C,IAAOO,IAAV,MAIPiH,GAAQxH,IAAO+B,IAAV,MAGG,qBAAG0F,OAAuB,EAAI,KAIvC,kBACW,QADX,EAAGC,MAEG3G,YADL,MAIKA,YAJL,SASA4G,GAAoB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,WAAYF,EAAgC,EAAhCA,MAAOH,EAAyB,EAAzBA,SAAajG,EAAY,oDAC1CuG,oBAAS,GADiC,oBAC/DJ,EAD+D,KACvDK,EADuD,KAGtE,OACG,eAAC,GAAD,2BAAaxG,GAAb,cACIiG,EACD,cAAC,GAAD,CAAOE,OAAQA,EAAQC,MAAOA,EAAOpD,IAAKsD,EAAYG,OAAQ,kBAAMD,GAAU,WAWvFH,GAAkBjF,aAAe,CAC9BgF,MAAO,OAGKC,U,wQC5Cf,IAceK,GAdGhI,IAAOO,IAAV,MAIH,qBAAGL,MAAkB2C,YAAYC,IAAIC,UAC9B,mBAAsC,KAAtC,EAAGvC,MAAqB,IAAM,QAGrC,qBAAGN,MAAkB2C,YAAYG,IAAID,UAC9B,mBAAsC,IAAtC,EAAGvC,MAAqB,IAAM,Q,wPCTjD,IAoBeyH,GApBCjI,IAAOO,IAAV,MACA,YACP,OADqB,EAAX2H,MAEP,IAAK,QACF,OAAO,GACV,IAAK,QACF,OAAO,GACV,QACG,OAAO,OAGd,qBAAG/B,QAEFpF,YADM,MAEM,qBAAGb,MAAkB2C,YAAYG,IAAID,a,oPCZvD,IAAMoF,GAAgBnI,IAAOoI,GAAV,MAED,gBAAGF,EAAH,EAAGA,KAAMhI,EAAT,EAASA,MAAT,MACH,OAATgI,EAAgBhI,EAAM4F,WAAWE,KAAO9F,EAAM4F,WAAWC,WAEnD,qBAAG7F,MAAkB2C,YAAYC,IAAIqD,UAC9B,YAAsB,IAAnB+B,EAAkB,EAAlBA,KAAMhI,EAAY,EAAZA,MACnB,OAAQgI,GACL,IAAK,KACF,OAAOhI,EAAMO,SAASmF,EACzB,IAAK,KACL,IAAK,KACF,OAAO1F,EAAMO,SAASE,EACzB,QACG,OAAOT,EAAMO,SAASkF,OAIzB,qBAAGzF,MAAkB2C,YAAYG,IAAImD,UAC9B,YAAsB,IAAnB+B,EAAkB,EAAlBA,KAAMhI,EAAY,EAAZA,MACnB,OAAQgI,GACL,IAAK,KACF,OAAOhI,EAAMO,SAASmF,EACzB,IAAK,KACL,IAAK,KACF,OAAO1F,EAAMO,SAASE,EACzB,QACG,MAAO,WAIV,gBAAGuH,EAAH,EAAGA,KAAMhI,EAAT,EAASA,MAAT,MAA8B,OAATgI,GAAiBhI,EAAMmF,iBAIlDgD,GAAU,SAAC,GAAD,IAAGd,EAAH,EAAGA,SAAUW,EAAb,EAAaA,KAAS5G,EAAtB,2CACb,cAAC6G,GAAD,yBAAe9D,GAAI6D,EAAMA,KAAMA,GAAU5G,GAAzC,aACIiG,MASPc,GAAQ3F,aAAe,CACpB6E,SAAU,GACVW,KAAM,MAGMG,U,q8BCrDf,IAAMC,GAActB,YAAH,MAWXuB,GAAcvB,YAAH,MAqCFwB,GA5BMxI,IAAOO,IAAV,MAaE,qBAAGL,MAAkBiC,YAAYC,MAAMC,MACxCiG,IASC,qBAAGpI,MAAkBiC,YAAYC,MAAM/B,OACxCkI,I,8FC5CnB,IAIeE,GAJHzI,IAAO+B,IAAV,M,uzCCET,IAAM2G,GAAgB1I,IAAOiC,OAAV,MAMP,qBAAG/B,MAAkBe,eAMhB,qBAAGf,MAAkBoF,SAASC,UAa3B,qBAAGrF,MAAkB+E,UAYnC0D,GAAa3I,IAAO4I,KAAV,MAEJ,qBAAG1I,MAAkB2C,YAAYC,IAAIqD,UAC9B,qBAAGjG,MAAkBO,SAASE,KAErC,qBAAGT,MAAkB2C,YAAYG,IAAImD,UAGrC,qBAAGjG,MAAkBe,eAK3B4H,GAAc7I,IAAO4I,KAAV,MASF,qBAAG1I,MAAkBe,eAK9B6H,GAAS,SAAC,GAAD,IAAGvB,EAAH,EAAGA,SAAgBwB,EAAnB,EAAaC,KAAwB1H,EAArC,2CACZ,eAACoH,GAAD,2BAAmBpH,GAAnB,cACIyH,GACE,cAACF,GAAD,UACG,cAACE,EAAD,MAGN,cAACJ,GAAD,UAAapB,SASnBuB,GAAOpG,aAAe,CACnBsG,KAAM,MAGMF,U,ueCtFf,IAAMG,GAAUjC,YAAH,MAoBEkC,GAXMlJ,IAAOO,IAAV,MACN,qBAAG4I,OAAqB,UACvB,qBAAGC,QAAuB,UAChB,qBAAGlJ,MAAkBkF,WACrB,qBAAGlF,MAAkBoF,SAASE,UAIrCyD,I,wgBCfhB,IAAMI,GAAerJ,YAAOkJ,GAAPlJ,CAAH,MAQZsJ,GAAetJ,IAAOO,IAAV,MAOZgJ,GAAcvJ,YAAOkJ,GAAPlJ,CAAH,MAKK,qBAAGwJ,SAanBC,GAVY,WAGf,IAFA,IAAMjD,EAAS,GAENpC,EAAI,EAAGA,EAAI,GAAIA,IACrBoC,EAAOI,KAAS,KAAJxC,EAAY,KAG3B,OAAOoC,EAGKkD,GAaAC,GAXgB,kBAC5B,gCACG,cAACN,GAAD,IACA,cAACC,GAAD,UACIG,GAAOvF,KAAI,SAACsF,EAAOpF,GAAR,OACT,cAACmF,GAAD,CAAiCC,MAAOA,GAAxC,iBAA4BpF,a,q8BCrCxC,IAAMwF,GAAO5C,YAAH,MASJrE,GAAU3C,IAAO6J,QAAV,KACGD,IAGVN,GAAetJ,IAAOO,IAAV,MAOZuJ,GAAY9J,IAAO4I,KAAV,MAIH,qBAAG1I,MAAkBe,eACjB,qBAAGf,MAAkBO,SAASoF,MAOxCgD,GAAc7I,IAAOO,IAAV,KAMJuJ,IAMPC,GAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,MAAU3I,EAA3B,gDACrB,eAAC,GAAD,2BAAaA,GAAb,cACG,cAAC,GAAD,CAAS4G,KAAK,KAAd,SAAoB+B,IACpB,cAAC,GAAD,UACID,GACEA,EAAa9F,KAAI,gBAAGuC,EAAH,EAAGA,IAAc7C,EAAjB,EAAQsG,MAAStG,KAAQxG,EAAzB,EAAyBA,KAAzB,OACd,eAAC,GAAD,WACG,cAAC,GAAD,CAAMkH,IAAG,UAAKzI,GAAL,OAAe+H,GAAQuG,IAAK/M,IACrC,cAAC0M,GAAD,UAAY1M,MAFGqJ,aAsBjCsD,GAAgBrH,aAAe,CAC5BsH,aAAc,MAGFD,U,2ICjFf,IAMeK,GANKpK,IAAOO,IAAV,MACA,qBAAGL,MAAkBC,aAClB,qBAAGD,MAAkBgD,OAAOC,WAC/B,qBAAGjD,MAAkBE,OAAOC,Q,ohBCH7C,IAmBegK,GAnBFrK,IAAOO,IAAV,MACO,qBAAGL,MAAkBoF,SAASG,QACnC,qBAAG6E,OAAuB,IAAM,OAE/B,qBAAGA,OAAuB,GAAK,MAGvC,qBAAGA,OAEGvJ,YADC,MAKDA,YALC,S,8sBCFZ,IAAM6I,GAAO5C,YAAH,MAUJrE,GAAU3C,IAAOO,IAAV,MAEI,qBAAGL,MAAkBkF,WAIhCmF,GAAMvK,IAAO+B,IAAV,MAIJ,qBAAGyI,MAEFzJ,YADI,KAEY6I,OAIhBa,GAAqBzK,YAAOkJ,GAAPlJ,CAAH,MAMV,qBAAGwK,KAAmB,QAAU,UAGxChD,G,4MACHtK,MAAQ,CACLuK,QAAQ,G,kEAGU,IAAD,EAC0BpG,KAAKC,MAAxCoJ,EADS,EACTA,eAAgBC,EADP,EACOA,UAAWrG,EADlB,EACkBA,IAEnC,GAAIqG,EAAW,CACZ,IAAMxB,EAAQwB,EAAU,IAAM,IAG9BD,EAAepG,EAAK6E,EAFLwB,EAAU,IAAMxB,M,+BAM3B,IAAD,SACwD9H,KAAKC,MAA3DgD,EADF,EACEA,IAAKsG,EADP,EACOA,OAAQD,EADf,EACeA,UAAW3N,EAD1B,EAC0BA,WAAYmN,EADtC,EACsCA,IAAQ7I,EAD9C,gEAEEmG,EAAWpG,KAAKnE,MAAhBuK,OACFoD,EACHvG,GAAOqG,GAAa3N,EjBvCD,SAACA,EAAY4G,EAAMsE,GAC5C,GAAIlL,EAAY,CACb,IAAMmM,EAAQjB,EAAK,IAAM,IACnBkB,EAASlB,EAAK,IAAMiB,EACpBwB,EAAY3N,EAAW2J,MAAK,SAAC7C,GAAD,OAAOA,EAAE1G,OAAF,UAAcwG,EAAd,YAAsBuF,EAAtB,YAA+BC,MACxE,OAAIuB,EAAkBA,EAAUtN,IACzB,KAEV,OAAO,KiB+BgCyN,CAAa9N,EAAYsH,EAAKqG,GAAa,KAC/E,OACG,eAAC,GAAD,yBAAStG,GAAIuG,EAAS,IAAM,OAAWtJ,GAAvC,cACIgD,IAAQqG,GACN,cAACJ,GAAD,CACGjG,IAAKA,EACL6F,IAAKA,EACLpC,OAAQ,kBAAM,EAAKgD,SAAS,CAAEtD,QAAQ,KACtC+C,KAAM/C,IAGXoD,GACE,cAACN,GAAD,CACGjG,IAAKuG,EACLV,IAAKA,EACLpC,OAAQ,kBAAM,EAAKgD,SAAS,CAAEtD,QAAQ,KACtC+C,KAAM/C,IAGZ,cAACgD,GAAD,CAAoBD,MAAO/C,Y,GAvCnB9F,IAAMC,WA2D1B4F,GAAM9E,aAAe,CAClB4B,IAAK,KACL6F,IAAK,GACLS,QAAQ,EACRD,UAAW,KACX3N,WAAY,MAGf,IAMeyG,gBANS,SAAC,GAAD,MAA8B,CAAEzG,WAAhC,EAAGgC,IAAOhC,eAEP,SAACX,GAAD,MAAe,CACvCqO,eAAgB,SAAC9G,EAAMuF,EAAOC,GAAd,OAAyB/M,EnC3Dd,SAACuH,EAAMuF,EAAOC,GAAd,OAAyB,SAAC/M,GAGrD,OAFAA,EAAS,CAAEC,KA7CyB,4BA+C7BC,IAAM,GAAD,OAAIV,EAAJ,sBAAiC,CAC1CW,OAAQ,CACLC,MAAOX,EACPwI,IAAKV,EACLoH,EAAG7B,EACH8B,EAAG7B,KAGL7N,MAAK,YAAe,IAAZmB,EAAW,EAAXA,KACNL,EAAS,CACNC,KAAMJ,EACNS,QAAS,CACNS,KAAK,GAAD,OAAKwG,EAAL,YAAauF,EAAb,YAAsBC,GAC1B/L,IAAKX,QAIbG,OAAM,SAACC,GAAD,OAAST,EAAS,CAAEC,KA9DM,0BA8DyBK,QAASG,QmCuCpBoO,CAAqBtH,EAAMuF,EAAOC,QAGxE3F,CAA6C+D,I,sjHC7G5D,IAAM2D,GAAanE,YAAH,MASVoE,GAAiBpE,YAAH,MAYdqE,GAAWrE,YAAH,MASRsE,GAAWtE,YAAH,MASRuE,GAAavE,YAAH,MASVwE,GAAWxE,YAAH,MAWRrE,GAAU3C,IAAO6J,QAAV,MAOP4B,GAAczL,IAAOO,IAAV,MAIXmL,GAAa1L,YAAOM,EAAPN,CAAH,MACJ,qBAAGE,MAAkB2C,YAAYC,IAAIqD,UAGrC,qBAAGjG,MAAkB2C,YAAYG,IAAImD,UAE9B,qBAAGjG,MAAkBO,SAASC,IAIjC8K,IAAkB,qBAAGtL,MAAkBgG,OAAO/C,WACxC,qBAAGqG,OAAqB,KAGxCmC,GAAS3L,YAAOwH,GAAPxH,CAAH,MAIW,qBAAGE,MAAkBgB,eAC3B,qBAAGhB,MAAkBE,OAAOqF,OAM7B0F,IACM,qBAAG3B,OAAqB,KAIxCoC,GAAa5L,YAAOoK,GAAPpK,CAAH,KASAoL,IAAuB,qBAAGlL,MAAkBgG,OAAO/C,WAC7C,qBAAGqG,OAAqB,KAGxCqC,GAAO7L,IAAOO,IAAV,MAQO,qBAAGL,MAAkBgB,eAGjC,qBAAGoJ,OAEGvJ,YADC,KAGesK,IAGhBtK,YANC,KAQesK,OAIL,qBAAG7B,OAAqB,KAGxCsC,GAAa9L,YAAOqK,GAAPrK,CAAH,KACAsL,IAAiB,qBAAG9B,OAAqB,KAInDuC,GAAS/L,IAAOO,IAAV,MASK,qBAAGL,MAAkBgB,cACtBqK,IACC,qBAAGrL,MAAkBE,OAAOqF,QACvB,qBAAG+D,OAAqB,KAuB/BwC,GApBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQ1E,EAAX,EAAWA,SAAajG,EAAxB,6CACX,eAAC,GAAD,2BAAaA,GAAb,cACG,cAACqK,GAAD,CAAQrH,IAAK2H,EAAQtB,UAAW,CAAC,KAAMR,IAAI,oBAAoBX,MAAM,QACrE,cAACqC,GAAD,CAAMrC,MAAM,QACZ,cAACsC,GAAD,CAAYtC,MAAM,QAClB,cAACiC,GAAD,UACG,cAACC,GAAD,CAAYlC,MAAM,IAAlB,SAAuBjC,MAE1B,cAACuE,GAAD,CAAYxB,QAAM,EAACd,MAAM,QACzB,cAACqC,GAAD,CAAMvB,QAAM,EAACd,MAAM,QACnB,cAACuC,GAAD,CAAQvC,MAAM,QACd,cAACoC,GAAD,CAAYpC,MAAM,a,6TC9KxB,IAAM0C,GAAWlM,YAAOkJ,GAAPlJ,CAAH,MAIF,qBAAGmJ,SACO,qBAAGK,OAAmC,GAAtC,EAAU2C,eAG1BC,GAAoBpM,IAAOO,IAAV,MAMjB8L,GAAoB,SAAC,GAAD,IAAUC,EAAV,EAAG9C,MAAuBlI,EAA1B,iCACvB,eAAC8K,GAAD,2BAAuB9K,GAAvB,cACG,cAAC4K,GAAD,CAAU/C,MAAM,OAAOgD,YAAaG,IACpC,cAACJ,GAAD,CAAU/C,MAAM,OAAOK,MAAO,IAAM2C,YAAaG,SAQvDD,GAAkB3J,aAAe,CAC9B8G,MAAO,GAGK6C,U,6zCC3Bf,IAAME,GAAoBvM,YAAOoK,GAAPpK,CAAH,MAMjBgI,GAAYhI,IAAOO,IAAV,MAQTiM,GAAQxM,YAAOkJ,GAAPlJ,CAAH,MAKW,qBAAGmM,eAGnBM,GAAkBzM,YAAOkJ,GAAPlJ,CAAH,MACT,qBAAGmJ,SAIO,qBAAGgD,eAGnBO,GAAa1M,IAAOO,IAAV,MAIgB,qBAAGL,MAAkBgD,OAAOC,WAC3B,qBAAGjD,MAAkBgD,OAAOC,WAC5C,qBAAGjD,MAAkBiF,eAKhCqC,GAAQxH,YAAOkJ,GAAPlJ,CAAH,MACkB,qBAAGE,MAAkBgD,OAAOC,WAC3B,qBAAGjD,MAAkBgD,OAAOC,WAGpC,qBAAGgJ,eAGnBrK,GAAO9B,YAAOkJ,GAAPlJ,CAAH,MAKY,qBAAGwJ,OAAmC,GAAtC,EAAU2C,eAa1B1C,GAVY,WAGf,IAFA,IAAMjD,EAAS,GAENpC,EAAI,EAAGA,EAAI,EAAGA,IACpBoC,EAAOI,KAAS,KAAJxC,GAGf,OAAOoC,EAGKkD,GAETiD,GAAc,SAAC,GAAD,IAAUL,EAAV,EAAG9C,MAAH,OACjB,eAAC+C,GAAD,WACG,cAAC,GAAD,CAAOJ,YAAaG,IACpB,eAAC,GAAD,WACG,cAACE,GAAD,CAAOL,YAAaG,IACpB,cAACG,GAAD,CAAiBtD,MAAM,OAAOgD,YAAaG,IAC3C,cAACG,GAAD,CAAiBtD,MAAM,MAAMgD,YAAaG,IAC1C,cAACG,GAAD,CAAiBtD,MAAM,MAAMgD,YAAaG,IAC1C,cAACG,GAAD,CAAiBtD,MAAM,MAAMgD,YAAaG,IAC1C,cAAC,GAAD,CAAmB9C,MAAO8C,OAE7B,cAACI,GAAD,UACIjD,GAAOvF,KAAI,SAACsF,EAAOpF,GAAR,OACT,cAAC,GAAD,CAAwBoF,MAAOA,EAAO2C,YAAaG,GAAnD,eAAmBlI,aAU/BuI,GAAYjK,aAAe,CACxB8G,MAAO,GAGKmD,U,4JClGf,IAAMhK,GAAU3C,IAAOO,IAAV,MAGE,qBAAGqM,SAA2B,GAAK,MAG5CC,GAAe,SAAC,GAAD,IAAGD,EAAH,EAAGA,SAAatL,EAAhB,oCAClB,eAAC,GAAD,yBAASsL,SAAUA,GAActL,GAAjC,cACG,cAAC,GAAD,IACA,cAAC,GAAD,CAAakI,MAAO,KACpB,cAAC,GAAD,CAAaA,MAAO,UAQ1BqD,GAAanK,aAAe,CACzBkK,UAAU,GAGEC,U,0ZCrBf,IAAMlK,GAAU3C,IAAOO,IAAV,MAOPyH,GAAYhI,IAAOO,IAAV,MAQTuM,GAAqB,SAAC,GAAD,IAAGvF,EAAH,EAAGA,SAAU0C,EAAb,EAAaA,MAAb,OACxB,eAAC,GAAD,WACG,cAAC,GAAD,CAAS/B,KAAK,UACb+B,GAAS,cAAC,GAAD,CAAS/B,KAAK,KAAd,SAAoB+B,IAC9B,cAAC,GAAD,UAAY1C,IACZ,cAAC,GAAD,CAASW,KAAK,cASpB4E,GAAmBpK,aAAe,CAC/BuH,MAAO,MAGK6C,U,8QCrCf,IAYeC,GAZD/M,IAAO4I,KAAV,MAIK,qBAAG1I,MAAkBO,SAASoF,MAC7B,qBAAG3F,MAAkBkF,WAC1B,qBAAGlF,MAAkBmF,iB,oaCHjC,IAAM1C,GAAU3C,IAAOO,IAAV,MAOR,qBAAGyM,MAEFjM,YADI,SAOJkM,GAAcjN,YAAO+M,GAAP/M,CAAH,MAIXkN,GAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYvP,EAAf,EAAeA,SAAUoP,EAAzB,EAAyBA,KAAS1L,EAAlC,wDAChB,cAAC,GAAD,yBAAS0L,KAAMA,GAAU1L,GAAzB,aACI6L,EAAWjJ,KAAI,SAACjG,GAAD,OACb,eAACgP,GAAD,eAAkChP,EAASL,KAAzBK,EAASwI,YAkBpCyG,GAAWxK,aAAe,CACvBsK,MAAM,GAGME,U,yWC3Cf,IAAMvK,GAAU3C,IAAOO,IAAV,MAGI,qBAAGL,MAAkBiF,eACN,qBAAGjF,MAAkBgD,OAAOC,WAC3B,qBAAGjD,MAAkBgD,OAAOC,WAKvDb,GAAatC,YAAO8B,GAAP9B,CAAH,MAKVoN,GAAuB,SAAC,GAAD,IAAGpD,EAAH,EAAGA,aAAiB1I,EAApB,wCAC1B,cAAC,GAAD,2BAAaA,GAAb,aACI0I,GACEA,EAAa9F,KAAI,gBAAGuC,EAAH,EAAGA,IAAc7C,EAAjB,EAAQsG,MAAStG,KAAQxG,EAAzB,EAAyBA,KAAzB,OACd,cAAC,GAAD,CAAsBkH,IAAG,UAAKzI,GAAL,OAAe+H,GAAQuG,IAAK/M,EAAM6M,MAAO7M,EAAMoD,OAAK,GAA5DiG,UAiB7B2G,GAAqB1K,aAAe,CACjCsH,aAAc,MAGFoD,U,4uCC/Bf,IAAMtE,GAAS9I,IAAOO,IAAV,MAMK,qBAAGL,MAAkBoF,SAASC,UAC/B,qBAAGrF,MAAkBO,SAASE,KAClC,qBAAGT,MAAkBe,eAQ3BsL,GAAoBvM,YAAOoK,GAAPpK,CAAH,MACX,qBAAGE,MAAkBe,cAOrB6H,IAKNX,GAAgBnI,YAAOqI,GAAPrI,CAAH,MAOb0L,GAAa1L,YAAOM,EAAPN,CAAH,MAKVqN,GAAwBrN,YAAOoN,GAAPpN,CAAH,MAIrBsN,GAActN,YAAOwH,GAAPxH,CAAH,MACY,qBAAGE,MAAkBgD,OAAOC,WAC3B,qBAAGjD,MAAkBgD,OAAOC,WAMpDoK,GAAO,SAAC,GAAD,I1BvDkBC,E0BuDf1G,EAAH,EAAGA,QAAS2G,EAAZ,EAAYA,KAAMxD,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,MAAOwD,EAAhC,EAAgCA,YAAaP,EAA7C,EAA6CA,WAAYnD,EAAzD,EAAyDA,aAAcpM,EAAvE,EAAuEA,SAAvE,OACV,eAAC,GAAD,CAAmByG,GAAIhB,IAAMC,GAAImK,EAAjC,UACG,cAACH,GAAD,CAAahJ,IAAG,UAAKzI,GAAL,OAAeqO,GAASS,UAAW,CAAC,IAAK,KAAMR,IAAKF,IACpE,cAAC,GAAD,CAAe/B,KAAK,KAApB,SAA0B+B,IAC1B,cAAC,GAAD,CAAYzJ,OAAK,EAACM,UAAW,EAA7B,SACI6M,M1B5DqBH,E0B4DUE,E1B3D/BF,EAAKI,QAAQ,gBAAiB,IAAIZ,W0B6DrCG,GAAcA,EAAWnJ,OACvB,cAAC,GAAD,CAAYmJ,WAAYA,EAAYvP,SAAUA,EAAUoP,MAAI,IAC3D,KACJ,cAACK,GAAD,CAAuBrD,aAAcA,IACrC,cAAC,GAAD,UAASnD,GAAUC,EAAS,OAAQlJ,SAoC1C2P,GAAK7K,aAAe,CACjBgL,YAAa,KACbP,WAAY,GACZrG,QAAS,MAGZ,IAEerD,gBAFS,SAAC,GAAD,MAA8C,CAAEqD,QAAhD,EAAG9H,IAAO8H,QAA+ClJ,SAAzD,EAAqBqB,IAAOrB,YAErC6F,CAAyB8J,I,01DCnHxC,IAAM5K,GAAU3C,IAAO6J,QAAV,MAID,qBAAG3J,MAAkB2C,YAAYC,IAAIC,UAGrC,qBAAG7C,MAAkB2C,YAAYG,IAAID,UAK3C8K,GAAe7N,YAAO8N,KAAP9N,CAAH,MAKZ+N,GAAe/N,IAAOO,IAAV,MACN,qBAAGL,MAAkB2C,YAAYC,IAAIC,UAGrC,qBAAG7C,MAAkB2C,YAAYG,IAAID,UAIhC,qBAAG7C,MAAkB+E,UACrB,qBAAG/E,MAAkBoF,SAASI,UAE1C,qBAAGlD,KAEGzB,YADD,MAKCA,YALD,SAaJiN,GAAoBhO,YAAOyC,GAAPzC,CAAH,MAUlB,qBAAGwC,KAEGzB,YADD,MAEa,qBAAGb,MAAkB2C,YAAYC,IAAIC,UAGrC,qBAAG7C,MAAkB2C,YAAYG,IAAID,UAIjDhC,YATD,MAUa,qBAAGb,MAAkB2C,YAAYC,IAAIC,UAGrC,qBAAG7C,MAAkB2C,YAAYG,IAAID,aAWtDkL,GAAQjO,IAAOO,IAAV,MA2GI2N,GAvGoB,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,aAAchB,EAAyC,EAAzCA,WAAYnD,EAA6B,EAA7BA,aAAcpM,EAAe,EAAfA,SACrEwQ,EAAW,CACdC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,UAAW,cAACV,GAAD,IACXW,UAAW,cAACX,GAAD,CAAmBxL,MAAI,IAClCoM,WAAY,CACT,CACGC,WAAY,IACZT,SAAU,CACPI,aAAc,EACdC,eAAgB,IAGtB,CACGI,WAAY,IACZT,SAAU,CACPI,aAAc,EACdC,eAAgB,MAM5B,OACG,eAAC,GAAD,WACG,cAACV,GAAD,CAAcvL,MAAI,IAClB,cAACqL,GAAD,2BAAkBO,GAAlB,aACID,EAAajK,KAAI,SAAC4K,GAAiB,IAE9BrI,EAICqI,EAJDrI,IACa7C,EAGZkL,EAHDnE,UAAa/G,KACDmL,EAEXD,EAFD3B,WACc6B,EACbF,EADD9E,aAGH,OACG,cAACiE,GAAD,UACG,cAAC,GAAD,CACGR,KAAI,wBAAmBhH,GACvBwD,MAAO6E,EAAY,GAAD,OAAIlR,EAAJ,WAClBsM,MAAOtG,EACP8J,YAAaoB,EAAY,GAAD,OAAIlR,EAAJ,iBACxBuP,WACG4B,EAAc/K,OAASsC,GAAayI,EAAe5B,GAAc,GAEpEnD,aACGgF,EAAgBhL,OAASsC,GAAa0I,EAAiBhF,GAAgB,MAVpEvD,SAiBrB,cAACsH,GAAD,QC1HHkB,GAAmB,SAACC,EAAGC,GAC1B,OAAID,EAAEE,SAAWD,EAAEC,UAAkB,EACjCF,EAAEE,SAAWD,EAAEC,SAAiB,EAC7B,GAGJC,G,mLAGAC,EADuBjO,KAAKC,MAApBgO,gB,+BAID,IAAD,EACuEjO,KAAKC,MAA1EwF,EADF,EACEA,QAASyI,EADX,EACWA,MAAOpB,EADlB,EACkBA,aAAchB,EADhC,EACgCA,WAAYnD,EAD5C,EAC4CA,aAAcpM,EAD1D,EAC0DA,SAEhE,OACG,qCACG,cAAC,GAAD,CAAmBgK,WAAY4H,GAA/B,SACG,eAAC,GAAD,WACG,cAAC,GAAD,CAAStH,KAAK,QAAQ/B,QAAM,IAC5B,cAAC,GAAD,CAAS+B,KAAK,KAAd,+BACA,cAAC,GAAD,CAASA,KAAK,UACd,cAAC,GAAD,CAASA,KAAK,KAAd,+CACA,cAAC,GAAD,CAASA,KAAK,WACbqH,EACE,cAAC,GAAD,CAAOtD,OAAM,UAAKpQ,GAAL,OAAe0T,EAAMtD,OAAOrI,MAAzC,SAAkD2L,EAAM3R,KAExD,cAAC,GAAD,IAEH,cAAC,GAAD,CAASsK,KAAK,UACb8B,GAAgBuF,GAASzI,EACvB,cAAC,GAAD,CACGmD,MAAOpD,GAAUC,EAAS,2BAA4BlJ,GACtDoM,aAAc1D,GAAaiJ,EAAMvF,aAAcA,KAGlD,cAAC,GAAD,SAKT,oCACG,eAAC,GAAD,WACG,cAAC,GAAD,CAAS9B,KAAK,UACd,cAAC,GAAD,CAASA,KAAK,KAAd,SAAoBrB,GAAUC,EAAS,eAAgBlJ,KACvD,cAAC,GAAD,CAASsK,KAAK,aAGhBiG,GAAgBhB,GAAcnD,EAC5B,cAAC,GAAD,CACGmE,aAAcA,EAAatQ,KAAKoR,IAAkBQ,MAAM,EAAG,GAC3DtC,WAAYA,EACZnD,aAAcA,EACdpM,SAAUA,IAGb,cAAC,GAAD,UACG,cAAC,GAAD,CAAcgP,UAAQ,MAI5B,eAAC,GAAD,WACG,cAAC,GAAD,CAAS1E,KAAK,UACd,cAAC,GAAD,CAAQ7D,GAAIhB,IAAMC,GAAG,gBAArB,SACIuD,GAAUC,EAAS,YAAalJ,WAK1C,cAAC,GAAD,CAAmBgK,WAAY8H,GAAOhI,MAAM,SAA5C,SACG,cAAC,GAAD,CAAoBuC,MAAOpD,GAAUC,EAAS,UAAWlJ,GAAzD,SACG,eAAC,GAAD,WACG,cAAC,GAAD,CAAK0G,IAAKqL,GAAUxF,IAAI,SACxB,cAAC,GAAD,CAASjC,KAAK,WACd,cAAC,GAAD,CAAQ7D,GAAG,IAAIK,KAAK,gCAApB,iD,GApEF/C,IAAMC,WA8IzByN,GAAK3M,aAAe,CACjB6M,MAAO,KACPpB,aAAc,KACdhB,WAAY,KACZnD,aAAc,KACdlD,QAAS,MAGZ,IAgBerD,gBAhBS,SAAC,GAAD,QACrBzE,IAAOuQ,EADc,EACdA,MAAOpB,EADO,EACPA,aAAchB,EADP,EACOA,WAAYnD,EADnB,EACmBA,aAAclD,EADjC,EACiCA,QADjC,MAGjB,CACJyI,QACApB,eACAhB,aACAnD,eACApM,SARqB,EAErBqB,IAAOrB,SAOPkJ,cAGwB,SAACzK,GAAD,MAAe,CACvCiT,WAAY,kBAAMjT,G9C9JUuT,E8C8Jc,Q9C9JA,SAACvT,GAG3C,OAFAA,EAAS,CAAEC,KA7ByB,4BA+B7BC,IAAM,GAAD,OAAIV,EAAJ,+BAAkC+T,GAAa,CACxDpT,OAAQ,CACLC,MAAOX,KAGTP,MAAK,YAAe,IAAZmB,EAAW,EAAXA,KACNL,EAAS,CACNC,KAAMN,EACNW,QAAS,CACNL,KAAMsT,EACNlT,aAIRG,OAAM,SAACC,GAAD,OAAST,EAAS,CAAEC,KAAML,EAAyBU,QAASG,UAjB3C,IAAC8S,M8CiKhBnM,CAA6C4L,ICpM7C,OAA0B,yC,sYCIzC,IAAM1M,GAAU3C,IAAOO,IAAV,MAMPsP,GAAc7P,YAAOkJ,GAAPlJ,CAAH,MAEL,qBAAGmJ,SAqBA2G,GATK,kBACjB,eAAC,GAAD,WACG,cAACD,GAAD,CAAa1G,MAAM,SACnB,cAAC0G,GAAD,CAAa1G,MAAM,QACnB,cAAC0G,GAAD,CAAa1G,MAAM,QACnB,cAAC0G,GAAD,CAAa1G,MAAM,YC7BV,OAA0B,gCCcnC4G,GAAU,SAAC,GAAD,IAAGjJ,EAAH,EAAGA,QAASlJ,EAAZ,EAAYA,SAAZ,OACb,cAAC,GAAD,CAAmBgK,WAAY8H,GAAOhI,MAAM,SAA5C,SACG,cAAC,GAAD,UACG,qCACG,cAAC,GAAD,CAAKpD,IAAK0L,GAAU7F,IAAI,QACxB,cAAC,GAAD,CAASjC,KAAK,WACd,cAAC,EAAD,UAAOrB,GAAUC,EAAS,WAAYlJ,KACtC,cAAC,GAAD,CAASsK,KAAK,WACd,cAAC,GAAD,CAAQ7D,GAAIhB,IAAMC,GAAG,IAArB,SACIuD,GAAUC,EAAS,mBAAoBlJ,aAkBvDmS,GAAQrN,aAAe,CACpBoE,QAAS,MAGZ,IAEerD,gBAFS,SAAC,GAAD,MAA8C,CAAEqD,QAAhD,EAAG9H,IAAO8H,QAA+ClJ,SAAzD,EAAqBqB,IAAOrB,YAErC6F,CAAyBsM,IChClCE,G,mLAGAC,EADuB7O,KAAKC,MAApB4O,gB,+BAID,IAAD,EAOF7O,KAAKC,MALN6O,EAFG,EAEHA,MACAvS,EAHG,EAGHA,SAEmBwS,EALhB,EAIHC,MACG7T,OAAU8T,KAIhB,GAAIH,EAAO,CACR,IAAMG,EAAOH,EAAMxJ,MAAK,SAAC7C,GAAD,OAAOA,EAAEyM,YAAcH,KAE/C,OAAKE,EAKF,cAAC,GAAD,CAAmB1I,WAAY4I,GAA/B,SACG,eAAC,GAAD,WACG,cAAC,GAAD,CAAStI,KAAK,QAAQ/B,QAAM,IAC5B,cAAC,GAAD,CAAS+B,KAAK,KAAd,SAAoBoI,EAAK,GAAD,OAAI1S,EAAJ,aACxB,cAAC,GAAD,CAASsK,KAAK,WACd,cAAC,EAAD,UAAOuI,KAAgBH,EAAK,GAAD,OAAI1S,EAAJ,oBAC3B,cAAC,GAAD,CAASsK,KAAK,eAVb,cAAC,GAAD,IAgBb,OACG,eAAC,GAAD,WACG,cAAC,GAAD,CAASA,KAAK,UACd,cAAC,GAAD,IACA,cAAC,GAAD,CAASA,KAAK,iB,GAvCHvG,IAAMC,WAgE7BqO,GAASvN,aAAe,CACrByN,MAAO,MAGV,IAMe1M,gBANS,SAAC,GAAD,MAA4C,CAAE0M,MAA9C,EAAGnR,IAAOmR,MAA2CvS,SAArD,EAAmBqB,IAAOrB,aAEvB,SAACvB,GAAD,MAAe,CACvC6T,WAAY,kBAAM7T,EAASF,EAAgB,cAG/BsH,CAA6C5B,YAAWoO,K,g4BCjFvE,IAAMtN,GAAU3C,IAAOO,IAAV,MAQPmQ,GAAgB1Q,IAAOO,IAAV,MAKboQ,GAAqB3Q,YAAOkJ,GAAPlJ,CAAH,MAEQ,qBAAGE,MAAkBgD,OAAOC,WAC3B,qBAAGjD,MAAkBgD,OAAOC,WAC5C,qBAAGjD,MAAkBE,OAAOC,QAGvCuQ,GAAqB5Q,IAAOO,IAAV,MAIP,qBAAGL,MAAkBE,OAAOC,QAC5B,qBAAGH,MAAkBC,aAOhC0Q,GAAgB7Q,YAAOkJ,GAAPlJ,CAAH,MAsBJ8Q,GAhBY,kBACxB,eAAC,GAAD,WACG,eAACJ,GAAD,WACG,cAACC,GAAD,IACA,cAACC,GAAD,OAEH,cAAC,GAAD,CAAmBpH,MAAO,KAC1B,cAAC,GAAD,IACA,cAAC,GAAD,CAAStB,KAAK,WACd,cAAC,GAAD,IACA,cAAC,GAAD,CAASA,KAAK,WACd,cAAC2I,GAAD,IACA,cAAC,GAAD,CAAS3I,KAAK,c,gFC1DL,OAA0B,kC,wpBCMzC,IAAMvF,GAAU3C,IAAO+Q,OAAV,MAMPzD,GAActN,YAAOwH,GAAPxH,CAAH,MAGA,qBAAGE,MAAkBE,OAAOC,QACb,qBAAGH,MAAkBgD,OAAOC,WAC3B,qBAAGjD,MAAkBgD,OAAOC,WAGvD6N,GAAiBhR,IAAOO,IAAV,MAGH,qBAAGL,MAAkBE,OAAOC,QAM5B,qBAAGH,MAAkBC,aAKhC8Q,GAAgB,SAAC,GAAD,IAAG/G,EAAH,EAAGA,MAAOD,EAAV,EAAUA,MAAV,OACnB,eAAC,GAAD,WACG,cAAC,GAAD,CAAa3F,IAAK4F,EAAOS,UAAW,CAAC,IAAK,KAAMR,IAAKF,IACrD,cAAC+G,GAAD,UACG,cAAC,GAAD,CAAS9I,KAAK,KAAd,SAAoB+B,UAU7BgH,GAAcvO,aAAe,CAC1BwH,MAAO,KACPD,MAAO,IAGKgH,U,6tBC9Cf,IAAMtO,GAAU3C,IAAO6J,QAAV,MAIO,qBAAG3J,MAAkBgD,OAAOC,WAE/B,qBAAGjD,MAAkBC,aACf,qBAAGD,MAAkBC,aAGtCmN,GAActN,YAAOwH,GAAPxH,CAAH,MAWXkR,GAAelR,IAAOO,IAAV,KAMN+M,IAmCG6D,GA9BS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACrB,cAAC,IAAD,UACG,cAAC,GAAD,UACIA,EAAQlN,KAAI,oBAAGmN,KAAQpH,EAAX,EAAWA,MAAOqH,EAAlB,EAAkBA,MAAS1N,EAA3B,EAA2BA,KAA3B,OACV,cAACsN,GAAD,UACG,cAAC,GAAD,CACG/G,IAAKF,EACLW,QAAM,EACNlG,KAAI,UAAK7I,GAAL,OAAe+H,GACnBU,IAAG,UAAKzI,GAAL,OAAe+H,GAClB+G,UAAW,CAAC,QANC2G,W,oWCtB/B,IAAMC,GAAY,kBAAM,cAAC,GAAD,CAAMjN,IAAKkN,GAAchR,OAAK,KAEhDmC,GAAU3C,IAAOO,IAAV,MAIPkR,GAAiBzR,IAAOO,IAAV,MAMdmR,GAAkB1R,IAAOO,IAAV,MAKfoR,GAAsB,SAAC,GAAD,IAAG7K,EAAH,EAAGA,QAASgI,EAAZ,EAAYA,YAAa3B,EAAzB,EAAyBA,WAAYnD,EAArC,EAAqCA,aAAcpM,EAAnD,EAAmDA,SAAnD,OACzB,eAAC,GAAD,WACG,cAAC,GAAD,CACGsM,MAAK,UAAKrO,GAAL,OAAeiT,EAAYnE,UAAU/G,MAC1CqG,MAAO6E,EAAY,GAAD,OAAIlR,EAAJ,aAErB,cAAC,GAAD,CAAYuP,WAAYA,EAAYvP,SAAUA,IAC9C,cAAC,EAAD,UAAO+P,KAAgBmB,EAAY,GAAD,OAAIlR,EAAJ,oBACjCoM,EAAahG,OACX,qCACG,cAAC,GAAD,CAASkE,KAAK,WACd,cAAC,GAAD,CACG+B,MAAOpD,GAAUC,EAAS,kBAAmBlJ,GAC7CoM,aAAcA,OAGnB,KACJ,cAAC,GAAD,CAAS9B,KAAK,WACd,cAACuJ,GAAD,UACI3C,EAAY8C,MAAM1N,KAAI,YAAkC,IAA/B7F,EAA8B,EAA9BA,MACvB,OADqD,EAAvBwT,MAASC,OAEpC,IAAK,MACF,OACG,cAACJ,GAAD,UACG,cAAC,GAAD,CACG1I,KAAM+I,KACN1N,GAAG,IACHK,KAAMrG,EACNsG,OAAO,SACPC,IAAI,sBALP,SAOIiC,GAAUC,EAAS,MAAOlJ,OAIvC,IAAK,OACF,OACG,cAAC8T,GAAD,UACG,cAAC,GAAD,CACG1I,KAAMgJ,KACN3N,GAAG,IACHK,KAAMrG,EACNsG,OAAO,SACPC,IAAI,sBALP,SAOIiC,GAAUC,EAAS,OAAQlJ,OAIxC,IAAK,WACF,OACG,cAAC8T,GAAD,UACG,cAAC,GAAD,CACG1I,KAAMiJ,KACN5N,GAAG,IACHK,KAAMrG,EACNsG,OAAO,SACPC,IAAI,sBALP,SAOIiC,GAAUC,EAAS,WAAYlJ,OAI5C,IAAK,SACF,OACG,cAAC8T,GAAD,UACG,cAAC,GAAD,CACG1I,KAAMnE,KACNR,GAAG,IACHK,KAAMrG,EACNsG,OAAO,SACPC,IAAI,sBALP,SAOIiC,GAAUC,EAAS,SAAUlJ,OAI1C,IAAK,QACF,OACG,cAAC8T,GAAD,UACG,cAAC,GAAD,CACG1I,KAAMuI,GACNlN,GAAG,IACHK,KAAMrG,EACNsG,OAAO,SACPC,IAAI,sBALP,SAOIiC,GAAUC,EAAS,QAASlJ,OAIzC,QACG,OAAO,WAIlBkR,EAAYsC,SAAWtC,EAAYsC,QAAQpN,QACzC,qCACG,cAAC,GAAD,CAASkE,KAAK,UACd,cAAC,GAAD,CAAiBkJ,QAAStC,EAAYsC,aAG5C,cAAC,GAAD,CAASlJ,KAAK,cA4DpByJ,GAAoBjP,aAAe,CAChCoE,QAAS,MAGZ,IAEerD,gBAFS,SAAC,GAAD,MAA2B,CAAEqD,QAA7B,EAAG9H,IAAO8H,WAEnBrD,CAAyBkO,IClMlCO,GAAc,SAAC,GASd,IAPSC,EAOV,EARH9B,MACG7T,OAAU2V,GAEbrL,EAKG,EALHA,QACAqH,EAIG,EAJHA,aACAhB,EAGG,EAHHA,WACAnD,EAEG,EAFHA,aACApM,EACG,EADHA,SAEA,GAAIkJ,GAAWqH,GAAgBhB,GAAcnD,EAAc,CACxD,IAAMoI,EAAUjE,EAAaxH,MAAK,SAAC7C,GAAD,OAAOA,EAAE2C,MAAQ0L,KAEnD,IAAKC,EACF,OAAO,cAAC,GAAD,IAGV,IAAMC,EAAoB/L,GAAa8L,EAAQjF,WAAYA,GACrDmF,EAAsBhM,GAAa8L,EAAQpI,aAAcA,GAE/D,OACG,cAAC,GAAD,CAAmBpC,WAAY4H,GAA/B,SACG,cAAC,GAAD,CAAWhP,OAAK,EAAhB,SACG,cAAC,GAAD,CACGsO,YAAasD,EACbjF,WAAYkF,EACZrI,aAAcsI,EACd1U,SAAUA,QAOzB,OACG,cAAC,GAAD,CAAmBgK,WAAY4H,GAA/B,SACG,cAAC,GAAD,UACG,cAAC,GAAD,SA4DZ0C,GAAYxP,aAAe,CACxBoE,QAAS,KACTqH,aAAc,KACdhB,WAAY,KACZnD,aAAc,MAGjB,IAKevG,gBALS,SAAC,GAAD,QACrBzE,IADqB,MAGjB,CAAE8H,QAHe,EACdA,QAEQqH,aAHM,EACLA,aAEahB,WAHR,EACSA,WAEWnD,aAHpB,EACqBA,aAEapM,SAHlC,EAErBqB,IAAOrB,YAGK6F,CAAyB5B,YAAWqQ,K,qsFCnHnD,IAAMtI,GAAO5C,YAAH,MAWJrE,GAAU3C,IAAOO,IAAV,MAIC,qBAAGgS,QAAyB,EAAI,KAGxC1J,GAAc7I,IAAOiC,OAAV,MAsBG,qBAAG/B,MAAkBiC,YAAYC,MAAM/B,QAWrDiC,GAAatC,YAAOuC,KAAPvC,CAAH,MACJ,qBAAGE,MAAkBe,eAEV,kBAAkC,QAAlC,EAAGlD,UAAuC,IAAM,MAGjEyU,GAASxS,IAAOyS,OAAV,MAIN3J,GAAS9I,IAAOO,IAAV,MAGA,qBAAGL,MAAkBe,eAChB,gBAAGf,EAAH,EAAGA,MAAH,SAAUwS,OAAuBxS,EAAMkF,QAAUlF,EAAMiF,eAMxD,qBAAGjF,MAAkBO,SAASC,KAKxCiS,GAAe3S,YAAOoK,GAAPpK,CAAH,KAQF4J,IASI,qBAAG1J,MAAkBiC,YAAYC,MAAM/B,QAKrDuS,GAAS5S,IAAOiC,OAAV,MACI,qBAAG/B,MAAkBO,SAASC,KAKlC,qBAAGR,MAAkBe,eAYb,qBAAGf,MAAkBiC,YAAYC,MAAM/B,QAGpC,qBAAGH,MAAkB2S,mBAQtCC,GAAQ9S,IAAO4I,KAAV,MAILmK,G,kDACH,WAAYzR,GAAQ,IAAD,uBAChB,cAAMA,IAEDkR,OAASQ,sBAHE,IAKRnV,EAAS,EAAKyD,MAAdzD,KALQ,OAOhB,EAAKX,MAAQ,CACV+V,QAAQ,EACR5U,MAAO,KACP6U,cAAerV,GAVF,E,gEAcE,IAAD,EACiBwD,KAAKC,MAA/B6R,EADS,EACTA,aAAcC,EADL,EACKA,QACtB,IACG,IAAMtV,EAASsV,EAAQzM,MAAK,SAAC7C,GAAD,OAAOA,EAAEzF,QAAU8U,KAC/C9R,KAAK0J,SAAS,CAAE1M,MAAOP,EAAOO,QAC/B,MAAOgV,GACNhS,KAAK0J,SAAS,CAAE1M,MAAOgV,EAAEC,a,4CAK5BjS,KAAK0J,SAAS,CACXkI,QAAQ,M,yCAIKI,GACXA,EAAEE,cAAcC,SAASH,EAAEI,gBAC7BpS,KAAK0J,SAAS,CACXkI,QAAQ,M,wCAKCI,EAAGK,GAAgB,IAAD,OACjCrS,KAAKmR,OAAOmB,QAAQtV,MAAQqV,EADK,MAEKrS,KAAKC,MAAnC8R,EAFyB,EAEzBA,QAASQ,EAFgB,EAEhBA,iBACX9V,EAASsV,EAAQzM,MAAK,SAAC7C,GAAD,OAAOA,EAAEzF,QAAUqV,KAC/CrS,KAAK0J,SACF,CACG1M,MAAOP,EAAOO,QAEjB,WAAO,IAAD,EAC8B,EAAKnB,MAA9BmB,EADL,EACKA,MAAO6U,EADZ,EACYA,cACfU,EAAiBvV,EAAO6U,MAG9BG,EAAEE,cAAcM,S,4CAGI,IAAD,OACXD,EAAqBvS,KAAKC,MAA1BsS,iBACAV,EAAkB7R,KAAKnE,MAAvBgW,cACR7R,KAAK0J,SACF,CACGmI,cAAiC,QAAlBA,EAA0B,OAAS,QAErD,WAAO,IAAD,EACgD,EAAKhW,MAAhDmB,EADL,EACKA,MAAsByV,EAD3B,EACYZ,cACfU,EAAiBvV,EAAOyV,Q,+BAKvB,IAAD,SACmDzS,KAAKC,MAAtD8R,EADF,EACEA,QAAStB,EADX,EACWA,MAAOjU,EADlB,EACkBA,KAAMsV,EADxB,EACwBA,aAAiB7R,EADzC,4DAEmCD,KAAKnE,MAAtCmB,EAFF,EAEEA,MAAO4U,EAFT,EAESA,OAAQC,EAFjB,EAEiBA,cACjBa,EAAgB1V,EAAQ+U,EAAQzM,MAAK,SAAC7C,GAAD,OAAOA,EAAEzF,QAAUA,KAAO2V,QAAU,GAC/E,OACG,eAAC,GAAD,yBACGC,SAAS,IACTC,OAAQ,SAACb,GAAD,OAAO,EAAKc,mBAAmBC,KAAK,EAAMf,IAClDgB,QAAS,SAAChB,GAAD,OAAO,EAAKiB,oBAAoBF,KAAK,EAAMf,IACpDd,QAASU,GACL3R,GALP,cAOG,cAACkR,GAAD,CAAQ+B,IAAKlT,KAAKmR,OAAQgC,aAAcrB,EAAxC,SACIC,GACEA,EAAQlP,KAAI,gBAAGuC,EAAH,EAAGA,IAAYgO,EAAf,EAAQpW,MAAiB2V,EAAzB,EAAyBA,QAAzB,OACT,wBAAkB3V,MAAOoW,EAAzB,SACIT,GADSvN,QAKtB,eAAC,GAAD,CAAQiM,OAAQO,EAAhB,UACInB,EADJ,QACiB,cAACgB,GAAD,UAAQiB,IACrBlW,GACE,cAAC,GAAD,CAAa4G,QAAS,kBAAM,EAAKiQ,uBAAjC,SACG,cAAC,GAAD,CAAY3W,UAAWmV,SAI/BD,GACE,cAACN,GAAD,UACIS,EAAQlP,KAAI,gBAAGuC,EAAH,EAAGA,IAAYgO,EAAf,EAAQpW,MAAiB2V,EAAzB,EAAyBA,QAAzB,OACV,cAACpB,GAAD,CAEGvU,MAAOoW,EACPE,SAAUF,IAAapW,EACvBoG,QAAS,SAAC4O,GAAD,OAAO,EAAKuB,kBAAkBvB,EAAGoB,IAJ7C,SAMIT,GALIvN,gB,GArGN9E,IAAMC,WAkI7BmR,GAASrQ,aAAe,CACrB0Q,QAAS,KACTvV,KAAM,KACN+V,iBAAkB,cAGNb,U,wnCC5Qf,IAAMpQ,GAAU3C,IAAOO,IAAV,MASPsU,GAAQ7U,IAAO8U,MAAV,MAMM,qBAAG5U,MAAkBiF,eAC1B,qBAAGjF,MAAkBe,eACjB,qBAAGf,MAAkBO,SAASC,KAInB,qBAAGgS,OAAuB,EAAI,OAQ1C,qBAAGxS,MAAkBmF,iBAI9BwD,GAAc7I,IAAOO,IAAV,MAOA,qBAAGL,MAAkBiF,eAOhC7C,GAAatC,YAAO+U,KAAP/U,CAAH,MAEJ,qBAAGE,MAAkBe,eAG3B+T,GAAc,SAAC,GAAyD,IAAvDlD,EAAsD,EAAtDA,MAAO0C,EAA+C,EAA/CA,aAAcZ,EAAiC,EAAjCA,iBAAqBtS,EAAY,8DAChDuG,mBAAS2M,GADuC,oBACnEnW,EADmE,KAC5D4W,EAD4D,KAG1E,OACG,eAAC,GAAD,2BAAa3T,GAAb,cACG,cAACuT,GAAD,CACGvY,KAAK,SACLoW,OAAkB,KAAVrU,EACR6W,YAAapD,EACb0C,aAAcA,EACdW,SAAU,YAAyC,IAArBC,EAAoB,EAArCzQ,OAAUtG,MACpB4W,EAASG,GACTxB,EAAiBwB,MAGvB,cAAC,GAAD,UACG,cAAC,GAAD,WAYZJ,GAAYtS,aAAe,CACxBkR,iBAAkB,aAClBY,aAAc,IAGFQ,U,2lBC7Ef,IAAMrS,GAAU3C,IAAOO,IAAV,MAGI,qBAAGL,MAAkBE,OAAOC,QAC5B,qBAAGH,MAAkBC,aAOhCkV,GAAUrV,IAAO6J,QAAV,MAMPyL,GAAiBtV,YAAO+S,GAAP/S,CAAH,MAIduV,GAAevV,YAAOgV,GAAPhV,CAAH,MAmGZwV,GAAc,SAAC,GAWd,IAVJ1O,EAUG,EAVHA,QACAqH,EASG,EATHA,aACAhB,EAQG,EARHA,WACAnD,EAOG,EAPHA,aACApM,EAMG,EANHA,SACA6X,EAKG,EALHA,QACAC,EAIG,EAJHA,UACAC,EAGG,EAHHA,UACA9X,EAEG,EAFHA,KACAG,EACG,EADHA,OAEM4X,EACH9O,GAAWqH,GAAgBhB,GAAcnD,EA3GvB,SAAClD,EAASqH,EAAchB,EAAYnD,EAAcpM,GACvE,IAAMC,EAAO,CACV,CACG4I,IAAK,SACLpI,MAAO,OACP2V,QAASnN,GAAUC,EAAS,OAAQlJ,IAEvC,CACG6I,IAAK,SACLpI,MAAO,kBACP2V,QAASnN,GAAUC,EAAS,eAAgBlJ,IAE/C,CACG6I,IAAK,SACLpI,MAAO,WACP2V,QAASnN,GAAUC,EAAS,WAAYlJ,KAIxCiY,EAAqB,CACxB,CACGpP,IAAK,aACLpI,MAAO,MACP2V,QAASnN,GAAUC,EAAS,MAAOlJ,GACnCkY,cAAe,UAGfC,EAAuB,CAC1B,CACGtP,IAAK,eACLpI,MAAO,MACP2V,QAASnN,GAAUC,EAAS,MAAOlJ,GACnCkY,cAAe,UAuDrB,OAnDA3H,EAAajK,KAAI,SAAC4K,GAyCf,OAxCIA,EAAY3B,YACb2B,EAAY3B,WAAWjJ,KAAI,SAACjG,GAEzB,IADiC4X,EAAmBlP,MAAK,SAAC7C,GAAD,OAAOA,EAAE2C,MAAQxI,EAASwI,OACpD,CAC5B,IAAMuP,EAAiB7I,EAAWxG,MAAK,SAAC7C,GAAD,OAAOA,EAAE2C,MAAQxI,EAASwI,OAE3DqP,EAAgB3H,EAAanQ,QAAO,SAAC8F,GAAD,OACvCA,EAAEqJ,WAAWxG,MAAK,SAACsP,GAAD,OAAOA,EAAExP,MAAQxI,EAASwI,UAE/CoP,EAAmBjP,KAAK,CACrBH,IAAKuP,EAAevP,IACpBpI,MAAO2X,EAAe5Y,KACtB4W,QAASgC,EAAepY,GACxBkY,cAAeA,EAAc9R,SAGnC,OAAO,KAGT8K,EAAY9E,cACb8E,EAAY9E,aAAa9F,KAAI,SAAChG,GAI3B,IAHmC6X,EAAqBpP,MACrD,SAAC7C,GAAD,OAAOA,EAAE2C,MAAQvI,EAAWuI,OAEE,CAC9B,IAAMyP,EAAmBlM,EAAarD,MAAK,SAAC7C,GAAD,OAAOA,EAAE2C,MAAQvI,EAAWuI,OAEjEqP,EAAgB3H,EAAanQ,QAAO,SAAC8F,GAAD,OACvCA,EAAEkG,aAAarD,MAAK,SAACsP,GAAD,OAAOA,EAAExP,MAAQvI,EAAWuI,UAEnDsP,EAAqBnP,KAAK,CACvBH,IAAKyP,EAAiBzP,IACtBpI,MAAO6X,EAAiB9Y,KACxB4W,QAASkC,EAAiB9Y,KAC1B0Y,cAAeA,EAAc9R,SAGnC,OAAO,KAGN,KAGV+R,EAAqBlY,MAAK,SAACqR,EAAGC,GAC3B,OAAOA,EAAE2G,cAAgB5G,EAAE4G,iBAE9BD,EAAmBhY,MAAK,SAACqR,EAAGC,GACzB,OAAOA,EAAE2G,cAAgB5G,EAAE4G,iBAGvB,CACJjY,OACAsP,WAAY0I,EACZ7L,aAAc+L,GAkBTI,CAAgBrP,EAASqH,EAAchB,EAAYnD,EAAcpM,GACjE,KAER,OACG,eAAC,GAAD,WACG,cAACyX,GAAD,UACIO,GACE,qCACG,cAACN,GAAD,CACGlC,QAASwC,EAAa/X,KACtBiU,MAAOjL,GAAUC,EAAS,OAAQlJ,GAClCuV,aAActV,EAAKC,OACnBD,KAAMA,EAAKE,UACX6V,iBAAkB,SAACvV,EAAON,GACvB0X,EAAQpX,EAAON,MAGrB,cAACuX,GAAD,CACGlC,QAASwC,EAAazI,WACtB2E,MAAOjL,GAAUC,EAAS,WAAYlJ,GACtCuV,aAAcnV,EAAOC,SACrB2V,iBAAkB,SAACvV,GAChBqX,EAAU,WAAYrX,MAG5B,cAACiX,GAAD,CACGlC,QAASwC,EAAa5L,aACtB8H,MAAOjL,GAAUC,EAAS,aAAclJ,GACxCuV,aAAcnV,EAAOE,WACrB0V,iBAAkB,SAACvV,GAChBqX,EAAU,aAAcrX,WAMvC,cAACkX,GAAD,CACGzD,MAAK,UAAKjL,GAAUC,EAAS,SAAUlJ,GAAlC,OACL4W,aAAcxW,EAAOG,OACrByV,iBAAkB,SAACvV,GAChBsX,EAAUtX,UAoEzBmX,GAAY9S,aAAe,CACxBoE,QAAS,KACTqH,aAAc,KACdhB,WAAY,KACZnD,aAAc,MAGjB,IAWevG,gBAXS,SAAC,GAAD,QACrBzE,IAAO8H,EADc,EACdA,QAASqH,EADK,EACLA,aAAchB,EADT,EACSA,WAAYnD,EADrB,EACqBA,aADrB,IAErB/K,IAFqB,MAGjB,CAAE6H,UAASqH,eAAchB,aAAYnD,eAAcpM,SAHlC,EAEdA,SAC0DC,KAH5C,EAEJA,KACsDG,OAHlD,EAEEA,WAGC,SAAC3B,GAAD,MAAe,CACvCoZ,QAAS,SAAC3X,EAAQC,GAAT,OAAuB1B,E1DvPZ,SAACyB,EAAQC,GAAT,OAAuB,SAAC1B,GAC5CA,EAAS,CAAEC,KAAMiB,EAAUZ,QAAS,CAAEmB,SAAQC,gB0DsPLqY,CAActY,EAAQC,KAC/D2X,UAAW,SAACpZ,EAAM+B,GAAP,OAAiBhC,E1DpPN,SAACC,EAAM+B,GAAP,OAAiB,SAAChC,GACxCA,EAAS,CAAEC,KAAMkB,EAAYb,QAAS,CAAEL,OAAM+B,Y0DmPTgY,CAAgB/Z,EAAM+B,KAC3DsX,UAAW,SAACrX,GAAD,OAAYjC,E1DjPD,SAACiC,GAAD,OAAY,SAACjC,GACnCia,aAAa5Y,GACbA,EAAgB6Y,YAAW,WACxBla,EAAS,CAAEC,KAAMmB,EAAYd,QAAS,CAAE2B,cACxC,M0D6O6BkY,CAAgBlY,QAGpCmF,CAA6C+R,I,yPC3Q5D,IAAM7S,GAAU3C,IAAO6J,QAAV,MA2EE4M,GApEkB,SAAC,GAAD,IAAGtI,EAAH,EAAGA,aAAchB,EAAjB,EAAiBA,WAAYnD,EAA7B,EAA6BA,aAAcpM,EAA3C,EAA2CA,SAA3C,OAC9B,cAAC,GAAD,UACIuQ,EAAajK,KAAI,SAAC4K,GAAiB,IAE9BrI,EAICqI,EAJDrI,IACa7C,EAGZkL,EAHDnE,UAAa/G,KACDmL,EAEXD,EAFD3B,WACc6B,EACbF,EADD9E,aAGH,OACG,cAAC,GAAD,CAEGyD,KAAI,wBAAmBhH,GACvBwD,MAAO6E,EAAY,GAAD,OAAIlR,EAAJ,WAClBsM,MAAOtG,EACP8J,YAAaoB,EAAY,GAAD,OAAIlR,EAAJ,iBACxBuP,WAAY4B,EAAc/K,OAASsC,GAAayI,EAAe5B,GAAc,GAC7EnD,aACGgF,EAAgBhL,OAASsC,GAAa0I,EAAiBhF,GAAgB,IAPrEvD,SCZdiQ,G,mLACmB,IAAD,EAC2CrV,KAAKC,MAA1DzD,EADU,EACVA,KAAMG,EADI,EACJA,OAAQmQ,EADJ,EACIA,aAAchB,EADlB,EACkBA,WAAYvP,EAD9B,EAC8BA,SAEhD,GAAIuQ,EAAc,CACf,IAAIwI,EAAQ,YAAOxI,GACbyI,EAA8B,SAAnB/Y,EAAKE,UAAuB,GAAK,EAC5C8Y,EAA+B,QAAnBhZ,EAAKE,UAAsB,GAAK,EAuDlD,OArDA4Y,EAAWA,EAAS9Y,MAAK,SAACqR,EAAGC,GAC1B,OAAID,EAAEE,SAAWD,EAAEC,SAAiBwH,EAChC1H,EAAEE,SAAWD,EAAEC,SAAiByH,EAC7B,KAGU,oBAAhBhZ,EAAKC,OACN6Y,EAAWA,EAAS9Y,MAAK,SAACqR,EAAGC,GAC1B,MAAuB,SAAnBtR,EAAKE,UAA6BmR,EAAElF,aAAahG,OAASmL,EAAEnF,aAAahG,OACtEmL,EAAEnF,aAAahG,OAASkL,EAAElF,aAAahG,UAEzB,aAAhBnG,EAAKC,SACb6Y,EAAWA,EAAS9Y,MAAK,SAACqR,EAAGC,GAC1B,IAAM2H,EAAiB5H,EAAE/B,WAAW,GAC/BA,EAAWxG,MAAK,SAAC7C,GAAD,OAAOA,EAAE1G,OAAS8R,EAAE/B,WAAW,GAAG6G,WAClD,KACC+C,EAAiB7H,EAAE/B,WAAW,GAC/BA,EAAWxG,MAAK,SAAC7C,GAAD,OAAOA,EAAE1G,OAAS+R,EAAEhC,WAAW,GAAG6G,WAClD,KACCgD,EAAWF,EAAiBA,EAAelZ,GAAY,GACvDqZ,EAAWF,EAAiBA,EAAenZ,GAAY,GAC7D,MAAuB,QAAnBC,EAAKE,UAA4BiZ,EAASE,cAAcD,GACrDA,EAASC,cAAcF,OAIV,QAAtBhZ,EAAOE,aACRyY,EAAWA,EAAS3Y,QAAO,SAAC8F,GACzB,SAAIA,EAAEkG,eAAgBlG,EAAEkG,aAAahG,WACzBF,EAAEkG,aAAarD,MAAK,SAACsP,GAAD,OAAOA,EAAEjC,UAAYhW,EAAOE,kBAM1C,QAApBF,EAAOC,WACR0Y,EAAWA,EAAS3Y,QAAO,SAAC8F,GACzB,SAAIA,EAAEqJ,aAAcrJ,EAAEqJ,WAAWnJ,WACrBF,EAAEqJ,WAAWxG,MAAK,SAACsP,GAAD,OAAOA,EAAEjC,UAAYhW,EAAOC,gBAM1C,KAAlBD,EAAOG,SACRwY,EAAWA,EAAS3Y,QAAO,SAAC8F,GACzB,IAAMxF,EAASN,EAAOG,OAAOgZ,cACvBlN,EAAQnG,EAAE,GAAD,OAAIlG,EAAJ,WAAsBuZ,cAC/BzJ,EAAc5J,EAAE,GAAD,OAAIlG,EAAJ,iBAA4BuZ,cACjD,OAAOlN,EAAMmN,SAAS9Y,IAAWoP,EAAY0J,SAAS9Y,OAIrDqY,EAEV,OAAO,O,+BAGA,IAAD,EACgEtV,KAAKC,MAAnEwF,EADF,EACEA,QAASqH,EADX,EACWA,aAAchB,EADzB,EACyBA,WAAYnD,EADrC,EACqCA,aAAcpM,EADnD,EACmDA,SAEzD,OACG,cAAC,GAAD,CAAmBgK,WAAY4I,GAA/B,SACG,eAAC,GAAD,WACG,cAAC,GAAD,CAAStI,KAAK,QAAQ/B,QAAM,IAC5B,cAAC,GAAD,UAAUU,GAAUC,EAAS,eAAgBlJ,KAC7C,cAAC,GAAD,CAASsK,KAAK,WACd,cAAC,GAAD,IACA,cAAC,GAAD,CAASA,KAAK,WACbiG,GAAgBhB,GAAcnD,EAC5B,cAAC,GAAD,CACGmE,aAAc9M,KAAKgW,qBACnBlK,WAAYA,EACZnD,aAAcA,EACdpM,SAAUA,IAGb,cAAC,GAAD,IAEH,cAAC,GAAD,CAASsK,KAAK,mB,GAxFFvG,IAAMC,WAyJjC8U,GAAahU,aAAe,CACzBoE,QAAS,KACTqH,aAAc,KACdhB,WAAY,KACZnD,aAAc,MAGjB,IAaevG,gBAbS,SAAC,GAAD,QACrBzE,IAAO8H,EADc,EACdA,QAASqH,EADK,EACLA,aAAchB,EADT,EACSA,WAAYnD,EADrB,EACqBA,aADrB,IAErB/K,IAFqB,MAGjB,CACJ6H,UACAqH,eACAhB,aACAnD,eACApM,SARqB,EAEdA,SAOPC,KATqB,EAEJA,KAQjBG,OAVqB,EAEEA,UAWXyF,CAAyBiT,IC5JzBY,GAnBF,WACV,OACG,cAAC,IAAD,CAAUhY,MAAOA,EAAjB,SACG,cAAC,IAAD,UACG,cAAC,IAAD,UACG,cAAC,GAAD,UACG,eAAC,IAAD,WACG,cAAC,IAAD,CAAOsE,KAAK,oBAAoB2T,UAAWrF,KAC3C,cAAC,IAAD,CAAOtO,KAAK,gBAAgB2T,UAAWb,KACvC,cAAC,IAAD,CAAO9S,KAAK,SAAS2T,UAAWtH,KAChC,cAAC,IAAD,CAAOrM,KAAK,IAAI2T,UAAWlI,iBChBhDmI,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAAC,GAAD,MAEHC,SAASC,eAAe,SAM3Bxc,M","file":"static/js/main.8a053740.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const API_URL = 'https://panel.marcin-kalinowski.pl'\nexport const API_TOKEN = '69f36c76083d3d848b1734c37e9270'\n","import axios from 'axios'\nimport { API_TOKEN, API_URL } from 'defines'\n\nexport const FETCH_COLLECTION_REQUEST = 'FETCH_COLLECTION_REQUEST'\nexport const FETCH_COLLECTION_SUCCESS = 'FETCH_COLLECTION_SUCCESS'\nexport const FETCH_COLLECTION_FAILURE = 'FETCH_COLLECTION_FAILURE'\n\nexport const FETCH_SINGLETON_REQUEST = 'FETCH_SINGLETON_REQUEST'\nexport const FETCH_SINGLETON_SUCCESS = 'FETCH_SINGLETON_SUCCESS'\nexport const FETCH_SINGLETON_FAILURE = 'FETCH_SINGLETON_FAILURE'\n\nexport const FETCH_THUMBNAIL_REQUEST = 'FETCH_THUMBNAIL_REQUEST'\nexport const FETCH_THUMBNAIL_SUCCESS = 'FETCH_THUMBNAIL_SUCCESS'\nexport const FETCH_THUMBNAIL_FAILURE = 'FETCH_THUMBNAIL_FAILURE'\n\nexport const fetchCollection = (collection) => (dispatch) => {\n   dispatch({ type: FETCH_COLLECTION_REQUEST })\n\n   return axios(`${API_URL}/api/collections/get/${collection}`, {\n      params: {\n         token: API_TOKEN,\n      },\n   })\n      .then(({ data }) => {\n         dispatch({\n            type: FETCH_COLLECTION_SUCCESS,\n            payload: {\n               type: collection,\n               data: data.entries,\n            },\n         })\n      })\n      .catch((err) => dispatch({ type: FETCH_SINGLETON_FAILURE, payload: err }))\n}\n\nexport const fetchSingleton = (singleton) => (dispatch) => {\n   dispatch({ type: FETCH_SINGLETON_REQUEST })\n\n   return axios(`${API_URL}/api/singletons/get/${singleton}`, {\n      params: {\n         token: API_TOKEN,\n      },\n   })\n      .then(({ data }) => {\n         dispatch({\n            type: FETCH_SINGLETON_SUCCESS,\n            payload: {\n               type: singleton,\n               data,\n            },\n         })\n      })\n      .catch((err) => dispatch({ type: FETCH_SINGLETON_FAILURE, payload: err }))\n}\n\nexport const fetchThumbnail = (path, width, height) => (dispatch) => {\n   dispatch({ type: FETCH_THUMBNAIL_REQUEST })\n\n   return axios(`${API_URL}/api/cockpit/image`, {\n      params: {\n         token: API_TOKEN,\n         src: path,\n         w: width,\n         h: height,\n      },\n   })\n      .then(({ data }) => {\n         dispatch({\n            type: FETCH_THUMBNAIL_SUCCESS,\n            payload: {\n               name: `${path}/${width}/${height}`,\n               url: data,\n            },\n         })\n      })\n      .catch((err) => dispatch({ type: FETCH_THUMBNAIL_FAILURE, payload: err }))\n}\n","import {\n   FETCH_COLLECTION_SUCCESS,\n   FETCH_SINGLETON_SUCCESS,\n   FETCH_THUMBNAIL_SUCCESS,\n} from 'actions/api'\n\nconst initialState = {\n   thumbnails: [],\n}\n\nconst apiReducer = (state = initialState, action) => {\n   switch (action.type) {\n      case FETCH_COLLECTION_SUCCESS: {\n         return {\n            ...state,\n            [action.payload.type]: [...action.payload.data],\n         }\n      }\n      case FETCH_SINGLETON_SUCCESS: {\n         return {\n            ...state,\n            [action.payload.type]: action.payload.data,\n         }\n      }\n      case FETCH_THUMBNAIL_SUCCESS: {\n         return {\n            ...state,\n            thumbnails: [\n               ...state.thumbnails,\n               {\n                  name: action.payload.name,\n                  url: action.payload.url,\n               },\n            ],\n         }\n      }\n      default:\n         return state\n   }\n}\n\nexport default apiReducer\n","export const SET_LANGUAGE = 'SET_LANGUAGE'\nexport const SET_SORT = 'SET_SORT'\nexport const SET_FILTER = 'SET_FILTER'\nexport const SET_SEARCH = 'SET_SEARCH'\n\nexport const DEFAULT_SORT = 'date'\nexport const DEFAULT_SORT_DIRECTION = 'asc'\nexport const DEFAULT_CATEGORY = 'all'\nexport const DEFAULT_TECHNOLOGY = 'all'\n\nlet searchTimeout = null\n\nexport const LANGUAGES = {\n   pl: 'pl',\n   en: 'en',\n}\n\nexport const setLanguage = (language) => (dispatch) => {\n   dispatch({ type: SET_LANGUAGE, payload: { language } })\n}\n\nexport const setSort = (option, direction) => (dispatch) => {\n   dispatch({ type: SET_SORT, payload: { option, direction } })\n}\n\nexport const setFilter = (type, value) => (dispatch) => {\n   dispatch({ type: SET_FILTER, payload: { type, value } })\n}\n\nexport const setSearch = (phrase) => (dispatch) => {\n   clearTimeout(searchTimeout)\n   searchTimeout = setTimeout(() => {\n      dispatch({ type: SET_SEARCH, payload: { phrase } })\n   }, 300)\n}\n","import {\n   DEFAULT_CATEGORY,\n   DEFAULT_SORT,\n   DEFAULT_SORT_DIRECTION,\n   DEFAULT_TECHNOLOGY,\n   LANGUAGES,\n   SET_FILTER,\n   SET_LANGUAGE,\n   SET_SEARCH,\n   SET_SORT,\n} from 'actions/app'\n\nconst initialState = {\n   language: LANGUAGES.pl,\n   sort: {\n      option: DEFAULT_SORT,\n      direction: DEFAULT_SORT_DIRECTION,\n   },\n   filter: {\n      category: DEFAULT_CATEGORY,\n      technology: DEFAULT_TECHNOLOGY,\n      search: '',\n   },\n}\n\nconst appReducer = (state = initialState, action) => {\n   switch (action.type) {\n      case SET_LANGUAGE: {\n         return {\n            ...state,\n            language: action.payload.language,\n         }\n      }\n      case SET_SORT: {\n         return {\n            ...state,\n            sort: {\n               option: action.payload.option,\n               direction: action.payload.direction,\n            },\n         }\n      }\n      case SET_FILTER: {\n         return {\n            ...state,\n            filter: {\n               ...state.filter,\n               [action.payload.type]: action.payload.value,\n            },\n         }\n      }\n      case SET_SEARCH: {\n         return {\n            ...state,\n            filter: {\n               ...state.filter,\n               search: action.payload.phrase,\n            },\n         }\n      }\n      default:\n         return state\n   }\n}\n\nexport default appReducer\n","import { loadState, saveState } from 'localStorage'\nimport apiReducer from 'reducers/api'\nimport appReducer from 'reducers/app'\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux'\nimport thunk from 'redux-thunk'\n\nconst persistedState = loadState()\n\nconst rootReducer = combineReducers({\n   api: apiReducer,\n   app: appReducer,\n})\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(rootReducer, persistedState, composeEnhancers(applyMiddleware(thunk)))\n/* eslint-enable */\n\nstore.subscribe(() => {\n   saveState({\n      api: store.getState().api,\n      app: store.getState().app,\n   })\n})\n\nexport default store\n","export const loadState = () => {\n   try {\n      const serializedState = localStorage.getItem('state')\n      if (serializedState === null) {\n         return undefined\n      }\n      return JSON.parse(serializedState)\n   } catch (err) {\n      return undefined\n   }\n}\n\nexport const saveState = (state) => {\n   try {\n      const serializedState = JSON.stringify(state)\n      localStorage.setItem('state', serializedState)\n   } catch {\n      // ignore write errors\n   }\n}\n","import styled from 'styled-components'\n\nconst Footer = styled.footer`\n   min-height: 104px;\n   background: ${({ theme }) => theme.bgPrimary};\n   box-shadow: ${({ theme }) => theme.shadow.soft};\n   padding: 34px 50px;\n`\n\nexport default Footer\n","import styled, { css } from 'styled-components'\n\nconst Text = styled.div`\n   margin: 0;\n   font-size: ${({ small, theme }) => (small ? theme.fontSize.s : theme.fontSize.m)};\n   text-align: center;\n   line-height: ${({ theme }) => theme.line.main};\n   ${({ lineclamp, theme }) =>\n      lineclamp &&\n      css`\n         display: -webkit-box;\n         -webkit-line-clamp: ${lineclamp};\n         -webkit-box-orient: vertical;\n         overflow: hidden;\n         height: ${theme.line.mainNumber * lineclamp}em;\n      `}\n\n   a {\n      color: ${({ theme }) => theme.fontPrimary};\n\n      :hover {\n         color: ${({ theme }) => theme.accentColor};\n      }\n   }\n`\n\nexport default Text\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ToTop extends React.Component {\n   componentDidUpdate(prevProps) {\n      const {\n         location: { pathname },\n      } = this.props\n      const {\n         location: { pathname: prevPathname },\n      } = prevProps\n      if (pathname !== prevPathname) {\n         window.scrollTo({ top: 0 })\n      }\n   }\n\n   render() {\n      return null\n   }\n}\n\nToTop.propTypes = {\n   location: PropTypes.shape({\n      pathname: PropTypes.string,\n   }).isRequired,\n}\n\nexport default withRouter(ToTop)\n","export default __webpack_public_path__ + \"static/media/english.edd87ebb.svg\";","export default __webpack_public_path__ + \"static/media/github.e1de1b7b.svg\";","export default __webpack_public_path__ + \"static/media/polish.6097c2d2.svg\";","import styled from 'styled-components'\n\nconst Icon = styled.img`\n   width: ${({ small }) => (small ? 32 : 64)}px;\n   height: ${({ small }) => (small ? 32 : 64)}px;\n   object-fit: contain;\n`\n\nexport default Icon\n","import ArrowForwardIosRoundedIcon from '@material-ui/icons/ArrowForwardIosRounded'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst StyledButton = styled.button`\n   width: 64px;\n   height: 64px;\n   background: ${({ theme }) => theme.bgPrimary} !important;\n   border-radius: 32px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   box-shadow: ${({ theme }) => theme.shadow.hard};\n   color: ${({ theme }) => theme.fontPrimary};\n   border: none;\n   cursor: pointer;\n   position: relative;\n\n   ::before {\n      content: '';\n      position: absolute;\n      display: block;\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      background-color: ${({ theme }) => theme.transparent.white.mid};\n      will-change: transform;\n      opacity: 0;\n      top: 0;\n      left: 0;\n      transition: opacity 0.5s linear, transform 0.5s ease-out;\n      transform: scale(1);\n   }\n\n   &:active::before {\n      opacity: 1;\n      transition: opacity 0s linear, transform 0s ease-out;\n      transform: scale(0);\n   }\n`\n\nconst StyledIcon = styled(ArrowForwardIosRoundedIcon)`\n   color: ${({ theme }) => theme.fontPrimary} !important;\n   font-size: 32px !important;\n   ${({ prev }) =>\n      prev === 'true' &&\n      css`\n         transform: rotate(180deg);\n      `}\n`\n\nconst ArrowButton = ({ prev, ...props }) => (\n   <StyledButton {...props}>\n      <StyledIcon prev={prev ? 'true' : null} />\n   </StyledButton>\n)\n\nArrowButton.propTypes = {\n   prev: PropTypes.bool,\n}\n\nArrowButton.defaultProps = {\n   prev: false,\n}\n\nexport default ArrowButton\n","import { LANGUAGES, setLanguage as setLanguageAction } from 'actions/app'\nimport EnglishIcon from 'assets/icons/english.svg'\nimport GitHubIcon from 'assets/icons/github.svg'\nimport PolishIcon from 'assets/icons/polish.svg'\nimport Icon from 'components/atoms/Icon/Icon'\nimport ArrowButton from 'components/molecules/ArrowButton/ArrowButton'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport styled, { css } from 'styled-components'\n\nconst Wrapper = styled.nav`\n   position: fixed;\n   top: 0;\n   left: 0;\n   padding: 20px;\n   z-index: 10;\n   pointer-events: none;\n\n   @media ${({ theme }) => theme.breakpoints.min.tablet} {\n      width: 104px;\n   }\n   @media ${({ theme }) => theme.breakpoints.max.tablet} {\n      display: flex;\n\n      ::before {\n         content: '';\n         position: absolute;\n         top: 10px;\n         left: 10px;\n         height: 84px;\n         width: ${({ bgsmall }) => (bgsmall ? 168 : 252)}px;\n         border-radius: ${({ theme }) => theme.radius.primary};\n         backdrop-filter: blur(10px);\n         box-shadow: ${({ theme }) => theme.shadow.soft};\n      }\n   }\n\n   a,\n   img {\n      pointer-events: all;\n   }\n`\n\nconst BackButton = styled(Link)`\n   will-change: transform;\n   transition: transform 0.2s ease-out;\n   height: 64px;\n   display: block;\n   border-radius: 50%;\n\n   ${({ to }) =>\n      to !== '#'\n         ? css`\n              transform: scale(1);\n              pointer-events: all;\n           `\n         : css`\n              transform: scale(0);\n              pointer-events: none;\n           `}\n`\n\nconst NavList = styled.div`\n   will-change: transform;\n   transition: transform 0.3s ease-out;\n\n   ${({ up }) =>\n      up &&\n      css`\n         @media ${({ theme }) => theme.breakpoints.min.tablet} {\n            transform: translateY(-84px);\n         }\n         @media ${({ theme }) => theme.breakpoints.max.tablet} {\n            transform: translateX(-84px);\n         }\n      `}\n`\n\nconst StyledIcon = styled(Icon)`\n   cursor: pointer;\n\n   @media ${({ theme }) => theme.breakpoints.min.tablet} {\n      margin: 20px 0;\n   }\n   @media ${({ theme }) => theme.breakpoints.max.tablet} {\n      margin: 0 20px;\n   }\n`\n\nconst Navigation = ({ language, setLanguage, location }) => {\n   const path = location.pathname.split('/').filter((x) => x !== '')\n\n   let backlink = '#'\n   if (path.length) {\n      if (path.length > 1) {\n         let backlinkpath = ''\n         path.map((element, i) => {\n            if (i < path.length - 1) {\n               backlinkpath += `/${element}`\n            }\n            return 0\n         })\n\n         backlink = backlinkpath\n      } else {\n         backlink = '/'\n      }\n   }\n\n   return (\n      <Wrapper bgsmall={backlink === '#'}>\n         <BackButton to={backlink}>\n            <ArrowButton prev as=\"span\" />\n         </BackButton>\n         <NavList up={backlink === '#'}>\n            <StyledIcon\n               src={language === LANGUAGES.pl ? PolishIcon : EnglishIcon}\n               onClick={() => {\n                  setLanguage(language === LANGUAGES.pl ? LANGUAGES.en : LANGUAGES.pl)\n               }}\n            />\n            <a href=\"https://github.com/RiddickAbaddon\" target=\"_blank\" rel=\"noopener noreferrer\">\n               <Icon src={GitHubIcon} />\n            </a>\n         </NavList>\n      </Wrapper>\n   )\n}\n\nNavigation.propTypes = {\n   language: PropTypes.string.isRequired,\n   setLanguage: PropTypes.func.isRequired,\n   location: PropTypes.shape({\n      pathname: PropTypes.string,\n   }).isRequired,\n}\n\nconst mapStateToProps = ({ app: { language } }) => ({ language })\n\nconst mapDispatchToProps = (dispatch) => ({\n   setLanguage: (language) => dispatch(setLanguageAction(language)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Navigation))\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n   *, *::before, *::after {\n      box-sizing: border-box;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n   }\n\n   html {\n      font-size: 10px;\n      font-family: ${({ theme }) => theme.fontFamily.primary};\n   }\n\n   body {\n      margin: 0;\n      padding: 0;\n      font-size: ${({ theme }) => theme.fontSize.m};\n      background: ${({ theme }) => theme.bgMain};\n      color: ${({ theme }) => theme.fontPrimary};\n\n      @media ${({ theme }) => theme.breakpoints.max.tablet} {\n         margin: 0 !important;\n      }\n   }\n\n   input, button, textarea {\n      font-family: ${({ theme }) => theme.fontFamily.primary};\n   }\n\n   ::selection {\n      background: ${({ theme }) => theme.accentColor};\n   }\n`\n\nexport default GlobalStyle\n","const MainTheme = {\n   bgMain: 'hsl(0, 3%, 20%)',\n   bgPrimary: 'hsl(0, 3%, 25%)',\n   bgSecondary: 'hsl(0, 3%, 30%)',\n   bgBadge: 'hsl(0, 2%, 22%)',\n   fontPrimary: 'hsl(0, 0%, 100%)',\n   fontSecondary: 'hsl(0, 0%, 77%)',\n   accentColor: 'hsl(32, 100%, 50%)',\n\n   transparent: {\n      white: {\n         soft: 'hsla(0, 0%, 100%, 0.1)',\n         mid: 'hsla(0, 0%, 100%, 0.2)',\n      },\n   },\n   gradient: {\n      accent: 'linear-gradient(125.64deg, hsl(29, 100%, 50%) 22.46%, hsl(338, 100%, 50%) 77.9%)',\n      preload:\n         'linear-gradient(90deg, hsl(0, 2%, 22%) 0%, hsl(0, 0%, 35%) 30%, hsl(0, 0%, 35%) 40%, hsl(0, 2%, 22%) 100%)',\n      glow:\n         'radial-gradient(50% 100% at 50% 0%, hsla(40, 100%, 50%, 0.17) 0%, hsla(40, 100%, 50%, 0) 100%)',\n      slider: 'linear-gradient(to left, black 0%, transparent 100%)',\n   },\n   fontSize: {\n      xl: '7.2rem',\n      l: '3.6rem',\n      m: '2.4rem',\n      s: '1.6rem',\n      xs: '1.2rem',\n   },\n   fontWeight: {\n      regular: 400,\n      bold: 700,\n   },\n   fontFamily: {\n      primary: `'Montserrat', sans-serif`,\n   },\n   shadow: {\n      soft: '0px 5px 25px -5px hsla(0, 0%, 0%, 0.25)',\n      hard: '0px 5px 25px -5px hsl(0, 0%, 0%)',\n      glow: '0px 0px 15px hsla(40, 100%, 50%, 0.35)',\n   },\n   radius: {\n      primary: '20px',\n      secondary: '10px',\n   },\n   line: {\n      main: '1.5em',\n      mainNumber: 1.5,\n   },\n   easing: {\n      primary: 'cubic-bezier(0.4, 0.96, 0.87, 0.98)',\n   },\n   breakpoints: {\n      max: {\n         mobile: '(max-width: 576px)',\n         tablet: '(max-width: 768px)',\n         desktop: '(max-width: 1200px)',\n      },\n      min: {\n         mobile: '(min-width: 577px)',\n         tablet: '(min-width: 769px)',\n         desktop: '(min-width: 1201px)',\n      },\n   },\n}\n\nexport default MainTheme\n","import { createGlobalStyle } from 'styled-components'\n\nconst SlickSliderStyle = createGlobalStyle`\n   .slick-slider\n   {\n      display: block;\n      box-sizing: border-box;\n      position: static;\n\n      -webkit-user-select: none;\n         -moz-user-select: none;\n          -ms-user-select: none;\n              user-select: none;\n\n      -webkit-touch-callout: none;\n         -khtml-user-select: none;\n           -ms-touch-action: pan-y;\n               touch-action: pan-y;\n      -webkit-tap-highlight-color: transparent;\n   }\n\n   .slick-list\n   {\n      position: relative;\n\n      display: block;\n\n      margin: 0;\n      padding: 0;\n   }\n   .slick-list:focus\n   {\n      outline: none;\n   }\n   .slick-list.dragging\n   {\n      cursor: pointer;\n      cursor: hand;\n   }\n\n   .slick-slider .slick-track,\n   .slick-slider .slick-list\n   {\n      -webkit-transform: translate3d(0, 0, 0);\n         -moz-transform: translate3d(0, 0, 0);\n          -ms-transform: translate3d(0, 0, 0);\n           -o-transform: translate3d(0, 0, 0);\n              transform: translate3d(0, 0, 0);\n   }\n\n   .slick-track\n   {\n      position: relative;\n      top: 0;\n      left: 0;\n\n      display: block;\n      margin-left: auto;\n      margin-right: auto;\n   }\n   .slick-track:before,\n   .slick-track:after\n   {\n      display: table;\n\n      content: '';\n   }\n   .slick-track:after\n   {\n      clear: both;\n   }\n   .slick-loading .slick-track\n   {\n      visibility: hidden;\n   }\n\n   .slick-slide\n   {\n      display: none;\n      float: left;\n\n      height: 100%;\n      min-height: 1px;\n   }\n   [dir='rtl'] .slick-slide\n   {\n      float: right;\n   }\n   .slick-slide img\n   {\n      display: block;\n   }\n   .slick-slide.slick-loading img\n   {\n      display: none;\n   }\n   .slick-slide.dragging img\n   {\n      pointer-events: none;\n   }\n   .slick-initialized .slick-slide\n   {\n      display: block;\n   }\n   .slick-loading .slick-slide\n   {\n      visibility: hidden;\n   }\n   .slick-vertical .slick-slide\n   {\n      display: block;\n\n      height: auto;\n\n      border: 1px solid transparent;\n   }\n   .slick-arrow.slick-hidden {\n      display: none;\n   }\n\n`\n\nexport default SlickSliderStyle\n","/* eslint-disable import/prefer-default-export */\nexport const getDataByIds = (idsCollection, collection) => {\n   const result = []\n   if (idsCollection.length) {\n      idsCollection.map(({ _id }) => {\n         const finded = collection.find((x) => x._id === _id)\n         if (finded) result.push(finded)\n         return 0\n      })\n   }\n   return result\n}\n\nexport const removeHtmlTags = (text) => {\n   return text.replace(/(<([^>]+)>)/gi, '').trim()\n}\n\nexport const getPhrase = (phrases, name, language) => {\n   if (phrases) {\n      const phrase = phrases.find((x) => x.name === name)\n      return phrase ? phrase[language] : name\n   }\n   return '...'\n}\n\nexport const getThumbnail = (thumbnails, path, size) => {\n   if (thumbnails) {\n      const width = size[0] || 200\n      const height = size[1] || width\n      const thumbnail = thumbnails.find((x) => x.name === `${path}/${width}/${height}`)\n      if (thumbnail) return thumbnail.url\n      return null\n   }\n   return null\n}\n","import { fetchCollection } from 'actions/api'\nimport Footer from 'components/atoms/Footer/Footer'\nimport Text from 'components/atoms/Text/Text'\nimport ToTop from 'components/atoms/ToTop/ToTop'\nimport Navigation from 'components/organisms/Navigation/Navigation'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport styled, { keyframes, ThemeProvider } from 'styled-components'\nimport GlobalStyle from 'theme/GlobalStyle'\nimport MainTheme from 'theme/MainTheme'\nimport SlickSliderStyle from 'theme/SlickSliderStyle'\nimport { getPhrase } from 'Utils'\n\nconst PulseMessenger = keyframes`\n   from {\n      opacity: 1;\n      transform: scale(0);\n   }\n   to {\n      opacity: 0;\n      transform: scale(1);\n   }\n`\n\nconst Wrapper = styled.div`\n   min-height: calc(100vh - 104px);\n   overflow: hidden;\n`\n\nconst MessengerBackground = styled.div`\n   position: fixed;\n   width: 64px;\n   height: 64px;\n   left: 20px;\n   bottom: 20px;\n   border-radius: 50%;\n   background-color: ${({ theme }) => theme.accentColor};\n   z-index: 2;\n\n   ::before {\n      content: '';\n      display: block;\n      position: absolute;\n      width: 58px;\n      height: 58px;\n      top: 3px;\n      left: 3px;\n      border-radius: 50%;\n      will-change: transform;\n      background: ${({ theme }) => theme.transparent.white.mid};\n      animation: ${PulseMessenger} 1s ease-out infinite;\n   }\n`\n\nclass MainTemplate extends React.Component {\n   componentDidMount() {\n      const { fetchPhrases, fetchRealizations, fetchCategories, fetchTechnologies } = this.props\n      fetchPhrases()\n      fetchRealizations()\n      fetchCategories()\n      fetchTechnologies()\n   }\n\n   render() {\n      const { children, language, phrases } = this.props\n\n      return (\n         <ThemeProvider theme={MainTheme}>\n            <ToTop />\n            <GlobalStyle />\n            <SlickSliderStyle />\n            <Navigation />\n            <Wrapper>{children}</Wrapper>\n            <Footer>\n               <Text>\n                  2020 © marcin-kalinowski.pl |{' '}\n                  <Link to=\"/cookies-policy\">{getPhrase(phrases, 'cookies-policy', language)}</Link>\n               </Text>\n            </Footer>\n            <MessengerBackground />\n         </ThemeProvider>\n      )\n   }\n}\n\nMainTemplate.propTypes = {\n   children: PropTypes.element.isRequired,\n   language: PropTypes.string.isRequired,\n   phrases: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   fetchPhrases: PropTypes.func.isRequired,\n   fetchRealizations: PropTypes.func.isRequired,\n   fetchCategories: PropTypes.func.isRequired,\n   fetchTechnologies: PropTypes.func.isRequired,\n}\n\nMainTemplate.defaultProps = {\n   phrases: null,\n}\n\nconst mapStateToProps = ({ api: { phrases }, app: { language } }) => ({ phrases, language })\n\nconst mapDispatchToProps = (dispatch) => ({\n   fetchPhrases: () => dispatch(fetchCollection('phrases')),\n   fetchRealizations: () => dispatch(fetchCollection('realizations')),\n   fetchCategories: () => dispatch(fetchCollection('categories')),\n   fetchTechnologies: () => dispatch(fetchCollection('technologies')),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainTemplate)\n","export default __webpack_public_path__ + \"static/media/hex.757ea6b8.png\";","export default __webpack_public_path__ + \"static/media/home.d21347a7.png\";","export default __webpack_public_path__ + \"static/media/mail.7e39f103.svg\";","import PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Wrapper = styled.div`\n   position: relative;\n`\n\nconst Image = styled.img`\n   position: absolute;\n   z-index: -1;\n   opacity: ${({ loaded }) => (loaded ? 1 : 0)};\n   transition: opacity 3s ease-out;\n   will-change: transform;\n   width: 100%;\n   ${({ align }) =>\n      align === 'top'\n         ? css`\n              top: 0;\n           `\n         : css`\n              bottom: 0;\n           `}\n`\n\nconst BackgroundSection = ({ background, align, children, ...props }) => {\n   const [loaded, setLoaded] = useState(false)\n\n   return (\n      <Wrapper {...props}>\n         {children}\n         <Image loaded={loaded} align={align} src={background} onLoad={() => setLoaded(true)} />\n      </Wrapper>\n   )\n}\n\nBackgroundSection.propTypes = {\n   children: PropTypes.element.isRequired,\n   background: PropTypes.string.isRequired,\n   align: PropTypes.oneOf(['top', 'bottom']),\n}\n\nBackgroundSection.defaultProps = {\n   align: 'top',\n}\n\nexport default BackgroundSection\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n   margin: 0 auto;\n   text-align: center;\n\n   @media ${({ theme }) => theme.breakpoints.min.tablet} {\n      max-width: ${({ small }) => (small ? 800 : 1000) + 208}px;\n      padding: 0 104px;\n   }\n   @media ${({ theme }) => theme.breakpoints.max.tablet} {\n      max-width: ${({ small }) => (small ? 800 : 1000) + 40}px;\n      padding: 0 20px;\n   }\n`\n\nexport default Container\n","import styled, { css } from 'styled-components'\n\nconst Divider = styled.div`\n   height: ${({ size }) => {\n      switch (size) {\n         case 'large':\n            return 80\n         case 'small':\n            return 20\n         default:\n            return 40\n      }\n   }}px;\n   ${({ mobile }) =>\n      mobile &&\n      css`\n         @media ${({ theme }) => theme.breakpoints.max.tablet} {\n            margin-bottom: 20px;\n         }\n      `}\n`\n\nexport default Divider\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledHeading = styled.h1`\n   margin: 0;\n   font-weight: ${({ size, theme }) =>\n      size === 'h1' ? theme.fontWeight.bold : theme.fontWeight.regular};\n\n   @media ${({ theme }) => theme.breakpoints.min.mobile} {\n      font-size: ${({ size, theme }) => {\n         switch (size) {\n            case 'h2':\n               return theme.fontSize.l\n            case 'h3':\n            case 'h4':\n               return theme.fontSize.m\n            default:\n               return theme.fontSize.xl\n         }\n      }};\n   }\n   @media ${({ theme }) => theme.breakpoints.max.mobile} {\n      font-size: ${({ size, theme }) => {\n         switch (size) {\n            case 'h2':\n               return theme.fontSize.l\n            case 'h3':\n            case 'h4':\n               return theme.fontSize.m\n            default:\n               return '12vw'\n         }\n      }};\n   }\n   color: ${({ size, theme }) => size === 'h4' && theme.fontSecondary};\n   text-align: center;\n`\n\nconst Heading = ({ children, size, ...props }) => (\n   <StyledHeading as={size} size={size} {...props}>\n      {children}\n   </StyledHeading>\n)\n\nHeading.propTypes = {\n   children: PropTypes.string,\n   size: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4']),\n}\n\nHeading.defaultProps = {\n   children: '',\n   size: 'h1',\n}\n\nexport default Heading\n","import styled, { keyframes } from 'styled-components'\n\nconst PulseAvatar = keyframes`\n   from {\n      opacity: 1;\n      transform: scale(0);\n   }\n   to {\n      opacity: 0;\n      transform: scale(1);\n   }\n`\n\nconst PulseCircle = keyframes`\n   from {\n      opacity: 0;\n   }\n   to {\n      opacity: 1;\n   }\n`\n\nconst PreloadAbout = styled.div`\n   height: 450px;\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: space-between;\n\n   ::before {\n      content: '';\n      display: block;\n      width: 128px;\n      height: 128px;\n      border-radius: 50%;\n      background: ${({ theme }) => theme.transparent.white.mid};\n      animation: ${PulseAvatar} 1s ease-out infinite;\n   }\n\n   ::after {\n      content: '';\n      display: block;\n      width: 16px;\n      height: 16px;\n      border-radius: 50%;\n      background: ${({ theme }) => theme.transparent.white.soft};\n      animation: ${PulseCircle} 1s ease-out alternate-reverse infinite;\n   }\n`\n\nexport default PreloadAbout\n","import styled from 'styled-components'\n\nconst SVG = styled.img`\n   max-width: 100%;\n`\n\nexport default SVG\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst ButtonWrapper = styled.button`\n   height: 80px;\n   position: relative;\n   display: inline-flex;\n   margin: 0 auto;\n   text-decoration: none;\n   color: ${({ theme }) => theme.fontPrimary};\n   align-items: center;\n   justify-content: center;\n   padding: 0 35px;\n   border: none;\n   border-radius: 40px;\n   background: ${({ theme }) => theme.gradient.accent};\n   cursor: pointer;\n   user-select: none;\n   text-align: center;\n   max-width: 100%;\n\n   ::before {\n      content: '';\n      width: calc(100% - 8px);\n      height: calc(100% - 8px);\n      position: absolute;\n      top: 4px;\n      left: 4px;\n      background: ${({ theme }) => theme.bgMain};\n      border-radius: 38px;\n      z-index: 0;\n      will-change: transform;\n      transition: transform 0.2s ease-out;\n   }\n\n   &:hover::before {\n      transform: scale(0);\n   }\n`\n\nconst ButtonText = styled.span`\n   display: block;\n   @media ${({ theme }) => theme.breakpoints.min.mobile} {\n      font-size: ${({ theme }) => theme.fontSize.m};\n   }\n   @media ${({ theme }) => theme.breakpoints.max.mobile} {\n      font-size: 5vw;\n   }\n   color: ${({ theme }) => theme.fontPrimary};\n   position: relative;\n   z-index: 1;\n`\n\nconst IconWrapper = styled.span`\n   display: block;\n   position: relative;\n   z-index: 1;\n   margin-right: 10px;\n   width: 32px;\n   height: 32px;\n\n   .MuiSvgIcon-root {\n      color: ${({ theme }) => theme.fontPrimary} !important;\n      font-size: 32px !important;\n   }\n`\n\nconst Button = ({ children, icon: IconComponent, ...props }) => (\n   <ButtonWrapper {...props}>\n      {IconComponent && (\n         <IconWrapper>\n            <IconComponent />\n         </IconWrapper>\n      )}\n      <ButtonText>{children}</ButtonText>\n   </ButtonWrapper>\n)\n\nButton.propTypes = {\n   children: PropTypes.string.isRequired,\n   icon: PropTypes.func,\n}\n\nButton.defaultProps = {\n   icon: null,\n}\n\nexport default Button\n","import styled, { keyframes } from 'styled-components'\n\nconst Preload = keyframes`\n   from {\n      background-position: -1000px, 0;\n   }\n   to {\n      background-position: 1000px, 0;\n   }\n`\n\nconst PreloadImage = styled.div`\n   width: ${({ width }) => width || '100%'};\n   height: ${({ height }) => height || 'auto'};\n   background-color: ${({ theme }) => theme.bgBadge};\n   background-image: ${({ theme }) => theme.gradient.preload};\n   background-position: 0, 0;\n   background-size: 1000px 100%;\n   background-repeat: no-repeat;\n   animation: ${Preload} 1s ease-in-out infinite;\n`\n\nexport default PreloadImage\n","import PreloadImage from 'components/atoms/PreloadImage/PreloadImage'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst PreloadTitle = styled(PreloadImage)`\n   width: 70%;\n   max-width: 600px;\n   margin: 0 auto;\n   height: 44px;\n   border-radius: 22px;\n`\n\nconst IconsWrapper = styled.div`\n   display: flex;\n   justify-content: center;\n   flex-wrap: wrap;\n   margin-top: 20px;\n`\n\nconst PreloadIcon = styled(PreloadImage)`\n   width: 64px;\n   height: 64px;\n   margin: 20px 10px;\n   border-radius: 50%;\n   animation-delay: ${({ delay }) => delay}s;\n`\n\nconst getDelays = () => {\n   const result = []\n\n   for (let i = 0; i < 10; i++) {\n      result.push(i * 0.035 - 0.06)\n   }\n\n   return result\n}\n\nconst delays = getDelays()\n\nconst PreloadTechnologyStack = () => (\n   <div>\n      <PreloadTitle />\n      <IconsWrapper>\n         {delays.map((delay, i) => (\n            <PreloadIcon key={`tech-b-${i}`} delay={delay} />\n         ))}\n      </IconsWrapper>\n   </div>\n)\n\nexport default PreloadTechnologyStack\n","import Heading from 'components/atoms/Heading/Heading'\nimport Icon from 'components/atoms/Icon/Icon'\nimport { API_URL } from 'defines'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst Show = keyframes`\n   from {\n      opacity: 0;\n   }\n   to {\n      opacity: 1;\n   }\n`\n\nconst Wrapper = styled.section`\n   animation: ${Show} 0.5s ease-out;\n`\n\nconst IconsWrapper = styled.div`\n   display: flex;\n   justify-content: center;\n   flex-wrap: wrap;\n   margin-top: 20px;\n`\n\nconst IconLabel = styled.span`\n   position: absolute;\n   bottom: -5px;\n   left: 50%;\n   color: ${({ theme }) => theme.fontPrimary};\n   font-size: ${({ theme }) => theme.fontSize.xs};\n   will-change: transform;\n   transition: transform 0.2s ease-out, opacity 0.2s linear;\n   opacity: 0;\n   transform: translate(-50%, -16px);\n`\n\nconst IconWrapper = styled.div`\n   width: 84px;\n   height: 104px;\n   padding: 20px 10px;\n   position: relative;\n\n   &:hover ${IconLabel} {\n      opacity: 1;\n      transform: translate(-50%, 0);\n   }\n`\n\nconst TechnologyStack = ({ technologies, title, ...props }) => (\n   <Wrapper {...props}>\n      <Heading size=\"h2\">{title}</Heading>\n      <IconsWrapper>\n         {technologies &&\n            technologies.map(({ _id, image: { path }, name }) => (\n               <IconWrapper key={_id}>\n                  <Icon src={`${API_URL}${path}`} alt={name} />\n                  <IconLabel>{name}</IconLabel>\n               </IconWrapper>\n            ))}\n      </IconsWrapper>\n   </Wrapper>\n)\n\nTechnologyStack.propTypes = {\n   title: PropTypes.string.isRequired,\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ),\n}\n\nTechnologyStack.defaultProps = {\n   technologies: null,\n}\n\nexport default TechnologyStack\n","import styled from 'styled-components'\n\nconst CardWrapper = styled.div`\n   background: ${({ theme }) => theme.bgPrimary};\n   border-radius: ${({ theme }) => theme.radius.primary};\n   box-shadow: ${({ theme }) => theme.shadow.soft};\n`\n\nexport default CardWrapper\n","import styled, { css } from 'styled-components'\n\nconst Glow = styled.div`\n   background: ${({ theme }) => theme.gradient.glow};\n   width: ${({ bottom }) => (bottom ? 200 : 800)}px;\n   max-width: calc(100% - 50px);\n   height: ${({ bottom }) => (bottom ? 30 : 70)}px;\n   position: absolute;\n   left: 50%;\n   ${({ bottom }) =>\n      bottom\n         ? css`\n              bottom: 0;\n              transform: translateX(-50%) rotate(180deg);\n           `\n         : css`\n              top: 0;\n              transform: translateX(-50%);\n           `}\n`\n\nexport default Glow\n","import { fetchThumbnail as fetchThumbnailAction } from 'actions/api'\nimport PreloadImage from 'components/atoms/PreloadImage/PreloadImage'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport styled, { css, keyframes } from 'styled-components'\nimport { getThumbnail } from 'Utils'\n\nconst Show = keyframes`\n   from {\n      opacity: 0;\n   }\n\n   to {\n      opacity: 1;\n   }\n`\n\nconst Wrapper = styled.div`\n   position: relative;\n   background: ${({ theme }) => theme.bgBadge};\n   overflow: hidden;\n`\n\nconst IMG = styled.img`\n   object-fit: cover;\n   width: 100%;\n   height: 100%;\n   ${({ show }) =>\n      show &&\n      css`\n         animation: ${Show} 0.5s ease-out;\n      `}\n`\n\nconst StyledPreloadImage = styled(PreloadImage)`\n   width: 100%;\n   height: 100%;\n   position: absolute;\n   top: 0;\n   left: 0;\n   display: ${({ show }) => (show ? 'block' : 'none')};\n`\n\nclass Image extends React.Component {\n   state = {\n      loaded: false,\n   }\n\n   componentDidMount() {\n      const { fetchThumbnail, thumbnail, src } = this.props\n\n      if (thumbnail) {\n         const width = thumbnail[0] || 200\n         const height = thumbnail[1] || width\n\n         fetchThumbnail(src, width, height)\n      }\n   }\n\n   render() {\n      const { src, isLink, thumbnail, thumbnails, alt, ...props } = this.props\n      const { loaded } = this.state\n      const thumbnailSrc =\n         src && thumbnail && thumbnails ? getThumbnail(thumbnails, src, thumbnail) : null\n      return (\n         <Wrapper as={isLink ? 'a' : 'div'} {...props}>\n            {src && !thumbnail && (\n               <IMG\n                  src={src}\n                  alt={alt}\n                  onLoad={() => this.setState({ loaded: true })}\n                  show={loaded}\n               />\n            )}\n            {thumbnailSrc && (\n               <IMG\n                  src={thumbnailSrc}\n                  alt={alt}\n                  onLoad={() => this.setState({ loaded: true })}\n                  show={loaded}\n               />\n            )}\n            <StyledPreloadImage show={!loaded} />\n         </Wrapper>\n      )\n   }\n}\n\nImage.propTypes = {\n   src: PropTypes.string,\n   alt: PropTypes.string,\n   isLink: PropTypes.bool,\n   thumbnail: PropTypes.arrayOf(PropTypes.number),\n   fetchThumbnail: PropTypes.func.isRequired,\n   thumbnails: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         url: PropTypes.string,\n      }),\n   ),\n}\n\nImage.defaultProps = {\n   src: null,\n   alt: '',\n   isLink: false,\n   thumbnail: null,\n   thumbnails: null,\n}\n\nconst mapStateToProps = ({ api: { thumbnails } }) => ({ thumbnails })\n\nconst mapDispatchToProps = (dispatch) => ({\n   fetchThumbnail: (path, width, height) => dispatch(fetchThumbnailAction(path, width, height)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Image)\n","import CardWrapper from 'components/atoms/CardWrapper/CardWrapper'\nimport Glow from 'components/atoms/Glow/Glow'\nimport Text from 'components/atoms/Text/Text'\nimport Image from 'components/molecules/Image/Image'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled, { css, keyframes } from 'styled-components'\n\nconst ShowAvatar = keyframes`\n   from {\n      transform: translate(-50%, -50%) scale(0);\n   }\n   to {\n      transform: translate(-50%, -50%) scale(1);\n   }\n`\n\nconst ShowBackground = keyframes`\n   0% {\n      transform: scale(0, 0.1);\n   }\n   50% {\n      transform: scale(1, 0.1);\n   }\n   100% {\n      transform: scale(1, 1);\n   }\n`\n\nconst ShowLine = keyframes`\n   from {\n      transform: translateX(-50%) scaleX(0);\n   }\n   to {\n      transform: translateX(-50%) scaleX(1);\n   }\n`\n\nconst ShowGlow = keyframes`\n   from {\n      opacity: 0;\n   }\n   to {\n      opacity: 1;\n   }\n`\n\nconst ShowCircle = keyframes`\n   from {\n      transform: translate(-50%, 50%) scale(0);\n   }\n   to {\n      transform: translate(-50%, 50%) scale(1);\n   }\n`\n\nconst ShowText = keyframes`\n   from {\n      opacity: 0;\n      transform: translateY(-100%);\n   }\n   to {\n      opacity: 1;\n      transform: translateY(0);\n   }\n`\n\nconst Wrapper = styled.section`\n   margin-top: 66px;\n   position: relative;\n   width: 1000px;\n   max-width: 100%;\n`\n\nconst TextWrapper = styled.div`\n   overflow: hidden;\n`\n\nconst StyledText = styled(Text)`\n   @media ${({ theme }) => theme.breakpoints.min.mobile} {\n      padding: 75px 50px 50px 50px;\n   }\n   @media ${({ theme }) => theme.breakpoints.max.mobile} {\n      padding: 75px 30px 50px 30px;\n      font-size: ${({ theme }) => theme.fontSize.s};\n   }\n   position: relative;\n   z-index: 2;\n   animation: ${ShowText} 0.75s ${({ theme }) => theme.easing.primary} backwards;\n   animation-delay: ${({ delay }) => delay || 0}s;\n`\n\nconst Avatar = styled(Image)`\n   width: 132px;\n   height: 132px;\n   border-radius: 50%;\n   border: 2px solid ${({ theme }) => theme.accentColor};\n   box-shadow: ${({ theme }) => theme.shadow.glow};\n   position: absolute;\n   left: 50%;\n   top: 0;\n   transform: translate(-50%, -50%);\n   z-index: 5;\n   animation: ${ShowAvatar} 0.5s ease-out backwards;\n   animation-delay: ${({ delay }) => delay || 0}s;\n   will-change: transform;\n`\n\nconst Background = styled(CardWrapper)`\n   width: 100%;\n   height: 100%;\n   position: absolute;\n   top: 0;\n   left: 0;\n   z-index: 0;\n   will-change: transform;\n   transform-origin: top;\n   animation: ${ShowBackground} 1.5s ${({ theme }) => theme.easing.primary} backwards;\n   animation-delay: ${({ delay }) => delay || 0}s;\n`\n\nconst Line = styled.div`\n   position: absolute;\n   left: 50%;\n   transform: translateX(-50%);\n   will-change: transform;\n   border-radius: 1px;\n   height: 2px;\n   z-index: 4;\n   background: ${({ theme }) => theme.accentColor};\n   max-width: calc(100% - 50px);\n\n   ${({ bottom }) =>\n      bottom\n         ? css`\n              bottom: 0;\n              animation: ${ShowLine} 0.5s ease-out backwards;\n              width: 200px;\n           `\n         : css`\n              top: 0;\n              animation: ${ShowLine} 0.8s ease-out backwards;\n              width: 800px;\n           `}\n\n   animation-delay: ${({ delay }) => delay || 0}s;\n`\n\nconst StyledGlow = styled(Glow)`\n   animation: ${ShowGlow} 0.8s ${({ delay }) => delay || 0}s linear backwards;\n   z-index: 3;\n`\n\nconst Circle = styled.div`\n   position: absolute;\n   width: 16px;\n   height: 16px;\n   border-radius: 50%;\n   bottom: 0;\n   left: 50%;\n   z-index: 3;\n   transform: translate(-50%, 50%);\n   background: ${({ theme }) => theme.accentColor};\n   animation: ${ShowCircle} 0.3s 1.4s ease-out backwards;\n   box-shadow: ${({ theme }) => theme.shadow.glow};\n   animation-delay: ${({ delay }) => delay || 0}s;\n`\n\nconst About = ({ avatar, children, ...props }) => (\n   <Wrapper {...props}>\n      <Avatar src={avatar} thumbnail={[128]} alt=\"Marcin Kalinowski\" delay=\"0.1\" />\n      <Line delay=\"0.3\" />\n      <StyledGlow delay=\"0.8\" />\n      <TextWrapper>\n         <StyledText delay=\"1\">{children}</StyledText>\n      </TextWrapper>\n      <StyledGlow bottom delay=\"1.7\" />\n      <Line bottom delay=\"1.7\" />\n      <Circle delay=\"1.6\" />\n      <Background delay=\"0.2\" />\n   </Wrapper>\n)\n\nAbout.propTypes = {\n   avatar: PropTypes.string.isRequired,\n   children: PropTypes.string.isRequired,\n}\n\nexport default About\n","import PreloadImage from 'components/atoms/PreloadImage/PreloadImage'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Category = styled(PreloadImage)`\n   margin: 0 5px;\n   height: 20px;\n   border-radius: 10px;\n   width: ${({ width }) => width};\n   animation-delay: ${({ delay, globaldelay }) => (delay || 0) + globaldelay}s;\n`\n\nconst CategoriesWrapper = styled.div`\n   display: flex;\n   margin-top: 10px;\n   margin-bottom: 20px;\n`\n\nconst PreloadCategories = ({ delay: globalDelay, ...props }) => (\n   <CategoriesWrapper {...props}>\n      <Category width=\"80px\" globaldelay={globalDelay} />\n      <Category width=\"90px\" delay={0.06} globaldelay={globalDelay} />\n   </CategoriesWrapper>\n)\n\nPreloadCategories.propTypes = {\n   delay: PropTypes.number,\n}\n\nPreloadCategories.defaultProps = {\n   delay: 0,\n}\n\nexport default PreloadCategories\n","import CardWrapper from 'components/atoms/CardWrapper/CardWrapper'\nimport PreloadImage from 'components/atoms/PreloadImage/PreloadImage'\nimport PreloadCategories from 'components/molecules/PreloadCategories/PreloadCategories'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledCardWrapper = styled(CardWrapper)`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n`\n\nconst Container = styled.div`\n   padding: 0 20px;\n   width: 100%;\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n`\n\nconst Title = styled(PreloadImage)`\n   margin: 25px 0;\n   width: 70%;\n   height: 25px;\n   border-radius: 13px;\n   animation-delay: ${({ globaldelay }) => globaldelay}s;\n`\n\nconst DescriptionLine = styled(PreloadImage)`\n   width: ${({ width }) => width};\n   height: 15px;\n   border-radius: 8px;\n   margin-bottom: 10px;\n   animation-delay: ${({ globaldelay }) => globaldelay}s;\n`\n\nconst CardFooter = styled.div`\n   margin-top: auto;\n   height: 64px;\n   padding: 16px;\n   border-bottom-left-radius: ${({ theme }) => theme.radius.primary};\n   border-bottom-right-radius: ${({ theme }) => theme.radius.primary};\n   background: ${({ theme }) => theme.bgSecondary};\n   width: 100%;\n   display: flex;\n`\n\nconst Image = styled(PreloadImage)`\n   border-top-left-radius: ${({ theme }) => theme.radius.primary};\n   border-top-right-radius: ${({ theme }) => theme.radius.primary};\n   height: 200px;\n   flex-shrink: 0;\n   animation-delay: ${({ globaldelay }) => globaldelay}s;\n`\n\nconst Icon = styled(PreloadImage)`\n   width: 32px;\n   height: 32px;\n   margin-right: 16px;\n   border-radius: 50%;\n   animation-delay: ${({ delay, globaldelay }) => (delay || 0) + globaldelay}s;\n`\n\nconst getDelays = () => {\n   const result = []\n\n   for (let i = 0; i < 4; i++) {\n      result.push(i * 0.025)\n   }\n\n   return result\n}\n\nconst delays = getDelays()\n\nconst PreloadCard = ({ delay: globalDelay }) => (\n   <StyledCardWrapper>\n      <Image globaldelay={globalDelay} />\n      <Container>\n         <Title globaldelay={globalDelay} />\n         <DescriptionLine width=\"100%\" globaldelay={globalDelay} />\n         <DescriptionLine width=\"80%\" globaldelay={globalDelay} />\n         <DescriptionLine width=\"90%\" globaldelay={globalDelay} />\n         <DescriptionLine width=\"60%\" globaldelay={globalDelay} />\n         <PreloadCategories delay={globalDelay} />\n      </Container>\n      <CardFooter>\n         {delays.map((delay, i) => (\n            <Icon key={`tech-${i}`} delay={delay} globaldelay={globalDelay} />\n         ))}\n      </CardFooter>\n   </StyledCardWrapper>\n)\n\nPreloadCard.propTypes = {\n   delay: PropTypes.number,\n}\n\nPreloadCard.defaultProps = {\n   delay: 0,\n}\n\nexport default PreloadCard\n","import PreloadCard from 'components/organisms/PreloadCard/PreloadCard'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n   display: grid;\n   grid-template-columns: repeat(3, 1fr);\n   grid-gap: ${({ smallgap }) => (smallgap ? 20 : 40)}px;\n`\n\nconst PreloadCards = ({ smallgap, ...props }) => (\n   <Wrapper smallgap={smallgap} {...props}>\n      <PreloadCard />\n      <PreloadCard delay={0.2} />\n      <PreloadCard delay={0.4} />\n   </Wrapper>\n)\n\nPreloadCards.propTypes = {\n   smallgap: PropTypes.bool,\n}\n\nPreloadCards.defaultProps = {\n   smallgap: false,\n}\n\nexport default PreloadCards\n","import Divider from 'components/atoms/Divider/Divider'\nimport Heading from 'components/atoms/Heading/Heading'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n   display: flex;\n   flex-direction: column;\n   justify-content: space-between;\n   align-items: center;\n   min-height: calc(100vh - 104px);\n`\nconst Container = styled.div`\n   display: flex;\n   flex-direction: column;\n   justify-content: center;\n   align-items: center;\n   flex-grow: 2;\n`\n\nconst CenterPageTemplate = ({ children, title }) => (\n   <Wrapper>\n      <Divider size=\"large\" />\n      {title && <Heading size=\"h1\">{title}</Heading>}\n      <Container>{children}</Container>\n      <Divider size=\"large\" />\n   </Wrapper>\n)\n\nCenterPageTemplate.propTypes = {\n   children: PropTypes.element.isRequired,\n   title: PropTypes.string,\n}\n\nCenterPageTemplate.defaultProps = {\n   title: null,\n}\n\nexport default CenterPageTemplate\n","import styled from 'styled-components'\n\nconst Badge = styled.span`\n   display: inline-block;\n   height: 20px;\n   border-radius: 10px;\n   font-size: ${({ theme }) => theme.fontSize.xs};\n   background: ${({ theme }) => theme.bgBadge};\n   color: ${({ theme }) => theme.fontSecondary};\n   text-align: center;\n   line-height: 18px;\n   padding: 1px 10px;\n`\n\nexport default Badge\n","import Badge from 'components/atoms/Badge/Badge'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Wrapper = styled.div`\n   display: flex;\n   justify-content: center;\n   flex-wrap: wrap;\n   margin-bottom: 15px;\n   margin-top: -5px;\n\n   ${({ trim }) =>\n      trim &&\n      css`\n         height: 30px;\n         overflow: hidden;\n      `}\n`\n\nconst StyledBadge = styled(Badge)`\n   margin: 5px;\n`\n\nconst Categories = ({ categories, language, trim, ...props }) => (\n   <Wrapper trim={trim} {...props}>\n      {categories.map((category) => (\n         <StyledBadge key={category._id}>#{category[language]}</StyledBadge>\n      ))}\n   </Wrapper>\n)\n\nCategories.propTypes = {\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ).isRequired,\n   language: PropTypes.string.isRequired,\n   trim: PropTypes.bool,\n}\n\nCategories.defaultProps = {\n   trim: false,\n}\n\nexport default Categories\n","import Icon from 'components/atoms/Icon/Icon'\nimport { API_URL } from 'defines'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n   display: flex;\n   overflow: hidden;\n   background: ${({ theme }) => theme.bgSecondary};\n   border-bottom-left-radius: ${({ theme }) => theme.radius.primary};\n   border-bottom-right-radius: ${({ theme }) => theme.radius.primary};\n   padding: 16px 8px;\n   height: 64px;\n`\n\nconst StyledIcon = styled(Icon)`\n   flex-shrink: 0;\n   margin: 0 8px;\n`\n\nconst TechnologyStackSmall = ({ technologies, ...props }) => (\n   <Wrapper {...props}>\n      {technologies &&\n         technologies.map(({ _id, image: { path }, name }) => (\n            <StyledIcon key={_id} src={`${API_URL}${path}`} alt={name} title={name} small />\n         ))}\n   </Wrapper>\n)\n\nTechnologyStackSmall.propTypes = {\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ),\n}\n\nTechnologyStackSmall.defaultProps = {\n   technologies: null,\n}\n\nexport default TechnologyStackSmall\n","import CardWrapper from 'components/atoms/CardWrapper/CardWrapper'\nimport Heading from 'components/atoms/Heading/Heading'\nimport Text from 'components/atoms/Text/Text'\nimport Categories from 'components/molecules/Categories/Categories'\nimport Image from 'components/molecules/Image/Image'\nimport TechnologyStackSmall from 'components/molecules/TechnologyStackSmall/TechnologyStackSmall'\nimport { API_URL } from 'defines'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ReactHtmlParser from 'react-html-parser'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { getPhrase, removeHtmlTags } from 'Utils'\n\nconst Button = styled.div`\n   height: 64px;\n   width: 100%;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   background: ${({ theme }) => theme.gradient.accent};\n   font-size: ${({ theme }) => theme.fontSize.m};\n   color: ${({ theme }) => theme.fontPrimary};\n   position: absolute;\n   bottom: 0;\n   will-change: transform;\n   transform: translateY(100%);\n   transition: transform 0.3s ease-out;\n`\n\nconst StyledCardWrapper = styled(CardWrapper)`\n   color: ${({ theme }) => theme.fontPrimary};\n   display: flex;\n   flex-direction: column;\n   text-decoration: none;\n   overflow: hidden;\n   position: relative;\n\n   :hover ${Button} {\n      transform: translateY(0%);\n   }\n`\n\nconst StyledHeading = styled(Heading)`\n   padding: 10px 20px;\n   white-space: nowrap;\n   overflow: hidden;\n   text-overflow: ellipsis;\n`\n\nconst StyledText = styled(Text)`\n   padding: 0 20px;\n   margin: 10px 0 20px 0;\n`\n\nconst StyledTechnologyStack = styled(TechnologyStackSmall)`\n   margin-top: auto;\n`\n\nconst StyledImage = styled(Image)`\n   border-top-left-radius: ${({ theme }) => theme.radius.primary};\n   border-top-right-radius: ${({ theme }) => theme.radius.primary};\n   height: 200px;\n   margin-bottom: 10px;\n   flex-shrink: 0;\n`\n\nconst Card = ({ phrases, link, title, image, description, categories, technologies, language }) => (\n   <StyledCardWrapper as={Link} to={link}>\n      <StyledImage src={`${API_URL}${image}`} thumbnail={[300, 200]} alt={title} />\n      <StyledHeading size=\"h3\">{title}</StyledHeading>\n      <StyledText small lineclamp={4}>\n         {ReactHtmlParser(removeHtmlTags(description))}\n      </StyledText>\n      {categories && categories.length ? (\n         <Categories categories={categories} language={language} trim />\n      ) : null}\n      <StyledTechnologyStack technologies={technologies} />\n      <Button>{getPhrase(phrases, 'show', language)}</Button>\n   </StyledCardWrapper>\n)\n\nCard.propTypes = {\n   phrases: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   link: PropTypes.string.isRequired,\n   title: PropTypes.string.isRequired,\n   image: PropTypes.string.isRequired,\n   description: PropTypes.string,\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ).isRequired,\n   language: PropTypes.string.isRequired,\n}\n\nCard.defaultProps = {\n   description: null,\n   categories: [],\n   phrases: null,\n}\n\nconst mapStateToProps = ({ api: { phrases }, app: { language } }) => ({ phrases, language })\n\nexport default connect(mapStateToProps)(Card)\n","import ArrowButton from 'components/molecules/ArrowButton/ArrowButton'\nimport Card from 'components/organisms/Card/Card'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport Slider from 'react-slick'\nimport styled, { css } from 'styled-components'\nimport { getDataByIds } from 'Utils'\n\nconst Wrapper = styled.section`\n   overflow: hidden;\n   position: relative;\n\n   @media ${({ theme }) => theme.breakpoints.min.tablet} {\n      padding: 20px 104px;\n   }\n   @media ${({ theme }) => theme.breakpoints.max.tablet} {\n      padding: 20px;\n   }\n`\n\nconst StyledSlider = styled(Slider)`\n   max-width: 1000px;\n   margin: 0 auto;\n`\n\nconst SliderShadow = styled.div`\n   @media ${({ theme }) => theme.breakpoints.min.tablet} {\n      width: 240px;\n   }\n   @media ${({ theme }) => theme.breakpoints.max.tablet} {\n      width: 40px;\n   }\n   height: 100%;\n   background: ${({ theme }) => theme.bgMain};\n   mask-image: ${({ theme }) => theme.gradient.slider};\n   position: absolute;\n   ${({ prev }) =>\n      prev\n         ? css`\n              left: 0;\n              transform: scaleX(-1);\n           `\n         : css`\n              right: 0;\n           `}\n   top: 0;\n   z-index: 1;\n   pointer-events: none;\n`\n\nconst StyledArrowButton = styled(ArrowButton)`\n   position: absolute;\n   top: 50%;\n   transform: translateY(-50%);\n   z-index: 2;\n   display: flex !important;\n   will-change: transform;\n   transition: transform 0.3s ease-out;\n   transform-origin: center;\n\n   ${({ prev }) =>\n      prev\n         ? css`\n              @media ${({ theme }) => theme.breakpoints.min.tablet} {\n                 left: 40px;\n              }\n              @media ${({ theme }) => theme.breakpoints.max.tablet} {\n                 left: 20px;\n              }\n           `\n         : css`\n              @media ${({ theme }) => theme.breakpoints.min.tablet} {\n                 right: 40px;\n              }\n              @media ${({ theme }) => theme.breakpoints.max.tablet} {\n                 right: 20px;\n              }\n           `}\n\n   &.slick-disabled {\n      transform: translateY(-50%) scale(0);\n      pointer-events: none;\n   }\n`\n\nconst Slide = styled.div`\n   padding: 0 10px;\n`\n\nconst RealizationsSliderTemplate = ({ realizations, categories, technologies, language }) => {\n   const settings = {\n      dots: false,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 3,\n      slidesToScroll: 3,\n      nextArrow: <StyledArrowButton />,\n      prevArrow: <StyledArrowButton prev />,\n      responsive: [\n         {\n            breakpoint: 970,\n            settings: {\n               slidesToShow: 2,\n               slidesToScroll: 2,\n            },\n         },\n         {\n            breakpoint: 576,\n            settings: {\n               slidesToShow: 1,\n               slidesToScroll: 1,\n            },\n         },\n      ],\n   }\n\n   return (\n      <Wrapper>\n         <SliderShadow prev />\n         <StyledSlider {...settings}>\n            {realizations.map((realization) => {\n               const {\n                  _id,\n                  thumbnail: { path },\n                  categories: refCategories,\n                  technologies: refTechnologies,\n               } = realization\n\n               return (\n                  <Slide key={_id}>\n                     <Card\n                        link={`/realizations/${_id}`}\n                        title={realization[`${language}_title`]}\n                        image={path}\n                        description={realization[`${language}_description`]}\n                        categories={\n                           refCategories.length ? getDataByIds(refCategories, categories) : []\n                        }\n                        technologies={\n                           refTechnologies.length ? getDataByIds(refTechnologies, technologies) : []\n                        }\n                     />\n                  </Slide>\n               )\n            })}\n         </StyledSlider>\n         <SliderShadow />\n      </Wrapper>\n   )\n}\n\nRealizationsSliderTemplate.propTypes = {\n   realizations: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         pl_title: PropTypes.string,\n         en_title: PropTypes.string,\n         thumbnail: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n         pl_desctiption: PropTypes.string,\n         en_desctiption: PropTypes.string,\n         links: PropTypes.arrayOf(\n            PropTypes.shape({\n               field: PropTypes.shape({\n                  label: PropTypes.string,\n               }),\n               value: PropTypes.string,\n            }),\n         ),\n      }),\n   ).isRequired,\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ).isRequired,\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ).isRequired,\n   language: PropTypes.string.isRequired,\n}\n\nexport default RealizationsSliderTemplate\n","import { fetchSingleton } from 'actions/api'\nimport bgHex from 'assets/backgrounds/hex.png'\nimport bgHome from 'assets/backgrounds/home.png'\nimport mailIcon from 'assets/mail.svg'\nimport BackgroundSection from 'components/atoms/BackgroundSection/BackgroundSection'\nimport Container from 'components/atoms/Container/Container'\nimport Divider from 'components/atoms/Divider/Divider'\nimport Heading from 'components/atoms/Heading/Heading'\nimport PreloadAbout from 'components/atoms/PreloadAbout/PreloadAbout'\nimport SVG from 'components/atoms/SVG/SVG'\nimport Button from 'components/molecules/Button/Button'\nimport PreloadTechnologyStack from 'components/molecules/PreloadTechnologyStack/PreloadTechnologyStack'\nimport TechnologyStack from 'components/molecules/TechnologyStack/TechnologyStack'\nimport About from 'components/organisms/About/About'\nimport PreloadCards from 'components/organisms/PreloadCard/PreloadCards'\nimport { API_URL } from 'defines'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport CenterPageTemplate from 'templates/CenterPageTemplate/CenterPageTemplate'\nimport RealizationsSliderTemplate from 'templates/RealizationsSliderTemplate/RealizationsSliderTemplate'\nimport { getDataByIds, getPhrase } from 'Utils'\n\nconst sortRealizations = (a, b) => {\n   if (a._created > b._created) return -1\n   if (a._created < b._created) return 1\n   return 0\n}\n\nclass Home extends React.Component {\n   componentDidMount() {\n      const { fetchAbout } = this.props\n      fetchAbout()\n   }\n\n   render() {\n      const { phrases, about, realizations, categories, technologies, language } = this.props\n\n      return (\n         <>\n            <BackgroundSection background={bgHome}>\n               <Container>\n                  <Divider size=\"large\" mobile />\n                  <Heading size=\"h1\">Marcin Kalinowski</Heading>\n                  <Divider size=\"small\" />\n                  <Heading size=\"h4\">Front-end developer / UI designer</Heading>\n                  <Divider size=\"medium\" />\n                  {about ? (\n                     <About avatar={`${API_URL}${about.avatar.path}`}>{about[language]}</About>\n                  ) : (\n                     <PreloadAbout />\n                  )}\n                  <Divider size=\"large\" />\n                  {technologies && about && phrases ? (\n                     <TechnologyStack\n                        title={getPhrase(phrases, 'technologies-i-work-with', language)}\n                        technologies={getDataByIds(about.technologies, technologies)}\n                     />\n                  ) : (\n                     <PreloadTechnologyStack />\n                  )}\n               </Container>\n            </BackgroundSection>\n\n            <section>\n               <Container>\n                  <Divider size=\"large\" />\n                  <Heading size=\"h1\">{getPhrase(phrases, 'realizations', language)}</Heading>\n                  <Divider size=\"large\" />\n               </Container>\n\n               {realizations && categories && technologies ? (\n                  <RealizationsSliderTemplate\n                     realizations={realizations.sort(sortRealizations).slice(0, 9)}\n                     categories={categories}\n                     technologies={technologies}\n                     language={language}\n                  />\n               ) : (\n                  <Container>\n                     <PreloadCards smallgap />\n                  </Container>\n               )}\n\n               <Container>\n                  <Divider size=\"large\" />\n                  <Button as={Link} to=\"/realizations\">\n                     {getPhrase(phrases, 'show-more', language)}\n                  </Button>\n               </Container>\n            </section>\n\n            <BackgroundSection background={bgHex} align=\"bottom\">\n               <CenterPageTemplate title={getPhrase(phrases, 'contact', language)}>\n                  <Container>\n                     <SVG src={mailIcon} alt=\"mail\" />\n                     <Divider size=\"medium\" />\n                     <Button as=\"a\" href=\"mailto: Marcin36K@outlook.com\">\n                        Marcin36K@outlook.com\n                     </Button>\n                  </Container>\n               </CenterPageTemplate>\n            </BackgroundSection>\n         </>\n      )\n   }\n}\n\nHome.propTypes = {\n   phrases: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   about: PropTypes.shape({\n      avatar: PropTypes.shape({\n         path: PropTypes.string,\n      }),\n      pl: PropTypes.string,\n      en: PropTypes.string,\n      technologies: PropTypes.arrayOf(\n         PropTypes.shape({\n            _id: PropTypes.string,\n            display: PropTypes.string,\n         }),\n      ),\n   }),\n   realizations: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         pl_title: PropTypes.string,\n         en_title: PropTypes.string,\n         thumbnail: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n         pl_desctiption: PropTypes.string,\n         en_desctiption: PropTypes.string,\n         links: PropTypes.arrayOf(\n            PropTypes.shape({\n               field: PropTypes.shape({\n                  label: PropTypes.string,\n               }),\n               value: PropTypes.string,\n            }),\n         ),\n         _created: PropTypes.number,\n      }),\n   ),\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ),\n   language: PropTypes.string.isRequired,\n   fetchAbout: PropTypes.func.isRequired,\n}\n\nHome.defaultProps = {\n   about: null,\n   realizations: null,\n   categories: null,\n   technologies: null,\n   phrases: null,\n}\n\nconst mapStateToProps = ({\n   api: { about, realizations, categories, technologies, phrases },\n   app: { language },\n}) => ({\n   about,\n   realizations,\n   categories,\n   technologies,\n   language,\n   phrases,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n   fetchAbout: () => dispatch(fetchSingleton('about')),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","export default __webpack_public_path__ + \"static/media/realizations.3da42143.png\";","import PreloadImage from 'components/atoms/PreloadImage/PreloadImage'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n   max-width: 1000px;\n   width: 100%;\n   margin: 0 auto;\n`\n\nconst PreloadLine = styled(PreloadImage)`\n   height: 20px;\n   width: ${({ width }) => width};\n   margin: 16px auto;\n   border-radius: 10px;\n\n   :first-child {\n      margin-top: 8px;\n   }\n   :last-child {\n      margin-bottom: 8px;\n   }\n`\n\nconst PreloadText = () => (\n   <Wrapper>\n      <PreloadLine width=\"100%\" />\n      <PreloadLine width=\"80%\" />\n      <PreloadLine width=\"90%\" />\n      <PreloadLine width=\"60%\" />\n   </Wrapper>\n)\n\nexport default PreloadText\n","export default __webpack_public_path__ + \"static/media/404.a54c5f2a.svg\";","import image404 from 'assets/404.svg'\nimport bgHex from 'assets/backgrounds/hex.png'\nimport BackgroundSection from 'components/atoms/BackgroundSection/BackgroundSection'\nimport Divider from 'components/atoms/Divider/Divider'\nimport SVG from 'components/atoms/SVG/SVG'\nimport Text from 'components/atoms/Text/Text'\nimport Button from 'components/molecules/Button/Button'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport CenterPageTemplate from 'templates/CenterPageTemplate/CenterPageTemplate'\nimport { getPhrase } from 'Utils'\n\nconst Page404 = ({ phrases, language }) => (\n   <BackgroundSection background={bgHex} align=\"bottom\">\n      <CenterPageTemplate>\n         <>\n            <SVG src={image404} alt=\"404\" />\n            <Divider size=\"medium\" />\n            <Text>{getPhrase(phrases, '404-info', language)}</Text>\n            <Divider size=\"medium\" />\n            <Button as={Link} to=\"/\">\n               {getPhrase(phrases, 'back-to-homepage', language)}\n            </Button>\n         </>\n      </CenterPageTemplate>\n   </BackgroundSection>\n)\n\nPage404.propTypes = {\n   phrases: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   language: PropTypes.string.isRequired,\n}\n\nPage404.defaultProps = {\n   phrases: null,\n}\n\nconst mapStateToProps = ({ api: { phrases }, app: { language } }) => ({ phrases, language })\n\nexport default connect(mapStateToProps)(Page404)\n","import { fetchCollection } from 'actions/api'\nimport bgRealizations from 'assets/backgrounds/realizations.png'\nimport BackgroundSection from 'components/atoms/BackgroundSection/BackgroundSection'\nimport Container from 'components/atoms/Container/Container'\nimport Divider from 'components/atoms/Divider/Divider'\nimport Heading from 'components/atoms/Heading/Heading'\nimport Text from 'components/atoms/Text/Text'\nimport PreloadText from 'components/molecules/PreloadText/PreloadText'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport reactHtmlParser from 'react-html-parser'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport Page404 from 'views/Page404'\n\nclass InfoPage extends React.Component {\n   componentDidMount() {\n      const { fetchPages } = this.props\n      fetchPages()\n   }\n\n   render() {\n      const {\n         pages,\n         language,\n         match: {\n            params: { page: pageSlug },\n         },\n      } = this.props\n\n      if (pages) {\n         const page = pages.find((x) => x.name_slug === pageSlug)\n\n         if (!page) {\n            return <Page404 />\n         }\n\n         return (\n            <BackgroundSection background={bgRealizations}>\n               <Container>\n                  <Divider size=\"large\" mobile />\n                  <Heading size=\"h1\">{page[`${language}_title`]}</Heading>\n                  <Divider size=\"medium\" />\n                  <Text>{reactHtmlParser(page[`${language}_description`])}</Text>\n                  <Divider size=\"large\" />\n               </Container>\n            </BackgroundSection>\n         )\n      }\n\n      return (\n         <Container>\n            <Divider size=\"large\" />\n            <PreloadText />\n            <Divider size=\"large\" />\n         </Container>\n      )\n   }\n}\n\nInfoPage.propTypes = {\n   pages: PropTypes.arrayOf(\n      PropTypes.shape({\n         name_slug: PropTypes.string,\n         pl_title: PropTypes.string,\n         en_title: PropTypes.string,\n         pl_description: PropTypes.string,\n         en_description: PropTypes.string,\n      }),\n   ),\n   language: PropTypes.string.isRequired,\n   fetchPages: PropTypes.func.isRequired,\n   match: PropTypes.shape({\n      params: PropTypes.shape({\n         page: PropTypes.string,\n      }),\n   }).isRequired,\n}\n\nInfoPage.defaultProps = {\n   pages: null,\n}\n\nconst mapStateToProps = ({ api: { pages }, app: { language } }) => ({ pages, language })\n\nconst mapDispatchToProps = (dispatch) => ({\n   fetchPages: () => dispatch(fetchCollection('pages')),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(InfoPage))\n","import Divider from 'components/atoms/Divider/Divider'\nimport PreloadImage from 'components/atoms/PreloadImage/PreloadImage'\nimport PreloadCategories from 'components/molecules/PreloadCategories/PreloadCategories'\nimport PreloadTechnologyStack from 'components/molecules/PreloadTechnologyStack/PreloadTechnologyStack'\nimport PreloadText from 'components/molecules/PreloadText/PreloadText'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: stretch;\n   max-width: 1000px;\n`\n\nconst PreloadHeader = styled.div`\n   position: relative;\n   width: 100%;\n`\n\nconst PreloadHeaderImage = styled(PreloadImage)`\n   height: 350px;\n   border-bottom-left-radius: ${({ theme }) => theme.radius.primary};\n   border-bottom-right-radius: ${({ theme }) => theme.radius.primary};\n   box-shadow: ${({ theme }) => theme.shadow.soft};\n`\n\nconst PreloadHeaderTitle = styled.div`\n   width: 200px;\n   height: 64px;\n   border-radius: 32px;\n   box-shadow: ${({ theme }) => theme.shadow.soft};\n   background: ${({ theme }) => theme.bgPrimary};\n   position: relative;\n   top: -32px;\n   left: 50%;\n   transform: translateX(-50%);\n`\n\nconst PreloadButton = styled(PreloadImage)`\n   height: 80px;\n   width: 200px;\n   border-radius: 40px;\n`\n\nconst PreloadRealization = () => (\n   <Wrapper>\n      <PreloadHeader>\n         <PreloadHeaderImage />\n         <PreloadHeaderTitle />\n      </PreloadHeader>\n      <PreloadCategories delay={0.1} />\n      <PreloadText />\n      <Divider size=\"medium\" />\n      <PreloadTechnologyStack />\n      <Divider size=\"medium\" />\n      <PreloadButton />\n      <Divider size=\"large\" />\n   </Wrapper>\n)\n\nexport default PreloadRealization\n","export default __webpack_public_path__ + \"static/media/figma.54717305.svg\";","import Heading from 'components/atoms/Heading/Heading'\nimport Image from 'components/molecules/Image/Image'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.header`\n   width: 100%;\n   max-width: 1000px;\n   text-align: center;\n`\n\nconst StyledImage = styled(Image)`\n   width: 100%;\n   height: 350px;\n   box-shadow: ${({ theme }) => theme.shadow.soft};\n   border-bottom-left-radius: ${({ theme }) => theme.radius.primary};\n   border-bottom-right-radius: ${({ theme }) => theme.radius.primary};\n`\n\nconst HeadingWrapper = styled.div`\n   min-height: 64px;\n   border-radius: 32px;\n   box-shadow: ${({ theme }) => theme.shadow.soft};\n   display: inline-flex;\n   align-items: center;\n   justify-content: center;\n   max-width: 100%;\n   padding: 0 32px;\n   background: ${({ theme }) => theme.bgPrimary};\n   position: relative;\n   top: -32px;\n`\n\nconst ProjectHeader = ({ image, title }) => (\n   <Wrapper>\n      <StyledImage src={image} thumbnail={[800, 350]} alt={title} />\n      <HeadingWrapper>\n         <Heading size=\"h3\">{title}</Heading>\n      </HeadingWrapper>\n   </Wrapper>\n)\n\nProjectHeader.propTypes = {\n   image: PropTypes.string,\n   title: PropTypes.string,\n}\n\nProjectHeader.defaultProps = {\n   image: null,\n   title: '',\n}\n\nexport default ProjectHeader\n","import Image from 'components/molecules/Image/Image'\nimport { API_URL } from 'defines'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { SRLWrapper } from 'simple-react-lightbox'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.section`\n   display: grid;\n   grid-template-columns: repeat(auto-fill, minmax(198px, auto));\n   overflow: hidden;\n   border-radius: ${({ theme }) => theme.radius.primary};\n   grid-gap: 5px;\n   background: ${({ theme }) => theme.bgPrimary};\n   border: 5px solid ${({ theme }) => theme.bgPrimary};\n`\n\nconst StyledImage = styled(Image)`\n   display: block;\n   position: absolute;\n   width: 100%;\n   height: 100%;\n   top: 0;\n   left: 0;\n   will-change: transform;\n   transition: transform 2s ease-out;\n`\n\nconst ImageWrapper = styled.div`\n   padding-top: 100%;\n   position: relative;\n   display: block;\n   overflow: hidden;\n\n   :hover ${StyledImage} {\n      transform: scale(1.1);\n   }\n`\n\nconst GalleryTemplate = ({ gallery }) => (\n   <SRLWrapper>\n      <Wrapper>\n         {gallery.map(({ meta: { title, asset }, path }) => (\n            <ImageWrapper key={asset}>\n               <StyledImage\n                  alt={title}\n                  isLink\n                  href={`${API_URL}${path}`}\n                  src={`${API_URL}${path}`}\n                  thumbnail={[400]}\n               />\n            </ImageWrapper>\n         ))}\n      </Wrapper>\n   </SRLWrapper>\n)\n\nGalleryTemplate.propTypes = {\n   gallery: PropTypes.arrayOf(\n      PropTypes.shape({\n         meta: PropTypes.shape({\n            title: PropTypes.string,\n            asset: PropTypes.string,\n         }),\n         path: PropTypes.string,\n      }),\n   ).isRequired,\n}\n\nexport default GalleryTemplate\n","import GetAppIcon from '@material-ui/icons/GetApp'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkIcon from '@material-ui/icons/Link'\nimport WebAssetIcon from '@material-ui/icons/WebAsset'\nimport FigmaIconURL from 'assets/icons/figma.svg'\nimport Divider from 'components/atoms/Divider/Divider'\nimport Icon from 'components/atoms/Icon/Icon'\nimport Text from 'components/atoms/Text/Text'\nimport Button from 'components/molecules/Button/Button'\nimport Categories from 'components/molecules/Categories/Categories'\nimport TechnologyStack from 'components/molecules/TechnologyStack/TechnologyStack'\nimport ProjectHeader from 'components/organisms/ProjectHeader/ProjectHeader'\nimport { API_URL } from 'defines'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ReactHtmlParser from 'react-html-parser'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport GalleryTemplate from 'templates/GalleryTemplate/GalleryTemplate'\nimport { getPhrase } from 'Utils'\n\nconst FigmaIcon = () => <Icon src={FigmaIconURL} small />\n\nconst Wrapper = styled.div`\n   max-width: 1000px;\n`\n\nconst ButtonsWrapper = styled.div`\n   display: flex;\n   flex-wrap: wrap;\n   justify-content: center;\n`\n\nconst ButtonContainer = styled.div`\n   display: inline-block;\n   margin: 20px;\n`\n\nconst RealizationTemplate = ({ phrases, realization, categories, technologies, language }) => (\n   <Wrapper>\n      <ProjectHeader\n         image={`${API_URL}${realization.thumbnail.path}`}\n         title={realization[`${language}_title`]}\n      />\n      <Categories categories={categories} language={language} />\n      <Text>{ReactHtmlParser(realization[`${language}_description`])}</Text>\n      {technologies.length ? (\n         <>\n            <Divider size=\"medium\" />\n            <TechnologyStack\n               title={getPhrase(phrases, 'technology-used', language)}\n               technologies={technologies}\n            />\n         </>\n      ) : null}\n      <Divider size=\"medium\" />\n      <ButtonsWrapper>\n         {realization.links.map(({ value, field: { label } }) => {\n            switch (label) {\n               case 'app':\n                  return (\n                     <ButtonContainer>\n                        <Button\n                           icon={WebAssetIcon}\n                           as=\"a\"\n                           href={value}\n                           target=\"_balnk\"\n                           rel=\"noopener noreferrer\"\n                        >\n                           {getPhrase(phrases, 'app', language)}\n                        </Button>\n                     </ButtonContainer>\n                  )\n               case 'demo':\n                  return (\n                     <ButtonContainer>\n                        <Button\n                           icon={LinkIcon}\n                           as=\"a\"\n                           href={value}\n                           target=\"_balnk\"\n                           rel=\"noopener noreferrer\"\n                        >\n                           {getPhrase(phrases, 'demo', language)}\n                        </Button>\n                     </ButtonContainer>\n                  )\n               case 'download':\n                  return (\n                     <ButtonContainer>\n                        <Button\n                           icon={GetAppIcon}\n                           as=\"a\"\n                           href={value}\n                           target=\"_balnk\"\n                           rel=\"noopener noreferrer\"\n                        >\n                           {getPhrase(phrases, 'download', language)}\n                        </Button>\n                     </ButtonContainer>\n                  )\n               case 'github':\n                  return (\n                     <ButtonContainer>\n                        <Button\n                           icon={GitHubIcon}\n                           as=\"a\"\n                           href={value}\n                           target=\"_balnk\"\n                           rel=\"noopener noreferrer\"\n                        >\n                           {getPhrase(phrases, 'github', language)}\n                        </Button>\n                     </ButtonContainer>\n                  )\n               case 'figma':\n                  return (\n                     <ButtonContainer>\n                        <Button\n                           icon={FigmaIcon}\n                           as=\"a\"\n                           href={value}\n                           target=\"_balnk\"\n                           rel=\"noopener noreferrer\"\n                        >\n                           {getPhrase(phrases, 'figma', language)}\n                        </Button>\n                     </ButtonContainer>\n                  )\n               default:\n                  return null\n            }\n         })}\n      </ButtonsWrapper>\n      {realization.gallery && realization.gallery.length && (\n         <>\n            <Divider size=\"large\" />\n            <GalleryTemplate gallery={realization.gallery} />\n         </>\n      )}\n      <Divider size=\"large\" />\n   </Wrapper>\n)\n\nRealizationTemplate.propTypes = {\n   phrases: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   realization: PropTypes.shape({\n      _id: PropTypes.string,\n      pl_title: PropTypes.string,\n      en_title: PropTypes.string,\n      thumbnail: PropTypes.shape({\n         path: PropTypes.string,\n      }),\n      pl_desctiption: PropTypes.string,\n      en_desctiption: PropTypes.string,\n      links: PropTypes.arrayOf(\n         PropTypes.shape({\n            field: PropTypes.shape({\n               label: PropTypes.string,\n            }),\n            value: PropTypes.string,\n         }),\n      ),\n      gallery: PropTypes.arrayOf(\n         PropTypes.shape({\n            meta: PropTypes.shape({\n               title: PropTypes.string,\n               asset: PropTypes.string,\n            }),\n            path: PropTypes.string,\n         }),\n      ),\n      _created: PropTypes.number,\n   }).isRequired,\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ).isRequired,\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ).isRequired,\n   language: PropTypes.string.isRequired,\n}\n\nRealizationTemplate.defaultProps = {\n   phrases: null,\n}\n\nconst mapStateToProps = ({ api: { phrases } }) => ({ phrases })\n\nexport default connect(mapStateToProps)(RealizationTemplate)\n","import bgHome from 'assets/backgrounds/home.png'\nimport BackgroundSection from 'components/atoms/BackgroundSection/BackgroundSection'\nimport Container from 'components/atoms/Container/Container'\nimport PreloadRealization from 'components/organisms/PreloadRealization/PreloadRealization'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport RealizationTemplate from 'templates/RealizationTemplate/RealizationTemplate'\nimport { getDataByIds } from 'Utils'\nimport Page404 from 'views/Page404'\n\nconst Realization = ({\n   match: {\n      params: { id },\n   },\n   phrases,\n   realizations,\n   categories,\n   technologies,\n   language,\n}) => {\n   if (phrases && realizations && categories && technologies) {\n      const project = realizations.find((x) => x._id === id)\n\n      if (!project) {\n         return <Page404 />\n      }\n\n      const projectCategories = getDataByIds(project.categories, categories)\n      const projectTechnologies = getDataByIds(project.technologies, technologies)\n\n      return (\n         <BackgroundSection background={bgHome}>\n            <Container small>\n               <RealizationTemplate\n                  realization={project}\n                  categories={projectCategories}\n                  technologies={projectTechnologies}\n                  language={language}\n               />\n            </Container>\n         </BackgroundSection>\n      )\n   }\n\n   return (\n      <BackgroundSection background={bgHome}>\n         <Container>\n            <PreloadRealization />\n         </Container>\n      </BackgroundSection>\n   )\n}\n\nRealization.propTypes = {\n   match: PropTypes.shape({\n      params: PropTypes.shape({\n         id: PropTypes.string,\n      }),\n   }).isRequired,\n   phrases: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   realizations: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         pl_title: PropTypes.string,\n         en_title: PropTypes.string,\n         thumbnail: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n         pl_desctiption: PropTypes.string,\n         en_desctiption: PropTypes.string,\n         links: PropTypes.arrayOf(\n            PropTypes.shape({\n               field: PropTypes.shape({\n                  label: PropTypes.string,\n               }),\n               value: PropTypes.string,\n            }),\n         ),\n         _created: PropTypes.number,\n      }),\n   ),\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ),\n   language: PropTypes.string.isRequired,\n}\n\nRealization.defaultProps = {\n   phrases: null,\n   realizations: null,\n   categories: null,\n   technologies: null,\n}\n\nconst mapStateToProps = ({\n   api: { phrases, realizations, categories, technologies },\n   app: { language },\n}) => ({ phrases, realizations, categories, technologies, language })\n\nexport default connect(mapStateToProps)(withRouter(Realization))\n","import ArrowForwardIosRoundedIcon from '@material-ui/icons/ArrowForwardIosRounded'\nimport CardWrapper from 'components/atoms/CardWrapper/CardWrapper'\nimport PropTypes from 'prop-types'\nimport React, { createRef } from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst Show = keyframes`\n   from {\n      opacity: 0;\n      transform: translateY(-20px);\n   }\n   to {\n      opacity: 1;\n      transform: translateY(0);\n   }\n`\n\nconst Wrapper = styled.div`\n   position: relative;\n   display: inline-block;\n   user-select: none;\n   z-index: ${({ isFocus }) => (isFocus ? 1 : 0)};\n`\n\nconst IconWrapper = styled.button`\n   width: 32px;\n   height: 32px;\n   border: none;\n   border-radius: 50%;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   background-color: transparent;\n   position: relative;\n   margin-left: 4px;\n   margin-right: -8px;\n   cursor: pointer;\n\n   ::before {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: ${({ theme }) => theme.transparent.white.soft};\n      opacity: 0;\n      transition: opacity 0.2s linear;\n      border-radius: 50%;\n   }\n\n   &:hover::before {\n      opacity: 1;\n   }\n`\n\nconst StyledIcon = styled(ArrowForwardIosRoundedIcon)`\n   color: ${({ theme }) => theme.fontPrimary} !important;\n   font-size: 16px !important;\n   transform: rotate(${({ direction }) => (direction === 'asc' ? 90 : -90)}deg);\n`\n\nconst Select = styled.select`\n   display: none;\n`\n\nconst Button = styled.div`\n   border: none;\n   height: 48px;\n   color: ${({ theme }) => theme.fontPrimary};\n   background: ${({ theme, active }) => (active ? theme.bgBadge : theme.bgSecondary)};\n   border-radius: 24px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   text-align: center;\n   font-size: ${({ theme }) => theme.fontSize.s};\n   padding: 0 24px;\n   cursor: pointer;\n`\n\nconst DropdownList = styled(CardWrapper)`\n   padding: 20px 0;\n   display: inline-flex;\n   flex-direction: column;\n   position: absolute;\n   top: 56px;\n   left: 0;\n   min-width: 200px;\n   animation: ${Show} 0.2s ease-out;\n   max-height: 320px;\n   overflow-y: auto;\n\n   ::-webkit-scrollbar {\n      width: 10px;\n   }\n\n   ::-webkit-scrollbar-thumb {\n      background: ${({ theme }) => theme.transparent.white.soft};\n      border-radius: 5px;\n   }\n`\n\nconst Option = styled.button`\n   font-size: ${({ theme }) => theme.fontSize.s};\n   padding: 10px 20px;\n   cursor: pointer;\n   border: none;\n   background: transparent;\n   color: ${({ theme }) => theme.fontPrimary};\n   text-align: left;\n   position: relative;\n\n   ::before {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: ${({ theme }) => theme.transparent.white.soft};\n      opacity: 0;\n      transition: opacity 0.2s linear;\n      border-radius: ${({ theme }) => theme.radiusSecondary};\n   }\n\n   &:hover::before {\n      opacity: 1;\n   }\n`\n\nconst Value = styled.span`\n   text-transform: lowercase;\n`\n\nclass Dropdown extends React.Component {\n   constructor(props) {\n      super(props)\n\n      this.Select = createRef()\n\n      const { sort } = this.props\n\n      this.state = {\n         isOpen: false,\n         value: null,\n         sortDirection: sort,\n      }\n   }\n\n   componentDidMount() {\n      const { defaultvalue, options } = this.props\n      try {\n         const option = options.find((x) => x.value === defaultvalue)\n         this.setState({ value: option.value })\n      } catch (e) {\n         this.setState({ value: e.message })\n      }\n   }\n\n   handleFocusDropdown() {\n      this.setState({\n         isOpen: true,\n      })\n   }\n\n   handleBlurDropdown(e) {\n      if (!e.currentTarget.contains(e.relatedTarget)) {\n         this.setState({\n            isOpen: false,\n         })\n      }\n   }\n\n   handleClickOption(e, selectedValue) {\n      this.Select.current.value = selectedValue\n      const { options, setValueCallback } = this.props\n      const option = options.find((x) => x.value === selectedValue)\n      this.setState(\n         {\n            value: option.value,\n         },\n         () => {\n            const { value, sortDirection } = this.state\n            setValueCallback(value, sortDirection)\n         },\n      )\n      e.currentTarget.blur()\n   }\n\n   toggleSortDirection() {\n      const { setValueCallback } = this.props\n      const { sortDirection } = this.state\n      this.setState(\n         {\n            sortDirection: sortDirection === 'asc' ? 'desc' : 'asc',\n         },\n         () => {\n            const { value, sortDirection: newSortDirection } = this.state\n            setValueCallback(value, newSortDirection)\n         },\n      )\n   }\n\n   render() {\n      const { options, label, sort, defaultvalue, ...props } = this.props\n      const { value, isOpen, sortDirection } = this.state\n      const buttonDisplay = value ? options.find((x) => x.value === value).display : ''\n      return (\n         <Wrapper\n            tabIndex=\"0\"\n            onBlur={(e) => this.handleBlurDropdown.call(this, e)}\n            onFocus={(e) => this.handleFocusDropdown.call(this, e)}\n            isFocus={isOpen}\n            {...props}\n         >\n            <Select ref={this.Select} defaultValue={defaultvalue}>\n               {options &&\n                  options.map(({ _id, value: optValue, display }) => (\n                     <option key={_id} value={optValue}>\n                        {display}\n                     </option>\n                  ))}\n            </Select>\n            <Button active={isOpen}>\n               {label}:&nbsp;<Value>{buttonDisplay}</Value>\n               {sort && (\n                  <IconWrapper onClick={() => this.toggleSortDirection()}>\n                     <StyledIcon direction={sortDirection} />\n                  </IconWrapper>\n               )}\n            </Button>\n            {isOpen && (\n               <DropdownList>\n                  {options.map(({ _id, value: optValue, display }) => (\n                     <Option\n                        key={_id}\n                        value={optValue}\n                        selected={optValue === value}\n                        onClick={(e) => this.handleClickOption(e, optValue)}\n                     >\n                        {display}\n                     </Option>\n                  ))}\n               </DropdownList>\n            )}\n         </Wrapper>\n      )\n   }\n}\n\nDropdown.propTypes = {\n   options: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         value: PropTypes.string,\n         display: PropTypes.string,\n      }),\n   ),\n   label: PropTypes.string.isRequired,\n   sort: PropTypes.string,\n   defaultvalue: PropTypes.string.isRequired,\n   setValueCallback: PropTypes.func,\n}\n\nDropdown.defaultProps = {\n   options: null,\n   sort: null,\n   setValueCallback: () => {},\n}\n\nexport default Dropdown\n","import SearchIcon from '@material-ui/icons/Search'\nimport PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n   width: 200px;\n   height: 48px;\n   position: relative;\n   overflow: hidden;\n   border-radius: 24px;\n   display: inline-block;\n`\n\nconst Input = styled.input`\n   width: 200px;\n   height: 48px;\n   will-change: transform;\n   border: none;\n   border-radius: 24px;\n   background: ${({ theme }) => theme.bgSecondary};\n   color: ${({ theme }) => theme.fontPrimary};\n   font-size: ${({ theme }) => theme.fontSize.s};\n   padding-left: 24px;\n   padding-right: 28px;\n   transition: transform 0.3s ease-out;\n   transform: translateX(${({ active }) => (active ? 0 : 152)}px);\n   outline: none;\n\n   :focus {\n      transform: translateX(0px);\n   }\n\n   ::placeholder {\n      color: ${({ theme }) => theme.fontSecondary};\n   }\n`\n\nconst IconWrapper = styled.div`\n   width: 48px;\n   height: 48px;\n   position: absolute;\n   right: 0;\n   top: 0;\n   border-radius: 50%;\n   background: ${({ theme }) => theme.bgSecondary};\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   pointer-events: none;\n`\n\nconst StyledIcon = styled(SearchIcon)`\n   font-size: 24px !important;\n   color: ${({ theme }) => theme.fontPrimary} !important;\n`\n\nconst SearchInput = ({ label, defaultValue, setValueCallback, ...props }) => {\n   const [value, setValue] = useState(defaultValue)\n\n   return (\n      <Wrapper {...props}>\n         <Input\n            type=\"search\"\n            active={value !== ''}\n            placeholder={label}\n            defaultValue={defaultValue}\n            onChange={({ target: { value: changeValue } }) => {\n               setValue(changeValue)\n               setValueCallback(changeValue)\n            }}\n         />\n         <IconWrapper>\n            <StyledIcon />\n         </IconWrapper>\n      </Wrapper>\n   )\n}\n\nSearchInput.propTypes = {\n   label: PropTypes.string.isRequired,\n   setValueCallback: PropTypes.func,\n   defaultValue: PropTypes.string,\n}\n\nSearchInput.defaultProps = {\n   setValueCallback: () => {},\n   defaultValue: '',\n}\n\nexport default SearchInput\n","import {\n   setFilter as setFilterAction,\n   setSearch as setSearchAction,\n   setSort as setSortAction,\n} from 'actions/app'\nimport Dropdown from 'components/molecules/Dropdown/Dropdown'\nimport SearchInput from 'components/molecules/SearchInput/SearchInput'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { getPhrase } from 'Utils'\n\nconst Wrapper = styled.div`\n   min-height: 64px;\n   border-radius: 32px;\n   box-shadow: ${({ theme }) => theme.shadow.soft};\n   background: ${({ theme }) => theme.bgPrimary};\n   padding: 4px;\n   display: flex;\n   flex-wrap: wrap;\n   justify-content: space-between;\n`\n\nconst Section = styled.section`\n   display: flex;\n   flex-wrap: wrap;\n   justify-content: flex-end;\n`\n\nconst StyledDropdown = styled(Dropdown)`\n   margin: 4px;\n`\n\nconst StyledSearch = styled(SearchInput)`\n   margin: 4px;\n   margin-left: auto;\n`\n\nconst getDropdownData = (phrases, realizations, categories, technologies, language) => {\n   const sort = [\n      {\n         _id: 'sort-1',\n         value: 'date',\n         display: getPhrase(phrases, 'date', language),\n      },\n      {\n         _id: 'sort-2',\n         value: 'technologycount',\n         display: getPhrase(phrases, 'technologies', language),\n      },\n      {\n         _id: 'sort-3',\n         value: 'category',\n         display: getPhrase(phrases, 'category', language),\n      },\n   ]\n\n   const dropdownCategories = [\n      {\n         _id: 'category-0',\n         value: 'all',\n         display: getPhrase(phrases, 'all', language),\n         projectsCount: 9999999,\n      },\n   ]\n   const dropdownTechnologies = [\n      {\n         _id: 'technology-0',\n         value: 'all',\n         display: getPhrase(phrases, 'all', language),\n         projectsCount: 9999999,\n      },\n   ]\n\n   realizations.map((realization) => {\n      if (realization.categories) {\n         realization.categories.map((category) => {\n            const findedCategoryInDropdown = dropdownCategories.find((x) => x._id === category._id)\n            if (!findedCategoryInDropdown) {\n               const findedCategory = categories.find((x) => x._id === category._id)\n\n               const projectsCount = realizations.filter((x) =>\n                  x.categories.find((y) => y._id === category._id),\n               )\n               dropdownCategories.push({\n                  _id: findedCategory._id,\n                  value: findedCategory.name,\n                  display: findedCategory[language],\n                  projectsCount: projectsCount.length,\n               })\n            }\n            return 0\n         })\n      }\n      if (realization.technologies) {\n         realization.technologies.map((technology) => {\n            const findedTechnologyInDropdown = dropdownTechnologies.find(\n               (x) => x._id === technology._id,\n            )\n            if (!findedTechnologyInDropdown) {\n               const findedTechnology = technologies.find((x) => x._id === technology._id)\n\n               const projectsCount = realizations.filter((x) =>\n                  x.technologies.find((y) => y._id === technology._id),\n               )\n               dropdownTechnologies.push({\n                  _id: findedTechnology._id,\n                  value: findedTechnology.name,\n                  display: findedTechnology.name,\n                  projectsCount: projectsCount.length,\n               })\n            }\n            return 0\n         })\n      }\n      return 0\n   })\n\n   dropdownTechnologies.sort((a, b) => {\n      return b.projectsCount - a.projectsCount\n   })\n   dropdownCategories.sort((a, b) => {\n      return b.projectsCount - a.projectsCount\n   })\n\n   return {\n      sort,\n      categories: dropdownCategories,\n      technologies: dropdownTechnologies,\n   }\n}\n\nconst FilterPanel = ({\n   phrases,\n   realizations,\n   categories,\n   technologies,\n   language,\n   setSort,\n   setFilter,\n   setSearch,\n   sort,\n   filter,\n}) => {\n   const dropdownData =\n      phrases && realizations && categories && technologies\n         ? getDropdownData(phrases, realizations, categories, technologies, language)\n         : null\n\n   return (\n      <Wrapper>\n         <Section>\n            {dropdownData && (\n               <>\n                  <StyledDropdown\n                     options={dropdownData.sort}\n                     label={getPhrase(phrases, 'sort', language)}\n                     defaultvalue={sort.option}\n                     sort={sort.direction}\n                     setValueCallback={(value, direction) => {\n                        setSort(value, direction)\n                     }}\n                  />\n                  <StyledDropdown\n                     options={dropdownData.categories}\n                     label={getPhrase(phrases, 'category', language)}\n                     defaultvalue={filter.category}\n                     setValueCallback={(value) => {\n                        setFilter('category', value)\n                     }}\n                  />\n                  <StyledDropdown\n                     options={dropdownData.technologies}\n                     label={getPhrase(phrases, 'technology', language)}\n                     defaultvalue={filter.technology}\n                     setValueCallback={(value) => {\n                        setFilter('technology', value)\n                     }}\n                  />\n               </>\n            )}\n         </Section>\n         <StyledSearch\n            label={`${getPhrase(phrases, 'search', language)}...`}\n            defaultValue={filter.search}\n            setValueCallback={(value) => {\n               setSearch(value)\n            }}\n         />\n      </Wrapper>\n   )\n}\n\nFilterPanel.propTypes = {\n   phrases: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   realizations: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         pl_title: PropTypes.string,\n         en_title: PropTypes.string,\n         thumbnail: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n         pl_desctiption: PropTypes.string,\n         en_desctiption: PropTypes.string,\n         links: PropTypes.arrayOf(\n            PropTypes.shape({\n               field: PropTypes.shape({\n                  label: PropTypes.string,\n               }),\n               value: PropTypes.string,\n            }),\n         ),\n         _created: PropTypes.number,\n      }),\n   ),\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ),\n   language: PropTypes.string.isRequired,\n   sort: PropTypes.shape({\n      option: PropTypes.string,\n      direction: PropTypes.string,\n   }).isRequired,\n   filter: PropTypes.shape({\n      category: PropTypes.string,\n      technology: PropTypes.string,\n      search: PropTypes.string,\n   }).isRequired,\n   setSort: PropTypes.func.isRequired,\n   setFilter: PropTypes.func.isRequired,\n   setSearch: PropTypes.func.isRequired,\n}\n\nFilterPanel.defaultProps = {\n   phrases: null,\n   realizations: null,\n   categories: null,\n   technologies: null,\n}\n\nconst mapStateToProps = ({\n   api: { phrases, realizations, categories, technologies },\n   app: { language, sort, filter },\n}) => ({ phrases, realizations, categories, technologies, language, sort, filter })\n\nconst mapDispatchToProps = (dispatch) => ({\n   setSort: (option, direction) => dispatch(setSortAction(option, direction)),\n   setFilter: (type, value) => dispatch(setFilterAction(type, value)),\n   setSearch: (phrase) => dispatch(setSearchAction(phrase)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterPanel)\n","import Card from 'components/organisms/Card/Card'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { getDataByIds } from 'Utils'\n\nconst Wrapper = styled.section`\n   display: grid;\n   grid-template-columns: repeat(auto-fill, minmax(270px, auto));\n   /* grid-template-columns: repeat(3, calc(33.33333% - 26.5px)); */\n   grid-gap: 40px;\n`\n\nconst RealizationsGridTemplate = ({ realizations, categories, technologies, language }) => (\n   <Wrapper>\n      {realizations.map((realization) => {\n         const {\n            _id,\n            thumbnail: { path },\n            categories: refCategories,\n            technologies: refTechnologies,\n         } = realization\n\n         return (\n            <Card\n               key={_id}\n               link={`/realizations/${_id}`}\n               title={realization[`${language}_title`]}\n               image={path}\n               description={realization[`${language}_description`]}\n               categories={refCategories.length ? getDataByIds(refCategories, categories) : []}\n               technologies={\n                  refTechnologies.length ? getDataByIds(refTechnologies, technologies) : []\n               }\n            />\n         )\n      })}\n   </Wrapper>\n)\n\nRealizationsGridTemplate.propTypes = {\n   realizations: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         pl_title: PropTypes.string,\n         en_title: PropTypes.string,\n         thumbnail: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n         pl_desctiption: PropTypes.string,\n         en_desctiption: PropTypes.string,\n         links: PropTypes.arrayOf(\n            PropTypes.shape({\n               field: PropTypes.shape({\n                  label: PropTypes.string,\n               }),\n               value: PropTypes.string,\n            }),\n         ),\n      }),\n   ).isRequired,\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ).isRequired,\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ).isRequired,\n   language: PropTypes.string.isRequired,\n}\n\nexport default RealizationsGridTemplate\n","import bgRealizations from 'assets/backgrounds/realizations.png'\nimport BackgroundSection from 'components/atoms/BackgroundSection/BackgroundSection'\nimport Container from 'components/atoms/Container/Container'\nimport Divider from 'components/atoms/Divider/Divider'\nimport Heading from 'components/atoms/Heading/Heading'\nimport FilterPanel from 'components/organisms/FilterPanel/FilterPanel'\nimport PreloadCards from 'components/organisms/PreloadCard/PreloadCards'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport RealizationsGridTemplate from 'templates/RealizationsGridTemplate/RealizationsGridTemplate'\nimport { getPhrase } from 'Utils'\n\nclass Realizations extends React.Component {\n   filterRealizations() {\n      const { sort, filter, realizations, categories, language } = this.props\n\n      if (realizations) {\n         let filtered = [...realizations]\n         const sortTrue = sort.direction === 'desc' ? 1 : -1\n         const sortFalse = sort.direction === 'asc' ? 1 : -1\n\n         filtered = filtered.sort((a, b) => {\n            if (a._created > b._created) return sortTrue\n            if (a._created < b._created) return sortFalse\n            return 0\n         })\n\n         if (sort.option === 'technologycount') {\n            filtered = filtered.sort((a, b) => {\n               if (sort.direction === 'desc') return a.technologies.length - b.technologies.length\n               return b.technologies.length - a.technologies.length\n            })\n         } else if (sort.option === 'category') {\n            filtered = filtered.sort((a, b) => {\n               const firstCategoryA = a.categories[0]\n                  ? categories.find((x) => x.name === a.categories[0].display)\n                  : null\n               const firstCategoryB = a.categories[0]\n                  ? categories.find((x) => x.name === b.categories[0].display)\n                  : null\n               const displayA = firstCategoryA ? firstCategoryA[language] : ''\n               const displayB = firstCategoryB ? firstCategoryB[language] : ''\n               if (sort.direction === 'asc') return displayA.localeCompare(displayB)\n               return displayB.localeCompare(displayA)\n            })\n         }\n\n         if (filter.technology !== 'all') {\n            filtered = filtered.filter((x) => {\n               if (x.technologies && x.technologies.length) {\n                  return !!x.technologies.find((y) => y.display === filter.technology)\n               }\n               return false\n            })\n         }\n\n         if (filter.category !== 'all') {\n            filtered = filtered.filter((x) => {\n               if (x.categories && x.categories.length) {\n                  return !!x.categories.find((y) => y.display === filter.category)\n               }\n               return false\n            })\n         }\n\n         if (filter.search !== '') {\n            filtered = filtered.filter((x) => {\n               const phrase = filter.search.toLowerCase()\n               const title = x[`${language}_title`].toLowerCase()\n               const description = x[`${language}_description`].toLowerCase()\n               return title.includes(phrase) || description.includes(phrase)\n            })\n         }\n\n         return filtered\n      }\n      return null\n   }\n\n   render() {\n      const { phrases, realizations, categories, technologies, language } = this.props\n\n      return (\n         <BackgroundSection background={bgRealizations}>\n            <Container>\n               <Divider size=\"large\" mobile />\n               <Heading>{getPhrase(phrases, 'realizations', language)}</Heading>\n               <Divider size=\"medium\" />\n               <FilterPanel />\n               <Divider size=\"medium\" />\n               {realizations && categories && technologies ? (\n                  <RealizationsGridTemplate\n                     realizations={this.filterRealizations()}\n                     categories={categories}\n                     technologies={technologies}\n                     language={language}\n                  />\n               ) : (\n                  <PreloadCards />\n               )}\n               <Divider size=\"large\" />\n            </Container>\n         </BackgroundSection>\n      )\n   }\n}\n\nRealizations.propTypes = {\n   phrases: PropTypes.arrayOf(\n      PropTypes.shape({\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   realizations: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         pl_title: PropTypes.string,\n         en_title: PropTypes.string,\n         thumbnail: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n         pl_desctiption: PropTypes.string,\n         en_desctiption: PropTypes.string,\n         links: PropTypes.arrayOf(\n            PropTypes.shape({\n               field: PropTypes.shape({\n                  label: PropTypes.string,\n               }),\n               value: PropTypes.string,\n            }),\n         ),\n         _created: PropTypes.number,\n      }),\n   ),\n   categories: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         pl: PropTypes.string,\n         en: PropTypes.string,\n      }),\n   ),\n   technologies: PropTypes.arrayOf(\n      PropTypes.shape({\n         _id: PropTypes.string,\n         name: PropTypes.string,\n         image: PropTypes.shape({\n            path: PropTypes.string,\n         }),\n      }),\n   ),\n   language: PropTypes.string.isRequired,\n   sort: PropTypes.shape({\n      option: PropTypes.string,\n      direction: PropTypes.string,\n   }).isRequired,\n   filter: PropTypes.shape({\n      category: PropTypes.string,\n      technology: PropTypes.string,\n      search: PropTypes.string,\n   }).isRequired,\n}\n\nRealizations.defaultProps = {\n   phrases: null,\n   realizations: null,\n   categories: null,\n   technologies: null,\n}\n\nconst mapStateToProps = ({\n   api: { phrases, realizations, categories, technologies },\n   app: { language, sort, filter },\n}) => ({\n   phrases,\n   realizations,\n   categories,\n   technologies,\n   language,\n   sort,\n   filter,\n})\n\nexport default connect(mapStateToProps)(Realizations)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport SimpleReactLightbox from 'simple-react-lightbox'\nimport store from 'store'\nimport MainTemplate from 'templates/MainTemplate/MainTemplate'\nimport Home from 'views/Home'\nimport InfoPage from 'views/InfoPage'\nimport Realization from 'views/Realization'\nimport Realizations from 'views/Realizations'\n\nconst Root = () => {\n   return (\n      <Provider store={store}>\n         <SimpleReactLightbox>\n            <BrowserRouter>\n               <MainTemplate>\n                  <Switch>\n                     <Route path=\"/realizations/:id\" component={Realization} />\n                     <Route path=\"/realizations\" component={Realizations} />\n                     <Route path=\"/:page\" component={InfoPage} />\n                     <Route path=\"/\" component={Home} />\n                  </Switch>\n               </MainTemplate>\n            </BrowserRouter>\n         </SimpleReactLightbox>\n      </Provider>\n   )\n}\n\nexport default Root\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from 'reportWebVitals'\nimport Root from 'views/Root'\n\nReactDOM.render(\n   <React.StrictMode>\n      <Root />\n   </React.StrictMode>,\n   document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}